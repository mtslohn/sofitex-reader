/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package br.org.stela.intelectus.service.thrift;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-6-9")
public class DimensionalPessoaRecord implements org.apache.thrift.TBase<DimensionalPessoaRecord, DimensionalPessoaRecord._Fields>, java.io.Serializable,
		Cloneable, Comparable<DimensionalPessoaRecord> {
	private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("DimensionalPessoaRecord");

	private static final org.apache.thrift.protocol.TField ID_FIELD_DESC =
			new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.STRING, (short) 1);
	private static final org.apache.thrift.protocol.TField LAST_UPDATE_FIELD_DESC =
			new org.apache.thrift.protocol.TField("lastUpdate", org.apache.thrift.protocol.TType.I64, (short) 2);
	private static final org.apache.thrift.protocol.TField PROCESS_ID_FIELD_DESC =
			new org.apache.thrift.protocol.TField("processId", org.apache.thrift.protocol.TType.STRING, (short) 3);
	private static final org.apache.thrift.protocol.TField OPERATION_TYPE_FIELD_DESC =
			new org.apache.thrift.protocol.TField("operationType", org.apache.thrift.protocol.TType.I32, (short) 4);
	private static final org.apache.thrift.protocol.TField PESSOA_ANNOTATION_FIELD_DESC =
			new org.apache.thrift.protocol.TField("pessoaAnnotation", org.apache.thrift.protocol.TType.STRUCT, (short) 5);
	private static final org.apache.thrift.protocol.TField PESSOA_DIMENSIONAL_FIELD_DESC =
			new org.apache.thrift.protocol.TField("pessoaDimensional", org.apache.thrift.protocol.TType.STRUCT, (short) 6);

	private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();

	static {
		schemes.put(StandardScheme.class, new DimensionalPessoaRecordStandardSchemeFactory());
		schemes.put(TupleScheme.class, new DimensionalPessoaRecordTupleSchemeFactory());
	}

	private String id; // required
	private long lastUpdate; // required
	private String processId; // required
	private OperationType operationType; // required
	private PessoaAnnotation pessoaAnnotation; // required
	private PessoaDimensional pessoaDimensional; // required

	/** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
	public enum _Fields implements org.apache.thrift.TFieldIdEnum {
		ID((short) 1, "id"),
		LAST_UPDATE((short) 2, "lastUpdate"),
		PROCESS_ID((short) 3, "processId"),
		/**
		 * 
		 * @see OperationType
		 */
		OPERATION_TYPE((short) 4, "operationType"),
		PESSOA_ANNOTATION((short) 5, "pessoaAnnotation"),
		PESSOA_DIMENSIONAL((short) 6, "pessoaDimensional");

		private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

		static {
			for (_Fields field : EnumSet.allOf(_Fields.class)) {
				byName.put(field.getFieldName(), field);
			}
		}

		/**
		 * Find the _Fields constant that matches fieldId, or null if its not found.
		 */
		public static _Fields findByThriftId(int fieldId) {
			switch (fieldId) {
			case 1: // ID
				return ID;
			case 2: // LAST_UPDATE
				return LAST_UPDATE;
			case 3: // PROCESS_ID
				return PROCESS_ID;
			case 4: // OPERATION_TYPE
				return OPERATION_TYPE;
			case 5: // PESSOA_ANNOTATION
				return PESSOA_ANNOTATION;
			case 6: // PESSOA_DIMENSIONAL
				return PESSOA_DIMENSIONAL;
			default:
				return null;
			}
		}

		/**
		 * Find the _Fields constant that matches fieldId, throwing an exception if it is not found.
		 */
		public static _Fields findByThriftIdOrThrow(int fieldId) {
			_Fields fields = findByThriftId(fieldId);
			if (fields == null)
				throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
			return fields;
		}

		/**
		 * Find the _Fields constant that matches name, or null if its not found.
		 */
		public static _Fields findByName(String name) {
			return byName.get(name);
		}

		private final short _thriftId;
		private final String _fieldName;

		_Fields(short thriftId, String fieldName) {
			_thriftId = thriftId;
			_fieldName = fieldName;
		}

		public short getThriftFieldId() {
			return _thriftId;
		}

		public String getFieldName() {
			return _fieldName;
		}
	}

	// isset id assignments
	private static final int __LASTUPDATE_ISSET_ID = 0;
	private byte __isset_bitfield = 0;
	public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;

	static {
		Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
		tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.REQUIRED,
				new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
		tmpMap.put(_Fields.LAST_UPDATE, new org.apache.thrift.meta_data.FieldMetaData("lastUpdate", org.apache.thrift.TFieldRequirementType.REQUIRED,
				new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64, "timestamp")));
		tmpMap.put(_Fields.PROCESS_ID, new org.apache.thrift.meta_data.FieldMetaData("processId", org.apache.thrift.TFieldRequirementType.REQUIRED,
				new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
		tmpMap.put(_Fields.OPERATION_TYPE, new org.apache.thrift.meta_data.FieldMetaData("operationType", org.apache.thrift.TFieldRequirementType.REQUIRED,
				new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, OperationType.class)));
		tmpMap.put(_Fields.PESSOA_ANNOTATION,
				new org.apache.thrift.meta_data.FieldMetaData("pessoaAnnotation", org.apache.thrift.TFieldRequirementType.REQUIRED,
						new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, PessoaAnnotation.class)));
		tmpMap.put(_Fields.PESSOA_DIMENSIONAL,
				new org.apache.thrift.meta_data.FieldMetaData("pessoaDimensional", org.apache.thrift.TFieldRequirementType.REQUIRED,
						new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, PessoaDimensional.class)));
		metaDataMap = Collections.unmodifiableMap(tmpMap);
		org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(DimensionalPessoaRecord.class, metaDataMap);
	}

	public DimensionalPessoaRecord() {
	}

	public DimensionalPessoaRecord(String id, long lastUpdate, String processId, OperationType operationType, PessoaAnnotation pessoaAnnotation,
			PessoaDimensional pessoaDimensional) {
		this();
		this.id = id;
		this.lastUpdate = lastUpdate;
		setLastUpdateIsSet(true);
		this.processId = processId;
		this.operationType = operationType;
		this.pessoaAnnotation = pessoaAnnotation;
		this.pessoaDimensional = pessoaDimensional;
	}

	/**
	 * Performs a deep copy on <i>other</i>.
	 */
	public DimensionalPessoaRecord(DimensionalPessoaRecord other) {
		__isset_bitfield = other.__isset_bitfield;
		if (other.isSetId()) {
			this.id = other.id;
		}
		this.lastUpdate = other.lastUpdate;
		if (other.isSetProcessId()) {
			this.processId = other.processId;
		}
		if (other.isSetOperationType()) {
			this.operationType = other.operationType;
		}
		if (other.isSetPessoaAnnotation()) {
			this.pessoaAnnotation = new PessoaAnnotation(other.pessoaAnnotation);
		}
		if (other.isSetPessoaDimensional()) {
			this.pessoaDimensional = new PessoaDimensional(other.pessoaDimensional);
		}
	}

	public DimensionalPessoaRecord deepCopy() {
		return new DimensionalPessoaRecord(this);
	}

	@Override
	public void clear() {
		this.id = null;
		setLastUpdateIsSet(false);
		this.lastUpdate = 0;
		this.processId = null;
		this.operationType = null;
		this.pessoaAnnotation = null;
		this.pessoaDimensional = null;
	}

	public String getId() {
		return this.id;
	}

	public void setId(String id) {
		this.id = id;
	}

	public void unsetId() {
		this.id = null;
	}

	/** Returns true if field id is set (has been assigned a value) and false otherwise */
	public boolean isSetId() {
		return this.id != null;
	}

	public void setIdIsSet(boolean value) {
		if (!value) {
			this.id = null;
		}
	}

	public long getLastUpdate() {
		return this.lastUpdate;
	}

	public void setLastUpdate(long lastUpdate) {
		this.lastUpdate = lastUpdate;
		setLastUpdateIsSet(true);
	}

	public void unsetLastUpdate() {
		__isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __LASTUPDATE_ISSET_ID);
	}

	/** Returns true if field lastUpdate is set (has been assigned a value) and false otherwise */
	public boolean isSetLastUpdate() {
		return EncodingUtils.testBit(__isset_bitfield, __LASTUPDATE_ISSET_ID);
	}

	public void setLastUpdateIsSet(boolean value) {
		__isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __LASTUPDATE_ISSET_ID, value);
	}

	public String getProcessId() {
		return this.processId;
	}

	public void setProcessId(String processId) {
		this.processId = processId;
	}

	public void unsetProcessId() {
		this.processId = null;
	}

	/** Returns true if field processId is set (has been assigned a value) and false otherwise */
	public boolean isSetProcessId() {
		return this.processId != null;
	}

	public void setProcessIdIsSet(boolean value) {
		if (!value) {
			this.processId = null;
		}
	}

	/**
	 * 
	 * @see OperationType
	 */
	public OperationType getOperationType() {
		return this.operationType;
	}

	/**
	 * 
	 * @see OperationType
	 */
	public void setOperationType(OperationType operationType) {
		this.operationType = operationType;
	}

	public void unsetOperationType() {
		this.operationType = null;
	}

	/** Returns true if field operationType is set (has been assigned a value) and false otherwise */
	public boolean isSetOperationType() {
		return this.operationType != null;
	}

	public void setOperationTypeIsSet(boolean value) {
		if (!value) {
			this.operationType = null;
		}
	}

	public PessoaAnnotation getPessoaAnnotation() {
		return this.pessoaAnnotation;
	}

	public void setPessoaAnnotation(PessoaAnnotation pessoaAnnotation) {
		this.pessoaAnnotation = pessoaAnnotation;
	}

	public void unsetPessoaAnnotation() {
		this.pessoaAnnotation = null;
	}

	/** Returns true if field pessoaAnnotation is set (has been assigned a value) and false otherwise */
	public boolean isSetPessoaAnnotation() {
		return this.pessoaAnnotation != null;
	}

	public void setPessoaAnnotationIsSet(boolean value) {
		if (!value) {
			this.pessoaAnnotation = null;
		}
	}

	public PessoaDimensional getPessoaDimensional() {
		return this.pessoaDimensional;
	}

	public void setPessoaDimensional(PessoaDimensional pessoaDimensional) {
		this.pessoaDimensional = pessoaDimensional;
	}

	public void unsetPessoaDimensional() {
		this.pessoaDimensional = null;
	}

	/** Returns true if field pessoaDimensional is set (has been assigned a value) and false otherwise */
	public boolean isSetPessoaDimensional() {
		return this.pessoaDimensional != null;
	}

	public void setPessoaDimensionalIsSet(boolean value) {
		if (!value) {
			this.pessoaDimensional = null;
		}
	}

	public void setFieldValue(_Fields field, Object value) {
		switch (field) {
		case ID:
			if (value == null) {
				unsetId();
			} else {
				setId((String) value);
			}
			break;

		case LAST_UPDATE:
			if (value == null) {
				unsetLastUpdate();
			} else {
				setLastUpdate((Long) value);
			}
			break;

		case PROCESS_ID:
			if (value == null) {
				unsetProcessId();
			} else {
				setProcessId((String) value);
			}
			break;

		case OPERATION_TYPE:
			if (value == null) {
				unsetOperationType();
			} else {
				setOperationType((OperationType) value);
			}
			break;

		case PESSOA_ANNOTATION:
			if (value == null) {
				unsetPessoaAnnotation();
			} else {
				setPessoaAnnotation((PessoaAnnotation) value);
			}
			break;

		case PESSOA_DIMENSIONAL:
			if (value == null) {
				unsetPessoaDimensional();
			} else {
				setPessoaDimensional((PessoaDimensional) value);
			}
			break;

		}
	}

	public Object getFieldValue(_Fields field) {
		switch (field) {
		case ID:
			return getId();

		case LAST_UPDATE:
			return Long.valueOf(getLastUpdate());

		case PROCESS_ID:
			return getProcessId();

		case OPERATION_TYPE:
			return getOperationType();

		case PESSOA_ANNOTATION:
			return getPessoaAnnotation();

		case PESSOA_DIMENSIONAL:
			return getPessoaDimensional();

		}
		throw new IllegalStateException();
	}

	/** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
	public boolean isSet(_Fields field) {
		if (field == null) {
			throw new IllegalArgumentException();
		}

		switch (field) {
		case ID:
			return isSetId();
		case LAST_UPDATE:
			return isSetLastUpdate();
		case PROCESS_ID:
			return isSetProcessId();
		case OPERATION_TYPE:
			return isSetOperationType();
		case PESSOA_ANNOTATION:
			return isSetPessoaAnnotation();
		case PESSOA_DIMENSIONAL:
			return isSetPessoaDimensional();
		}
		throw new IllegalStateException();
	}

	@Override
	public boolean equals(Object that) {
		if (that == null)
			return false;
		if (that instanceof DimensionalPessoaRecord)
			return this.equals((DimensionalPessoaRecord) that);
		return false;
	}

	public boolean equals(DimensionalPessoaRecord that) {
		if (that == null)
			return false;

		boolean this_present_id = true && this.isSetId();
		boolean that_present_id = true && that.isSetId();
		if (this_present_id || that_present_id) {
			if (!(this_present_id && that_present_id))
				return false;
			if (!this.id.equals(that.id))
				return false;
		}

		boolean this_present_lastUpdate = true;
		boolean that_present_lastUpdate = true;
		if (this_present_lastUpdate || that_present_lastUpdate) {
			if (!(this_present_lastUpdate && that_present_lastUpdate))
				return false;
			if (this.lastUpdate != that.lastUpdate)
				return false;
		}

		boolean this_present_processId = true && this.isSetProcessId();
		boolean that_present_processId = true && that.isSetProcessId();
		if (this_present_processId || that_present_processId) {
			if (!(this_present_processId && that_present_processId))
				return false;
			if (!this.processId.equals(that.processId))
				return false;
		}

		boolean this_present_operationType = true && this.isSetOperationType();
		boolean that_present_operationType = true && that.isSetOperationType();
		if (this_present_operationType || that_present_operationType) {
			if (!(this_present_operationType && that_present_operationType))
				return false;
			if (!this.operationType.equals(that.operationType))
				return false;
		}

		boolean this_present_pessoaAnnotation = true && this.isSetPessoaAnnotation();
		boolean that_present_pessoaAnnotation = true && that.isSetPessoaAnnotation();
		if (this_present_pessoaAnnotation || that_present_pessoaAnnotation) {
			if (!(this_present_pessoaAnnotation && that_present_pessoaAnnotation))
				return false;
			if (!this.pessoaAnnotation.equals(that.pessoaAnnotation))
				return false;
		}

		boolean this_present_pessoaDimensional = true && this.isSetPessoaDimensional();
		boolean that_present_pessoaDimensional = true && that.isSetPessoaDimensional();
		if (this_present_pessoaDimensional || that_present_pessoaDimensional) {
			if (!(this_present_pessoaDimensional && that_present_pessoaDimensional))
				return false;
			if (!this.pessoaDimensional.equals(that.pessoaDimensional))
				return false;
		}

		return true;
	}

	@Override
	public int hashCode() {
		List<Object> list = new ArrayList<Object>();

		boolean present_id = true && (isSetId());
		list.add(present_id);
		if (present_id)
			list.add(id);

		boolean present_lastUpdate = true;
		list.add(present_lastUpdate);
		if (present_lastUpdate)
			list.add(lastUpdate);

		boolean present_processId = true && (isSetProcessId());
		list.add(present_processId);
		if (present_processId)
			list.add(processId);

		boolean present_operationType = true && (isSetOperationType());
		list.add(present_operationType);
		if (present_operationType)
			list.add(operationType.getValue());

		boolean present_pessoaAnnotation = true && (isSetPessoaAnnotation());
		list.add(present_pessoaAnnotation);
		if (present_pessoaAnnotation)
			list.add(pessoaAnnotation);

		boolean present_pessoaDimensional = true && (isSetPessoaDimensional());
		list.add(present_pessoaDimensional);
		if (present_pessoaDimensional)
			list.add(pessoaDimensional);

		return list.hashCode();
	}

	@Override
	public int compareTo(DimensionalPessoaRecord other) {
		if (!getClass().equals(other.getClass())) {
			return getClass().getName().compareTo(other.getClass().getName());
		}

		int lastComparison = 0;

		lastComparison = Boolean.valueOf(isSetId()).compareTo(other.isSetId());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetId()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetLastUpdate()).compareTo(other.isSetLastUpdate());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetLastUpdate()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.lastUpdate, other.lastUpdate);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetProcessId()).compareTo(other.isSetProcessId());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetProcessId()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.processId, other.processId);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetOperationType()).compareTo(other.isSetOperationType());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetOperationType()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.operationType, other.operationType);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetPessoaAnnotation()).compareTo(other.isSetPessoaAnnotation());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetPessoaAnnotation()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pessoaAnnotation, other.pessoaAnnotation);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetPessoaDimensional()).compareTo(other.isSetPessoaDimensional());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetPessoaDimensional()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pessoaDimensional, other.pessoaDimensional);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		return 0;
	}

	public _Fields fieldForId(int fieldId) {
		return _Fields.findByThriftId(fieldId);
	}

	public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
		schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
	}

	public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
		schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder("DimensionalPessoaRecord(");
		boolean first = true;

		sb.append("id:");
		if (this.id == null) {
			sb.append("null");
		} else {
			sb.append(this.id);
		}
		first = false;
		if (!first)
			sb.append(", ");
		sb.append("lastUpdate:");
		sb.append(this.lastUpdate);
		first = false;
		if (!first)
			sb.append(", ");
		sb.append("processId:");
		if (this.processId == null) {
			sb.append("null");
		} else {
			sb.append(this.processId);
		}
		first = false;
		if (!first)
			sb.append(", ");
		sb.append("operationType:");
		if (this.operationType == null) {
			sb.append("null");
		} else {
			sb.append(this.operationType);
		}
		first = false;
		if (!first)
			sb.append(", ");
		sb.append("pessoaAnnotation:");
		if (this.pessoaAnnotation == null) {
			sb.append("null");
		} else {
			sb.append(this.pessoaAnnotation);
		}
		first = false;
		if (!first)
			sb.append(", ");
		sb.append("pessoaDimensional:");
		if (this.pessoaDimensional == null) {
			sb.append("null");
		} else {
			sb.append(this.pessoaDimensional);
		}
		first = false;
		sb.append(")");
		return sb.toString();
	}

	public void validate() throws org.apache.thrift.TException {
		// check for required fields
		if (!isSetId()) {
			throw new org.apache.thrift.protocol.TProtocolException("Required field 'id' is unset! Struct:" + toString());
		}

		if (!isSetLastUpdate()) {
			throw new org.apache.thrift.protocol.TProtocolException("Required field 'lastUpdate' is unset! Struct:" + toString());
		}

		if (!isSetProcessId()) {
			throw new org.apache.thrift.protocol.TProtocolException("Required field 'processId' is unset! Struct:" + toString());
		}

		if (!isSetOperationType()) {
			throw new org.apache.thrift.protocol.TProtocolException("Required field 'operationType' is unset! Struct:" + toString());
		}

		if (!isSetPessoaAnnotation()) {
			throw new org.apache.thrift.protocol.TProtocolException("Required field 'pessoaAnnotation' is unset! Struct:" + toString());
		}

		if (!isSetPessoaDimensional()) {
			throw new org.apache.thrift.protocol.TProtocolException("Required field 'pessoaDimensional' is unset! Struct:" + toString());
		}

		// check for sub-struct validity
		if (pessoaAnnotation != null) {
			pessoaAnnotation.validate();
		}
		if (pessoaDimensional != null) {
			pessoaDimensional.validate();
		}
	}

	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
		try {
			write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
		} catch (org.apache.thrift.TException te) {
			throw new java.io.IOException(te);
		}
	}

	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
		try {
			// it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
			__isset_bitfield = 0;
			read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
		} catch (org.apache.thrift.TException te) {
			throw new java.io.IOException(te);
		}
	}

	private static class DimensionalPessoaRecordStandardSchemeFactory implements SchemeFactory {
		public DimensionalPessoaRecordStandardScheme getScheme() {
			return new DimensionalPessoaRecordStandardScheme();
		}
	}

	private static class DimensionalPessoaRecordStandardScheme extends StandardScheme<DimensionalPessoaRecord> {

		public void read(org.apache.thrift.protocol.TProtocol iprot, DimensionalPessoaRecord struct) throws org.apache.thrift.TException {
			org.apache.thrift.protocol.TField schemeField;
			iprot.readStructBegin();
			while (true) {
				schemeField = iprot.readFieldBegin();
				if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
					break;
				}
				switch (schemeField.id) {
				case 1: // ID
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.id = iprot.readString();
						struct.setIdIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 2: // LAST_UPDATE
					if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
						struct.lastUpdate = iprot.readI64();
						struct.setLastUpdateIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 3: // PROCESS_ID
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.processId = iprot.readString();
						struct.setProcessIdIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 4: // OPERATION_TYPE
					if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
						struct.operationType = br.org.stela.intelectus.service.thrift.OperationType.findByValue(iprot.readI32());
						struct.setOperationTypeIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 5: // PESSOA_ANNOTATION
					if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
						struct.pessoaAnnotation = new PessoaAnnotation();
						struct.pessoaAnnotation.read(iprot);
						struct.setPessoaAnnotationIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 6: // PESSOA_DIMENSIONAL
					if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
						struct.pessoaDimensional = new PessoaDimensional();
						struct.pessoaDimensional.read(iprot);
						struct.setPessoaDimensionalIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				default:
					org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
				}
				iprot.readFieldEnd();
			}
			iprot.readStructEnd();
			struct.validate();
		}

		public void write(org.apache.thrift.protocol.TProtocol oprot, DimensionalPessoaRecord struct) throws org.apache.thrift.TException {
			struct.validate();

			oprot.writeStructBegin(STRUCT_DESC);
			if (struct.id != null) {
				oprot.writeFieldBegin(ID_FIELD_DESC);
				oprot.writeString(struct.id);
				oprot.writeFieldEnd();
			}
			oprot.writeFieldBegin(LAST_UPDATE_FIELD_DESC);
			oprot.writeI64(struct.lastUpdate);
			oprot.writeFieldEnd();
			if (struct.processId != null) {
				oprot.writeFieldBegin(PROCESS_ID_FIELD_DESC);
				oprot.writeString(struct.processId);
				oprot.writeFieldEnd();
			}
			if (struct.operationType != null) {
				oprot.writeFieldBegin(OPERATION_TYPE_FIELD_DESC);
				oprot.writeI32(struct.operationType.getValue());
				oprot.writeFieldEnd();
			}
			if (struct.pessoaAnnotation != null) {
				oprot.writeFieldBegin(PESSOA_ANNOTATION_FIELD_DESC);
				struct.pessoaAnnotation.write(oprot);
				oprot.writeFieldEnd();
			}
			if (struct.pessoaDimensional != null) {
				oprot.writeFieldBegin(PESSOA_DIMENSIONAL_FIELD_DESC);
				struct.pessoaDimensional.write(oprot);
				oprot.writeFieldEnd();
			}
			oprot.writeFieldStop();
			oprot.writeStructEnd();
		}

	}

	private static class DimensionalPessoaRecordTupleSchemeFactory implements SchemeFactory {
		public DimensionalPessoaRecordTupleScheme getScheme() {
			return new DimensionalPessoaRecordTupleScheme();
		}
	}

	private static class DimensionalPessoaRecordTupleScheme extends TupleScheme<DimensionalPessoaRecord> {

		@Override
		public void write(org.apache.thrift.protocol.TProtocol prot, DimensionalPessoaRecord struct) throws org.apache.thrift.TException {
			TTupleProtocol oprot = (TTupleProtocol) prot;
			oprot.writeString(struct.id);
			oprot.writeI64(struct.lastUpdate);
			oprot.writeString(struct.processId);
			oprot.writeI32(struct.operationType.getValue());
			struct.pessoaAnnotation.write(oprot);
			struct.pessoaDimensional.write(oprot);
		}

		@Override
		public void read(org.apache.thrift.protocol.TProtocol prot, DimensionalPessoaRecord struct) throws org.apache.thrift.TException {
			TTupleProtocol iprot = (TTupleProtocol) prot;
			struct.id = iprot.readString();
			struct.setIdIsSet(true);
			struct.lastUpdate = iprot.readI64();
			struct.setLastUpdateIsSet(true);
			struct.processId = iprot.readString();
			struct.setProcessIdIsSet(true);
			struct.operationType = br.org.stela.intelectus.service.thrift.OperationType.findByValue(iprot.readI32());
			struct.setOperationTypeIsSet(true);
			struct.pessoaAnnotation = new PessoaAnnotation();
			struct.pessoaAnnotation.read(iprot);
			struct.setPessoaAnnotationIsSet(true);
			struct.pessoaDimensional = new PessoaDimensional();
			struct.pessoaDimensional.read(iprot);
			struct.setPessoaDimensionalIsSet(true);
		}
	}

}
