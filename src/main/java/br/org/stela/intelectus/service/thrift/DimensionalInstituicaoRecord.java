/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package br.org.stela.intelectus.service.thrift;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-6-9")
public class DimensionalInstituicaoRecord implements org.apache.thrift.TBase<DimensionalInstituicaoRecord, DimensionalInstituicaoRecord._Fields>,
		java.io.Serializable, Cloneable, Comparable<DimensionalInstituicaoRecord> {
	private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("DimensionalInstituicaoRecord");

	private static final org.apache.thrift.protocol.TField ID_FIELD_DESC =
			new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.STRING, (short) 1);
	private static final org.apache.thrift.protocol.TField LAST_UPDATE_FIELD_DESC =
			new org.apache.thrift.protocol.TField("lastUpdate", org.apache.thrift.protocol.TType.I64, (short) 2);
	private static final org.apache.thrift.protocol.TField PROCESS_ID_FIELD_DESC =
			new org.apache.thrift.protocol.TField("processId", org.apache.thrift.protocol.TType.STRING, (short) 3);
	private static final org.apache.thrift.protocol.TField OPERATION_TYPE_FIELD_DESC =
			new org.apache.thrift.protocol.TField("operationType", org.apache.thrift.protocol.TType.I32, (short) 4);
	private static final org.apache.thrift.protocol.TField INSTITUICAO_FIELD_DESC =
			new org.apache.thrift.protocol.TField("instituicao", org.apache.thrift.protocol.TType.STRUCT, (short) 5);
	private static final org.apache.thrift.protocol.TField TOTAL_ESTUDANTE_FIELD_DESC =
			new org.apache.thrift.protocol.TField("totalEstudante", org.apache.thrift.protocol.TType.I32, (short) 6);
	private static final org.apache.thrift.protocol.TField TOTAL_EGRESSO_FIELD_DESC =
			new org.apache.thrift.protocol.TField("totalEgresso", org.apache.thrift.protocol.TType.I32, (short) 7);
	private static final org.apache.thrift.protocol.TField TOTAL_ENDERECO_FIELD_DESC =
			new org.apache.thrift.protocol.TField("totalEndereco", org.apache.thrift.protocol.TType.I32, (short) 8);
	private static final org.apache.thrift.protocol.TField TOTAL_ATIVIDADE_FIELD_DESC =
			new org.apache.thrift.protocol.TField("totalAtividade", org.apache.thrift.protocol.TType.I32, (short) 9);
	private static final org.apache.thrift.protocol.TField TIPOS_PRODUCOES_FIELD_DESC =
			new org.apache.thrift.protocol.TField("tiposProducoes", org.apache.thrift.protocol.TType.LIST, (short) 10);
	private static final org.apache.thrift.protocol.TField ANOS_PRODUCOES_FIELD_DESC =
			new org.apache.thrift.protocol.TField("anosProducoes", org.apache.thrift.protocol.TType.LIST, (short) 11);
	private static final org.apache.thrift.protocol.TField NIVEIS_TITULACOES_MAXIMAS_FIELD_DESC =
			new org.apache.thrift.protocol.TField("niveisTitulacoesMaximas", org.apache.thrift.protocol.TType.LIST, (short) 12);
	private static final org.apache.thrift.protocol.TField AREAS_TITULACOES_MAXIMAS_FIELD_DESC =
			new org.apache.thrift.protocol.TField("areasTitulacoesMaximas", org.apache.thrift.protocol.TType.LIST, (short) 13);
	private static final org.apache.thrift.protocol.TField ANOS_TITULACOES_MAXIMAS_FIELD_DESC =
			new org.apache.thrift.protocol.TField("anosTitulacoesMaximas", org.apache.thrift.protocol.TType.LIST, (short) 14);
	private static final org.apache.thrift.protocol.TField PESSOAS_ANNOTATIONS_FIELD_DESC =
			new org.apache.thrift.protocol.TField("pessoasAnnotations", org.apache.thrift.protocol.TType.MAP, (short) 15);

	private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();

	static {
		schemes.put(StandardScheme.class, new DimensionalInstituicaoRecordStandardSchemeFactory());
		schemes.put(TupleScheme.class, new DimensionalInstituicaoRecordTupleSchemeFactory());
	}

	private String id; // required
	private long lastUpdate; // required
	private String processId; // required
	private OperationType operationType; // required
	private br.org.stela.intelectus.lattes.thrift.Instituicao instituicao; // required
	private int totalEstudante; // required
	private int totalEgresso; // required
	private int totalEndereco; // required
	private int totalAtividade; // required
	private List<AnnotationValue> tiposProducoes; // required
	private List<AnnotationValue> anosProducoes; // required
	private List<AnnotationValue> niveisTitulacoesMaximas; // required
	private List<AnnotationValue> areasTitulacoesMaximas; // required
	private List<AnnotationValue> anosTitulacoesMaximas; // required
	private Map<AnnotationType, List<AnnotationValue>> pessoasAnnotations; // required

	/** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
	public enum _Fields implements org.apache.thrift.TFieldIdEnum {
		ID((short) 1, "id"),
		LAST_UPDATE((short) 2, "lastUpdate"),
		PROCESS_ID((short) 3, "processId"),
		/**
		 * 
		 * @see OperationType
		 */
		OPERATION_TYPE((short) 4, "operationType"),
		INSTITUICAO((short) 5, "instituicao"),
		TOTAL_ESTUDANTE((short) 6, "totalEstudante"),
		TOTAL_EGRESSO((short) 7, "totalEgresso"),
		TOTAL_ENDERECO((short) 8, "totalEndereco"),
		TOTAL_ATIVIDADE((short) 9, "totalAtividade"),
		TIPOS_PRODUCOES((short) 10, "tiposProducoes"),
		ANOS_PRODUCOES((short) 11, "anosProducoes"),
		NIVEIS_TITULACOES_MAXIMAS((short) 12, "niveisTitulacoesMaximas"),
		AREAS_TITULACOES_MAXIMAS((short) 13, "areasTitulacoesMaximas"),
		ANOS_TITULACOES_MAXIMAS((short) 14, "anosTitulacoesMaximas"),
		PESSOAS_ANNOTATIONS((short) 15, "pessoasAnnotations");

		private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

		static {
			for (_Fields field : EnumSet.allOf(_Fields.class)) {
				byName.put(field.getFieldName(), field);
			}
		}

		/**
		 * Find the _Fields constant that matches fieldId, or null if its not found.
		 */
		public static _Fields findByThriftId(int fieldId) {
			switch (fieldId) {
			case 1: // ID
				return ID;
			case 2: // LAST_UPDATE
				return LAST_UPDATE;
			case 3: // PROCESS_ID
				return PROCESS_ID;
			case 4: // OPERATION_TYPE
				return OPERATION_TYPE;
			case 5: // INSTITUICAO
				return INSTITUICAO;
			case 6: // TOTAL_ESTUDANTE
				return TOTAL_ESTUDANTE;
			case 7: // TOTAL_EGRESSO
				return TOTAL_EGRESSO;
			case 8: // TOTAL_ENDERECO
				return TOTAL_ENDERECO;
			case 9: // TOTAL_ATIVIDADE
				return TOTAL_ATIVIDADE;
			case 10: // TIPOS_PRODUCOES
				return TIPOS_PRODUCOES;
			case 11: // ANOS_PRODUCOES
				return ANOS_PRODUCOES;
			case 12: // NIVEIS_TITULACOES_MAXIMAS
				return NIVEIS_TITULACOES_MAXIMAS;
			case 13: // AREAS_TITULACOES_MAXIMAS
				return AREAS_TITULACOES_MAXIMAS;
			case 14: // ANOS_TITULACOES_MAXIMAS
				return ANOS_TITULACOES_MAXIMAS;
			case 15: // PESSOAS_ANNOTATIONS
				return PESSOAS_ANNOTATIONS;
			default:
				return null;
			}
		}

		/**
		 * Find the _Fields constant that matches fieldId, throwing an exception if it is not found.
		 */
		public static _Fields findByThriftIdOrThrow(int fieldId) {
			_Fields fields = findByThriftId(fieldId);
			if (fields == null)
				throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
			return fields;
		}

		/**
		 * Find the _Fields constant that matches name, or null if its not found.
		 */
		public static _Fields findByName(String name) {
			return byName.get(name);
		}

		private final short _thriftId;
		private final String _fieldName;

		_Fields(short thriftId, String fieldName) {
			_thriftId = thriftId;
			_fieldName = fieldName;
		}

		public short getThriftFieldId() {
			return _thriftId;
		}

		public String getFieldName() {
			return _fieldName;
		}
	}

	// isset id assignments
	private static final int __LASTUPDATE_ISSET_ID = 0;
	private static final int __TOTALESTUDANTE_ISSET_ID = 1;
	private static final int __TOTALEGRESSO_ISSET_ID = 2;
	private static final int __TOTALENDERECO_ISSET_ID = 3;
	private static final int __TOTALATIVIDADE_ISSET_ID = 4;
	private byte __isset_bitfield = 0;
	public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;

	static {
		Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
		tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.REQUIRED,
				new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
		tmpMap.put(_Fields.LAST_UPDATE, new org.apache.thrift.meta_data.FieldMetaData("lastUpdate", org.apache.thrift.TFieldRequirementType.REQUIRED,
				new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64, "timestamp")));
		tmpMap.put(_Fields.PROCESS_ID, new org.apache.thrift.meta_data.FieldMetaData("processId", org.apache.thrift.TFieldRequirementType.REQUIRED,
				new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
		tmpMap.put(_Fields.OPERATION_TYPE, new org.apache.thrift.meta_data.FieldMetaData("operationType", org.apache.thrift.TFieldRequirementType.REQUIRED,
				new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, OperationType.class)));
		tmpMap.put(_Fields.INSTITUICAO,
				new org.apache.thrift.meta_data.FieldMetaData("instituicao", org.apache.thrift.TFieldRequirementType.REQUIRED,
						new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT,
								br.org.stela.intelectus.lattes.thrift.Instituicao.class)));
		tmpMap.put(_Fields.TOTAL_ESTUDANTE, new org.apache.thrift.meta_data.FieldMetaData("totalEstudante", org.apache.thrift.TFieldRequirementType.REQUIRED,
				new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32, "int")));
		tmpMap.put(_Fields.TOTAL_EGRESSO, new org.apache.thrift.meta_data.FieldMetaData("totalEgresso", org.apache.thrift.TFieldRequirementType.REQUIRED,
				new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32, "int")));
		tmpMap.put(_Fields.TOTAL_ENDERECO, new org.apache.thrift.meta_data.FieldMetaData("totalEndereco", org.apache.thrift.TFieldRequirementType.REQUIRED,
				new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32, "int")));
		tmpMap.put(_Fields.TOTAL_ATIVIDADE, new org.apache.thrift.meta_data.FieldMetaData("totalAtividade", org.apache.thrift.TFieldRequirementType.REQUIRED,
				new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32, "int")));
		tmpMap.put(_Fields.TIPOS_PRODUCOES,
				new org.apache.thrift.meta_data.FieldMetaData("tiposProducoes", org.apache.thrift.TFieldRequirementType.REQUIRED,
						new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST,
								new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, AnnotationValue.class))));
		tmpMap.put(_Fields.ANOS_PRODUCOES,
				new org.apache.thrift.meta_data.FieldMetaData("anosProducoes", org.apache.thrift.TFieldRequirementType.REQUIRED,
						new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST,
								new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, AnnotationValue.class))));
		tmpMap.put(_Fields.NIVEIS_TITULACOES_MAXIMAS,
				new org.apache.thrift.meta_data.FieldMetaData("niveisTitulacoesMaximas", org.apache.thrift.TFieldRequirementType.REQUIRED,
						new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST,
								new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, AnnotationValue.class))));
		tmpMap.put(_Fields.AREAS_TITULACOES_MAXIMAS,
				new org.apache.thrift.meta_data.FieldMetaData("areasTitulacoesMaximas", org.apache.thrift.TFieldRequirementType.REQUIRED,
						new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST,
								new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, AnnotationValue.class))));
		tmpMap.put(_Fields.ANOS_TITULACOES_MAXIMAS,
				new org.apache.thrift.meta_data.FieldMetaData("anosTitulacoesMaximas", org.apache.thrift.TFieldRequirementType.REQUIRED,
						new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST,
								new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, AnnotationValue.class))));
		tmpMap.put(_Fields.PESSOAS_ANNOTATIONS,
				new org.apache.thrift.meta_data.FieldMetaData("pessoasAnnotations", org.apache.thrift.TFieldRequirementType.REQUIRED,
						new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP,
								new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, AnnotationType.class),
								new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST,
										new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, AnnotationValue.class)))));
		metaDataMap = Collections.unmodifiableMap(tmpMap);
		org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(DimensionalInstituicaoRecord.class, metaDataMap);
	}

	public DimensionalInstituicaoRecord() {
	}

	public DimensionalInstituicaoRecord(String id, long lastUpdate, String processId, OperationType operationType,
			br.org.stela.intelectus.lattes.thrift.Instituicao instituicao, int totalEstudante, int totalEgresso, int totalEndereco, int totalAtividade,
			List<AnnotationValue> tiposProducoes, List<AnnotationValue> anosProducoes, List<AnnotationValue> niveisTitulacoesMaximas,
			List<AnnotationValue> areasTitulacoesMaximas, List<AnnotationValue> anosTitulacoesMaximas,
			Map<AnnotationType, List<AnnotationValue>> pessoasAnnotations) {
		this();
		this.id = id;
		this.lastUpdate = lastUpdate;
		setLastUpdateIsSet(true);
		this.processId = processId;
		this.operationType = operationType;
		this.instituicao = instituicao;
		this.totalEstudante = totalEstudante;
		setTotalEstudanteIsSet(true);
		this.totalEgresso = totalEgresso;
		setTotalEgressoIsSet(true);
		this.totalEndereco = totalEndereco;
		setTotalEnderecoIsSet(true);
		this.totalAtividade = totalAtividade;
		setTotalAtividadeIsSet(true);
		this.tiposProducoes = tiposProducoes;
		this.anosProducoes = anosProducoes;
		this.niveisTitulacoesMaximas = niveisTitulacoesMaximas;
		this.areasTitulacoesMaximas = areasTitulacoesMaximas;
		this.anosTitulacoesMaximas = anosTitulacoesMaximas;
		this.pessoasAnnotations = pessoasAnnotations;
	}

	/**
	 * Performs a deep copy on <i>other</i>.
	 */
	public DimensionalInstituicaoRecord(DimensionalInstituicaoRecord other) {
		__isset_bitfield = other.__isset_bitfield;
		if (other.isSetId()) {
			this.id = other.id;
		}
		this.lastUpdate = other.lastUpdate;
		if (other.isSetProcessId()) {
			this.processId = other.processId;
		}
		if (other.isSetOperationType()) {
			this.operationType = other.operationType;
		}
		if (other.isSetInstituicao()) {
			this.instituicao = new br.org.stela.intelectus.lattes.thrift.Instituicao(other.instituicao);
		}
		this.totalEstudante = other.totalEstudante;
		this.totalEgresso = other.totalEgresso;
		this.totalEndereco = other.totalEndereco;
		this.totalAtividade = other.totalAtividade;
		if (other.isSetTiposProducoes()) {
			List<AnnotationValue> __this__tiposProducoes = new ArrayList<AnnotationValue>(other.tiposProducoes.size());
			for (AnnotationValue other_element : other.tiposProducoes) {
				__this__tiposProducoes.add(new AnnotationValue(other_element));
			}
			this.tiposProducoes = __this__tiposProducoes;
		}
		if (other.isSetAnosProducoes()) {
			List<AnnotationValue> __this__anosProducoes = new ArrayList<AnnotationValue>(other.anosProducoes.size());
			for (AnnotationValue other_element : other.anosProducoes) {
				__this__anosProducoes.add(new AnnotationValue(other_element));
			}
			this.anosProducoes = __this__anosProducoes;
		}
		if (other.isSetNiveisTitulacoesMaximas()) {
			List<AnnotationValue> __this__niveisTitulacoesMaximas = new ArrayList<AnnotationValue>(other.niveisTitulacoesMaximas.size());
			for (AnnotationValue other_element : other.niveisTitulacoesMaximas) {
				__this__niveisTitulacoesMaximas.add(new AnnotationValue(other_element));
			}
			this.niveisTitulacoesMaximas = __this__niveisTitulacoesMaximas;
		}
		if (other.isSetAreasTitulacoesMaximas()) {
			List<AnnotationValue> __this__areasTitulacoesMaximas = new ArrayList<AnnotationValue>(other.areasTitulacoesMaximas.size());
			for (AnnotationValue other_element : other.areasTitulacoesMaximas) {
				__this__areasTitulacoesMaximas.add(new AnnotationValue(other_element));
			}
			this.areasTitulacoesMaximas = __this__areasTitulacoesMaximas;
		}
		if (other.isSetAnosTitulacoesMaximas()) {
			List<AnnotationValue> __this__anosTitulacoesMaximas = new ArrayList<AnnotationValue>(other.anosTitulacoesMaximas.size());
			for (AnnotationValue other_element : other.anosTitulacoesMaximas) {
				__this__anosTitulacoesMaximas.add(new AnnotationValue(other_element));
			}
			this.anosTitulacoesMaximas = __this__anosTitulacoesMaximas;
		}
		if (other.isSetPessoasAnnotations()) {
			Map<AnnotationType, List<AnnotationValue>> __this__pessoasAnnotations =
					new HashMap<AnnotationType, List<AnnotationValue>>(other.pessoasAnnotations.size());
			for (Map.Entry<AnnotationType, List<AnnotationValue>> other_element : other.pessoasAnnotations.entrySet()) {

				AnnotationType other_element_key = other_element.getKey();
				List<AnnotationValue> other_element_value = other_element.getValue();

				AnnotationType __this__pessoasAnnotations_copy_key = other_element_key;

				List<AnnotationValue> __this__pessoasAnnotations_copy_value = new ArrayList<AnnotationValue>(other_element_value.size());
				for (AnnotationValue other_element_value_element : other_element_value) {
					__this__pessoasAnnotations_copy_value.add(new AnnotationValue(other_element_value_element));
				}

				__this__pessoasAnnotations.put(__this__pessoasAnnotations_copy_key, __this__pessoasAnnotations_copy_value);
			}
			this.pessoasAnnotations = __this__pessoasAnnotations;
		}
	}

	public DimensionalInstituicaoRecord deepCopy() {
		return new DimensionalInstituicaoRecord(this);
	}

	@Override
	public void clear() {
		this.id = null;
		setLastUpdateIsSet(false);
		this.lastUpdate = 0;
		this.processId = null;
		this.operationType = null;
		this.instituicao = null;
		setTotalEstudanteIsSet(false);
		this.totalEstudante = 0;
		setTotalEgressoIsSet(false);
		this.totalEgresso = 0;
		setTotalEnderecoIsSet(false);
		this.totalEndereco = 0;
		setTotalAtividadeIsSet(false);
		this.totalAtividade = 0;
		this.tiposProducoes = null;
		this.anosProducoes = null;
		this.niveisTitulacoesMaximas = null;
		this.areasTitulacoesMaximas = null;
		this.anosTitulacoesMaximas = null;
		this.pessoasAnnotations = null;
	}

	public String getId() {
		return this.id;
	}

	public void setId(String id) {
		this.id = id;
	}

	public void unsetId() {
		this.id = null;
	}

	/** Returns true if field id is set (has been assigned a value) and false otherwise */
	public boolean isSetId() {
		return this.id != null;
	}

	public void setIdIsSet(boolean value) {
		if (!value) {
			this.id = null;
		}
	}

	public long getLastUpdate() {
		return this.lastUpdate;
	}

	public void setLastUpdate(long lastUpdate) {
		this.lastUpdate = lastUpdate;
		setLastUpdateIsSet(true);
	}

	public void unsetLastUpdate() {
		__isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __LASTUPDATE_ISSET_ID);
	}

	/** Returns true if field lastUpdate is set (has been assigned a value) and false otherwise */
	public boolean isSetLastUpdate() {
		return EncodingUtils.testBit(__isset_bitfield, __LASTUPDATE_ISSET_ID);
	}

	public void setLastUpdateIsSet(boolean value) {
		__isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __LASTUPDATE_ISSET_ID, value);
	}

	public String getProcessId() {
		return this.processId;
	}

	public void setProcessId(String processId) {
		this.processId = processId;
	}

	public void unsetProcessId() {
		this.processId = null;
	}

	/** Returns true if field processId is set (has been assigned a value) and false otherwise */
	public boolean isSetProcessId() {
		return this.processId != null;
	}

	public void setProcessIdIsSet(boolean value) {
		if (!value) {
			this.processId = null;
		}
	}

	/**
	 * 
	 * @see OperationType
	 */
	public OperationType getOperationType() {
		return this.operationType;
	}

	/**
	 * 
	 * @see OperationType
	 */
	public void setOperationType(OperationType operationType) {
		this.operationType = operationType;
	}

	public void unsetOperationType() {
		this.operationType = null;
	}

	/** Returns true if field operationType is set (has been assigned a value) and false otherwise */
	public boolean isSetOperationType() {
		return this.operationType != null;
	}

	public void setOperationTypeIsSet(boolean value) {
		if (!value) {
			this.operationType = null;
		}
	}

	public br.org.stela.intelectus.lattes.thrift.Instituicao getInstituicao() {
		return this.instituicao;
	}

	public void setInstituicao(br.org.stela.intelectus.lattes.thrift.Instituicao instituicao) {
		this.instituicao = instituicao;
	}

	public void unsetInstituicao() {
		this.instituicao = null;
	}

	/** Returns true if field instituicao is set (has been assigned a value) and false otherwise */
	public boolean isSetInstituicao() {
		return this.instituicao != null;
	}

	public void setInstituicaoIsSet(boolean value) {
		if (!value) {
			this.instituicao = null;
		}
	}

	public int getTotalEstudante() {
		return this.totalEstudante;
	}

	public void setTotalEstudante(int totalEstudante) {
		this.totalEstudante = totalEstudante;
		setTotalEstudanteIsSet(true);
	}

	public void unsetTotalEstudante() {
		__isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TOTALESTUDANTE_ISSET_ID);
	}

	/** Returns true if field totalEstudante is set (has been assigned a value) and false otherwise */
	public boolean isSetTotalEstudante() {
		return EncodingUtils.testBit(__isset_bitfield, __TOTALESTUDANTE_ISSET_ID);
	}

	public void setTotalEstudanteIsSet(boolean value) {
		__isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TOTALESTUDANTE_ISSET_ID, value);
	}

	public int getTotalEgresso() {
		return this.totalEgresso;
	}

	public void setTotalEgresso(int totalEgresso) {
		this.totalEgresso = totalEgresso;
		setTotalEgressoIsSet(true);
	}

	public void unsetTotalEgresso() {
		__isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TOTALEGRESSO_ISSET_ID);
	}

	/** Returns true if field totalEgresso is set (has been assigned a value) and false otherwise */
	public boolean isSetTotalEgresso() {
		return EncodingUtils.testBit(__isset_bitfield, __TOTALEGRESSO_ISSET_ID);
	}

	public void setTotalEgressoIsSet(boolean value) {
		__isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TOTALEGRESSO_ISSET_ID, value);
	}

	public int getTotalEndereco() {
		return this.totalEndereco;
	}

	public void setTotalEndereco(int totalEndereco) {
		this.totalEndereco = totalEndereco;
		setTotalEnderecoIsSet(true);
	}

	public void unsetTotalEndereco() {
		__isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TOTALENDERECO_ISSET_ID);
	}

	/** Returns true if field totalEndereco is set (has been assigned a value) and false otherwise */
	public boolean isSetTotalEndereco() {
		return EncodingUtils.testBit(__isset_bitfield, __TOTALENDERECO_ISSET_ID);
	}

	public void setTotalEnderecoIsSet(boolean value) {
		__isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TOTALENDERECO_ISSET_ID, value);
	}

	public int getTotalAtividade() {
		return this.totalAtividade;
	}

	public void setTotalAtividade(int totalAtividade) {
		this.totalAtividade = totalAtividade;
		setTotalAtividadeIsSet(true);
	}

	public void unsetTotalAtividade() {
		__isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TOTALATIVIDADE_ISSET_ID);
	}

	/** Returns true if field totalAtividade is set (has been assigned a value) and false otherwise */
	public boolean isSetTotalAtividade() {
		return EncodingUtils.testBit(__isset_bitfield, __TOTALATIVIDADE_ISSET_ID);
	}

	public void setTotalAtividadeIsSet(boolean value) {
		__isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TOTALATIVIDADE_ISSET_ID, value);
	}

	public int getTiposProducoesSize() {
		return (this.tiposProducoes == null) ? 0 : this.tiposProducoes.size();
	}

	public java.util.Iterator<AnnotationValue> getTiposProducoesIterator() {
		return (this.tiposProducoes == null) ? null : this.tiposProducoes.iterator();
	}

	public void addToTiposProducoes(AnnotationValue elem) {
		if (this.tiposProducoes == null) {
			this.tiposProducoes = new ArrayList<AnnotationValue>();
		}
		this.tiposProducoes.add(elem);
	}

	public List<AnnotationValue> getTiposProducoes() {
		return this.tiposProducoes;
	}

	public void setTiposProducoes(List<AnnotationValue> tiposProducoes) {
		this.tiposProducoes = tiposProducoes;
	}

	public void unsetTiposProducoes() {
		this.tiposProducoes = null;
	}

	/** Returns true if field tiposProducoes is set (has been assigned a value) and false otherwise */
	public boolean isSetTiposProducoes() {
		return this.tiposProducoes != null;
	}

	public void setTiposProducoesIsSet(boolean value) {
		if (!value) {
			this.tiposProducoes = null;
		}
	}

	public int getAnosProducoesSize() {
		return (this.anosProducoes == null) ? 0 : this.anosProducoes.size();
	}

	public java.util.Iterator<AnnotationValue> getAnosProducoesIterator() {
		return (this.anosProducoes == null) ? null : this.anosProducoes.iterator();
	}

	public void addToAnosProducoes(AnnotationValue elem) {
		if (this.anosProducoes == null) {
			this.anosProducoes = new ArrayList<AnnotationValue>();
		}
		this.anosProducoes.add(elem);
	}

	public List<AnnotationValue> getAnosProducoes() {
		return this.anosProducoes;
	}

	public void setAnosProducoes(List<AnnotationValue> anosProducoes) {
		this.anosProducoes = anosProducoes;
	}

	public void unsetAnosProducoes() {
		this.anosProducoes = null;
	}

	/** Returns true if field anosProducoes is set (has been assigned a value) and false otherwise */
	public boolean isSetAnosProducoes() {
		return this.anosProducoes != null;
	}

	public void setAnosProducoesIsSet(boolean value) {
		if (!value) {
			this.anosProducoes = null;
		}
	}

	public int getNiveisTitulacoesMaximasSize() {
		return (this.niveisTitulacoesMaximas == null) ? 0 : this.niveisTitulacoesMaximas.size();
	}

	public java.util.Iterator<AnnotationValue> getNiveisTitulacoesMaximasIterator() {
		return (this.niveisTitulacoesMaximas == null) ? null : this.niveisTitulacoesMaximas.iterator();
	}

	public void addToNiveisTitulacoesMaximas(AnnotationValue elem) {
		if (this.niveisTitulacoesMaximas == null) {
			this.niveisTitulacoesMaximas = new ArrayList<AnnotationValue>();
		}
		this.niveisTitulacoesMaximas.add(elem);
	}

	public List<AnnotationValue> getNiveisTitulacoesMaximas() {
		return this.niveisTitulacoesMaximas;
	}

	public void setNiveisTitulacoesMaximas(List<AnnotationValue> niveisTitulacoesMaximas) {
		this.niveisTitulacoesMaximas = niveisTitulacoesMaximas;
	}

	public void unsetNiveisTitulacoesMaximas() {
		this.niveisTitulacoesMaximas = null;
	}

	/** Returns true if field niveisTitulacoesMaximas is set (has been assigned a value) and false otherwise */
	public boolean isSetNiveisTitulacoesMaximas() {
		return this.niveisTitulacoesMaximas != null;
	}

	public void setNiveisTitulacoesMaximasIsSet(boolean value) {
		if (!value) {
			this.niveisTitulacoesMaximas = null;
		}
	}

	public int getAreasTitulacoesMaximasSize() {
		return (this.areasTitulacoesMaximas == null) ? 0 : this.areasTitulacoesMaximas.size();
	}

	public java.util.Iterator<AnnotationValue> getAreasTitulacoesMaximasIterator() {
		return (this.areasTitulacoesMaximas == null) ? null : this.areasTitulacoesMaximas.iterator();
	}

	public void addToAreasTitulacoesMaximas(AnnotationValue elem) {
		if (this.areasTitulacoesMaximas == null) {
			this.areasTitulacoesMaximas = new ArrayList<AnnotationValue>();
		}
		this.areasTitulacoesMaximas.add(elem);
	}

	public List<AnnotationValue> getAreasTitulacoesMaximas() {
		return this.areasTitulacoesMaximas;
	}

	public void setAreasTitulacoesMaximas(List<AnnotationValue> areasTitulacoesMaximas) {
		this.areasTitulacoesMaximas = areasTitulacoesMaximas;
	}

	public void unsetAreasTitulacoesMaximas() {
		this.areasTitulacoesMaximas = null;
	}

	/** Returns true if field areasTitulacoesMaximas is set (has been assigned a value) and false otherwise */
	public boolean isSetAreasTitulacoesMaximas() {
		return this.areasTitulacoesMaximas != null;
	}

	public void setAreasTitulacoesMaximasIsSet(boolean value) {
		if (!value) {
			this.areasTitulacoesMaximas = null;
		}
	}

	public int getAnosTitulacoesMaximasSize() {
		return (this.anosTitulacoesMaximas == null) ? 0 : this.anosTitulacoesMaximas.size();
	}

	public java.util.Iterator<AnnotationValue> getAnosTitulacoesMaximasIterator() {
		return (this.anosTitulacoesMaximas == null) ? null : this.anosTitulacoesMaximas.iterator();
	}

	public void addToAnosTitulacoesMaximas(AnnotationValue elem) {
		if (this.anosTitulacoesMaximas == null) {
			this.anosTitulacoesMaximas = new ArrayList<AnnotationValue>();
		}
		this.anosTitulacoesMaximas.add(elem);
	}

	public List<AnnotationValue> getAnosTitulacoesMaximas() {
		return this.anosTitulacoesMaximas;
	}

	public void setAnosTitulacoesMaximas(List<AnnotationValue> anosTitulacoesMaximas) {
		this.anosTitulacoesMaximas = anosTitulacoesMaximas;
	}

	public void unsetAnosTitulacoesMaximas() {
		this.anosTitulacoesMaximas = null;
	}

	/** Returns true if field anosTitulacoesMaximas is set (has been assigned a value) and false otherwise */
	public boolean isSetAnosTitulacoesMaximas() {
		return this.anosTitulacoesMaximas != null;
	}

	public void setAnosTitulacoesMaximasIsSet(boolean value) {
		if (!value) {
			this.anosTitulacoesMaximas = null;
		}
	}

	public int getPessoasAnnotationsSize() {
		return (this.pessoasAnnotations == null) ? 0 : this.pessoasAnnotations.size();
	}

	public void putToPessoasAnnotations(AnnotationType key, List<AnnotationValue> val) {
		if (this.pessoasAnnotations == null) {
			this.pessoasAnnotations = new HashMap<AnnotationType, List<AnnotationValue>>();
		}
		this.pessoasAnnotations.put(key, val);
	}

	public Map<AnnotationType, List<AnnotationValue>> getPessoasAnnotations() {
		return this.pessoasAnnotations;
	}

	public void setPessoasAnnotations(Map<AnnotationType, List<AnnotationValue>> pessoasAnnotations) {
		this.pessoasAnnotations = pessoasAnnotations;
	}

	public void unsetPessoasAnnotations() {
		this.pessoasAnnotations = null;
	}

	/** Returns true if field pessoasAnnotations is set (has been assigned a value) and false otherwise */
	public boolean isSetPessoasAnnotations() {
		return this.pessoasAnnotations != null;
	}

	public void setPessoasAnnotationsIsSet(boolean value) {
		if (!value) {
			this.pessoasAnnotations = null;
		}
	}

	public void setFieldValue(_Fields field, Object value) {
		switch (field) {
		case ID:
			if (value == null) {
				unsetId();
			} else {
				setId((String) value);
			}
			break;

		case LAST_UPDATE:
			if (value == null) {
				unsetLastUpdate();
			} else {
				setLastUpdate((Long) value);
			}
			break;

		case PROCESS_ID:
			if (value == null) {
				unsetProcessId();
			} else {
				setProcessId((String) value);
			}
			break;

		case OPERATION_TYPE:
			if (value == null) {
				unsetOperationType();
			} else {
				setOperationType((OperationType) value);
			}
			break;

		case INSTITUICAO:
			if (value == null) {
				unsetInstituicao();
			} else {
				setInstituicao((br.org.stela.intelectus.lattes.thrift.Instituicao) value);
			}
			break;

		case TOTAL_ESTUDANTE:
			if (value == null) {
				unsetTotalEstudante();
			} else {
				setTotalEstudante((Integer) value);
			}
			break;

		case TOTAL_EGRESSO:
			if (value == null) {
				unsetTotalEgresso();
			} else {
				setTotalEgresso((Integer) value);
			}
			break;

		case TOTAL_ENDERECO:
			if (value == null) {
				unsetTotalEndereco();
			} else {
				setTotalEndereco((Integer) value);
			}
			break;

		case TOTAL_ATIVIDADE:
			if (value == null) {
				unsetTotalAtividade();
			} else {
				setTotalAtividade((Integer) value);
			}
			break;

		case TIPOS_PRODUCOES:
			if (value == null) {
				unsetTiposProducoes();
			} else {
				setTiposProducoes((List<AnnotationValue>) value);
			}
			break;

		case ANOS_PRODUCOES:
			if (value == null) {
				unsetAnosProducoes();
			} else {
				setAnosProducoes((List<AnnotationValue>) value);
			}
			break;

		case NIVEIS_TITULACOES_MAXIMAS:
			if (value == null) {
				unsetNiveisTitulacoesMaximas();
			} else {
				setNiveisTitulacoesMaximas((List<AnnotationValue>) value);
			}
			break;

		case AREAS_TITULACOES_MAXIMAS:
			if (value == null) {
				unsetAreasTitulacoesMaximas();
			} else {
				setAreasTitulacoesMaximas((List<AnnotationValue>) value);
			}
			break;

		case ANOS_TITULACOES_MAXIMAS:
			if (value == null) {
				unsetAnosTitulacoesMaximas();
			} else {
				setAnosTitulacoesMaximas((List<AnnotationValue>) value);
			}
			break;

		case PESSOAS_ANNOTATIONS:
			if (value == null) {
				unsetPessoasAnnotations();
			} else {
				setPessoasAnnotations((Map<AnnotationType, List<AnnotationValue>>) value);
			}
			break;

		}
	}

	public Object getFieldValue(_Fields field) {
		switch (field) {
		case ID:
			return getId();

		case LAST_UPDATE:
			return Long.valueOf(getLastUpdate());

		case PROCESS_ID:
			return getProcessId();

		case OPERATION_TYPE:
			return getOperationType();

		case INSTITUICAO:
			return getInstituicao();

		case TOTAL_ESTUDANTE:
			return Integer.valueOf(getTotalEstudante());

		case TOTAL_EGRESSO:
			return Integer.valueOf(getTotalEgresso());

		case TOTAL_ENDERECO:
			return Integer.valueOf(getTotalEndereco());

		case TOTAL_ATIVIDADE:
			return Integer.valueOf(getTotalAtividade());

		case TIPOS_PRODUCOES:
			return getTiposProducoes();

		case ANOS_PRODUCOES:
			return getAnosProducoes();

		case NIVEIS_TITULACOES_MAXIMAS:
			return getNiveisTitulacoesMaximas();

		case AREAS_TITULACOES_MAXIMAS:
			return getAreasTitulacoesMaximas();

		case ANOS_TITULACOES_MAXIMAS:
			return getAnosTitulacoesMaximas();

		case PESSOAS_ANNOTATIONS:
			return getPessoasAnnotations();

		}
		throw new IllegalStateException();
	}

	/** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
	public boolean isSet(_Fields field) {
		if (field == null) {
			throw new IllegalArgumentException();
		}

		switch (field) {
		case ID:
			return isSetId();
		case LAST_UPDATE:
			return isSetLastUpdate();
		case PROCESS_ID:
			return isSetProcessId();
		case OPERATION_TYPE:
			return isSetOperationType();
		case INSTITUICAO:
			return isSetInstituicao();
		case TOTAL_ESTUDANTE:
			return isSetTotalEstudante();
		case TOTAL_EGRESSO:
			return isSetTotalEgresso();
		case TOTAL_ENDERECO:
			return isSetTotalEndereco();
		case TOTAL_ATIVIDADE:
			return isSetTotalAtividade();
		case TIPOS_PRODUCOES:
			return isSetTiposProducoes();
		case ANOS_PRODUCOES:
			return isSetAnosProducoes();
		case NIVEIS_TITULACOES_MAXIMAS:
			return isSetNiveisTitulacoesMaximas();
		case AREAS_TITULACOES_MAXIMAS:
			return isSetAreasTitulacoesMaximas();
		case ANOS_TITULACOES_MAXIMAS:
			return isSetAnosTitulacoesMaximas();
		case PESSOAS_ANNOTATIONS:
			return isSetPessoasAnnotations();
		}
		throw new IllegalStateException();
	}

	@Override
	public boolean equals(Object that) {
		if (that == null)
			return false;
		if (that instanceof DimensionalInstituicaoRecord)
			return this.equals((DimensionalInstituicaoRecord) that);
		return false;
	}

	public boolean equals(DimensionalInstituicaoRecord that) {
		if (that == null)
			return false;

		boolean this_present_id = true && this.isSetId();
		boolean that_present_id = true && that.isSetId();
		if (this_present_id || that_present_id) {
			if (!(this_present_id && that_present_id))
				return false;
			if (!this.id.equals(that.id))
				return false;
		}

		boolean this_present_lastUpdate = true;
		boolean that_present_lastUpdate = true;
		if (this_present_lastUpdate || that_present_lastUpdate) {
			if (!(this_present_lastUpdate && that_present_lastUpdate))
				return false;
			if (this.lastUpdate != that.lastUpdate)
				return false;
		}

		boolean this_present_processId = true && this.isSetProcessId();
		boolean that_present_processId = true && that.isSetProcessId();
		if (this_present_processId || that_present_processId) {
			if (!(this_present_processId && that_present_processId))
				return false;
			if (!this.processId.equals(that.processId))
				return false;
		}

		boolean this_present_operationType = true && this.isSetOperationType();
		boolean that_present_operationType = true && that.isSetOperationType();
		if (this_present_operationType || that_present_operationType) {
			if (!(this_present_operationType && that_present_operationType))
				return false;
			if (!this.operationType.equals(that.operationType))
				return false;
		}

		boolean this_present_instituicao = true && this.isSetInstituicao();
		boolean that_present_instituicao = true && that.isSetInstituicao();
		if (this_present_instituicao || that_present_instituicao) {
			if (!(this_present_instituicao && that_present_instituicao))
				return false;
			if (!this.instituicao.equals(that.instituicao))
				return false;
		}

		boolean this_present_totalEstudante = true;
		boolean that_present_totalEstudante = true;
		if (this_present_totalEstudante || that_present_totalEstudante) {
			if (!(this_present_totalEstudante && that_present_totalEstudante))
				return false;
			if (this.totalEstudante != that.totalEstudante)
				return false;
		}

		boolean this_present_totalEgresso = true;
		boolean that_present_totalEgresso = true;
		if (this_present_totalEgresso || that_present_totalEgresso) {
			if (!(this_present_totalEgresso && that_present_totalEgresso))
				return false;
			if (this.totalEgresso != that.totalEgresso)
				return false;
		}

		boolean this_present_totalEndereco = true;
		boolean that_present_totalEndereco = true;
		if (this_present_totalEndereco || that_present_totalEndereco) {
			if (!(this_present_totalEndereco && that_present_totalEndereco))
				return false;
			if (this.totalEndereco != that.totalEndereco)
				return false;
		}

		boolean this_present_totalAtividade = true;
		boolean that_present_totalAtividade = true;
		if (this_present_totalAtividade || that_present_totalAtividade) {
			if (!(this_present_totalAtividade && that_present_totalAtividade))
				return false;
			if (this.totalAtividade != that.totalAtividade)
				return false;
		}

		boolean this_present_tiposProducoes = true && this.isSetTiposProducoes();
		boolean that_present_tiposProducoes = true && that.isSetTiposProducoes();
		if (this_present_tiposProducoes || that_present_tiposProducoes) {
			if (!(this_present_tiposProducoes && that_present_tiposProducoes))
				return false;
			if (!this.tiposProducoes.equals(that.tiposProducoes))
				return false;
		}

		boolean this_present_anosProducoes = true && this.isSetAnosProducoes();
		boolean that_present_anosProducoes = true && that.isSetAnosProducoes();
		if (this_present_anosProducoes || that_present_anosProducoes) {
			if (!(this_present_anosProducoes && that_present_anosProducoes))
				return false;
			if (!this.anosProducoes.equals(that.anosProducoes))
				return false;
		}

		boolean this_present_niveisTitulacoesMaximas = true && this.isSetNiveisTitulacoesMaximas();
		boolean that_present_niveisTitulacoesMaximas = true && that.isSetNiveisTitulacoesMaximas();
		if (this_present_niveisTitulacoesMaximas || that_present_niveisTitulacoesMaximas) {
			if (!(this_present_niveisTitulacoesMaximas && that_present_niveisTitulacoesMaximas))
				return false;
			if (!this.niveisTitulacoesMaximas.equals(that.niveisTitulacoesMaximas))
				return false;
		}

		boolean this_present_areasTitulacoesMaximas = true && this.isSetAreasTitulacoesMaximas();
		boolean that_present_areasTitulacoesMaximas = true && that.isSetAreasTitulacoesMaximas();
		if (this_present_areasTitulacoesMaximas || that_present_areasTitulacoesMaximas) {
			if (!(this_present_areasTitulacoesMaximas && that_present_areasTitulacoesMaximas))
				return false;
			if (!this.areasTitulacoesMaximas.equals(that.areasTitulacoesMaximas))
				return false;
		}

		boolean this_present_anosTitulacoesMaximas = true && this.isSetAnosTitulacoesMaximas();
		boolean that_present_anosTitulacoesMaximas = true && that.isSetAnosTitulacoesMaximas();
		if (this_present_anosTitulacoesMaximas || that_present_anosTitulacoesMaximas) {
			if (!(this_present_anosTitulacoesMaximas && that_present_anosTitulacoesMaximas))
				return false;
			if (!this.anosTitulacoesMaximas.equals(that.anosTitulacoesMaximas))
				return false;
		}

		boolean this_present_pessoasAnnotations = true && this.isSetPessoasAnnotations();
		boolean that_present_pessoasAnnotations = true && that.isSetPessoasAnnotations();
		if (this_present_pessoasAnnotations || that_present_pessoasAnnotations) {
			if (!(this_present_pessoasAnnotations && that_present_pessoasAnnotations))
				return false;
			if (!this.pessoasAnnotations.equals(that.pessoasAnnotations))
				return false;
		}

		return true;
	}

	@Override
	public int hashCode() {
		List<Object> list = new ArrayList<Object>();

		boolean present_id = true && (isSetId());
		list.add(present_id);
		if (present_id)
			list.add(id);

		boolean present_lastUpdate = true;
		list.add(present_lastUpdate);
		if (present_lastUpdate)
			list.add(lastUpdate);

		boolean present_processId = true && (isSetProcessId());
		list.add(present_processId);
		if (present_processId)
			list.add(processId);

		boolean present_operationType = true && (isSetOperationType());
		list.add(present_operationType);
		if (present_operationType)
			list.add(operationType.getValue());

		boolean present_instituicao = true && (isSetInstituicao());
		list.add(present_instituicao);
		if (present_instituicao)
			list.add(instituicao);

		boolean present_totalEstudante = true;
		list.add(present_totalEstudante);
		if (present_totalEstudante)
			list.add(totalEstudante);

		boolean present_totalEgresso = true;
		list.add(present_totalEgresso);
		if (present_totalEgresso)
			list.add(totalEgresso);

		boolean present_totalEndereco = true;
		list.add(present_totalEndereco);
		if (present_totalEndereco)
			list.add(totalEndereco);

		boolean present_totalAtividade = true;
		list.add(present_totalAtividade);
		if (present_totalAtividade)
			list.add(totalAtividade);

		boolean present_tiposProducoes = true && (isSetTiposProducoes());
		list.add(present_tiposProducoes);
		if (present_tiposProducoes)
			list.add(tiposProducoes);

		boolean present_anosProducoes = true && (isSetAnosProducoes());
		list.add(present_anosProducoes);
		if (present_anosProducoes)
			list.add(anosProducoes);

		boolean present_niveisTitulacoesMaximas = true && (isSetNiveisTitulacoesMaximas());
		list.add(present_niveisTitulacoesMaximas);
		if (present_niveisTitulacoesMaximas)
			list.add(niveisTitulacoesMaximas);

		boolean present_areasTitulacoesMaximas = true && (isSetAreasTitulacoesMaximas());
		list.add(present_areasTitulacoesMaximas);
		if (present_areasTitulacoesMaximas)
			list.add(areasTitulacoesMaximas);

		boolean present_anosTitulacoesMaximas = true && (isSetAnosTitulacoesMaximas());
		list.add(present_anosTitulacoesMaximas);
		if (present_anosTitulacoesMaximas)
			list.add(anosTitulacoesMaximas);

		boolean present_pessoasAnnotations = true && (isSetPessoasAnnotations());
		list.add(present_pessoasAnnotations);
		if (present_pessoasAnnotations)
			list.add(pessoasAnnotations);

		return list.hashCode();
	}

	@Override
	public int compareTo(DimensionalInstituicaoRecord other) {
		if (!getClass().equals(other.getClass())) {
			return getClass().getName().compareTo(other.getClass().getName());
		}

		int lastComparison = 0;

		lastComparison = Boolean.valueOf(isSetId()).compareTo(other.isSetId());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetId()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetLastUpdate()).compareTo(other.isSetLastUpdate());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetLastUpdate()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.lastUpdate, other.lastUpdate);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetProcessId()).compareTo(other.isSetProcessId());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetProcessId()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.processId, other.processId);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetOperationType()).compareTo(other.isSetOperationType());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetOperationType()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.operationType, other.operationType);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetInstituicao()).compareTo(other.isSetInstituicao());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetInstituicao()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.instituicao, other.instituicao);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetTotalEstudante()).compareTo(other.isSetTotalEstudante());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetTotalEstudante()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.totalEstudante, other.totalEstudante);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetTotalEgresso()).compareTo(other.isSetTotalEgresso());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetTotalEgresso()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.totalEgresso, other.totalEgresso);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetTotalEndereco()).compareTo(other.isSetTotalEndereco());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetTotalEndereco()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.totalEndereco, other.totalEndereco);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetTotalAtividade()).compareTo(other.isSetTotalAtividade());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetTotalAtividade()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.totalAtividade, other.totalAtividade);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetTiposProducoes()).compareTo(other.isSetTiposProducoes());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetTiposProducoes()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.tiposProducoes, other.tiposProducoes);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetAnosProducoes()).compareTo(other.isSetAnosProducoes());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetAnosProducoes()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.anosProducoes, other.anosProducoes);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetNiveisTitulacoesMaximas()).compareTo(other.isSetNiveisTitulacoesMaximas());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetNiveisTitulacoesMaximas()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.niveisTitulacoesMaximas, other.niveisTitulacoesMaximas);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetAreasTitulacoesMaximas()).compareTo(other.isSetAreasTitulacoesMaximas());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetAreasTitulacoesMaximas()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.areasTitulacoesMaximas, other.areasTitulacoesMaximas);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetAnosTitulacoesMaximas()).compareTo(other.isSetAnosTitulacoesMaximas());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetAnosTitulacoesMaximas()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.anosTitulacoesMaximas, other.anosTitulacoesMaximas);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetPessoasAnnotations()).compareTo(other.isSetPessoasAnnotations());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetPessoasAnnotations()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pessoasAnnotations, other.pessoasAnnotations);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		return 0;
	}

	public _Fields fieldForId(int fieldId) {
		return _Fields.findByThriftId(fieldId);
	}

	public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
		schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
	}

	public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
		schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder("DimensionalInstituicaoRecord(");
		boolean first = true;

		sb.append("id:");
		if (this.id == null) {
			sb.append("null");
		} else {
			sb.append(this.id);
		}
		first = false;
		if (!first)
			sb.append(", ");
		sb.append("lastUpdate:");
		sb.append(this.lastUpdate);
		first = false;
		if (!first)
			sb.append(", ");
		sb.append("processId:");
		if (this.processId == null) {
			sb.append("null");
		} else {
			sb.append(this.processId);
		}
		first = false;
		if (!first)
			sb.append(", ");
		sb.append("operationType:");
		if (this.operationType == null) {
			sb.append("null");
		} else {
			sb.append(this.operationType);
		}
		first = false;
		if (!first)
			sb.append(", ");
		sb.append("instituicao:");
		if (this.instituicao == null) {
			sb.append("null");
		} else {
			sb.append(this.instituicao);
		}
		first = false;
		if (!first)
			sb.append(", ");
		sb.append("totalEstudante:");
		sb.append(this.totalEstudante);
		first = false;
		if (!first)
			sb.append(", ");
		sb.append("totalEgresso:");
		sb.append(this.totalEgresso);
		first = false;
		if (!first)
			sb.append(", ");
		sb.append("totalEndereco:");
		sb.append(this.totalEndereco);
		first = false;
		if (!first)
			sb.append(", ");
		sb.append("totalAtividade:");
		sb.append(this.totalAtividade);
		first = false;
		if (!first)
			sb.append(", ");
		sb.append("tiposProducoes:");
		if (this.tiposProducoes == null) {
			sb.append("null");
		} else {
			sb.append(this.tiposProducoes);
		}
		first = false;
		if (!first)
			sb.append(", ");
		sb.append("anosProducoes:");
		if (this.anosProducoes == null) {
			sb.append("null");
		} else {
			sb.append(this.anosProducoes);
		}
		first = false;
		if (!first)
			sb.append(", ");
		sb.append("niveisTitulacoesMaximas:");
		if (this.niveisTitulacoesMaximas == null) {
			sb.append("null");
		} else {
			sb.append(this.niveisTitulacoesMaximas);
		}
		first = false;
		if (!first)
			sb.append(", ");
		sb.append("areasTitulacoesMaximas:");
		if (this.areasTitulacoesMaximas == null) {
			sb.append("null");
		} else {
			sb.append(this.areasTitulacoesMaximas);
		}
		first = false;
		if (!first)
			sb.append(", ");
		sb.append("anosTitulacoesMaximas:");
		if (this.anosTitulacoesMaximas == null) {
			sb.append("null");
		} else {
			sb.append(this.anosTitulacoesMaximas);
		}
		first = false;
		if (!first)
			sb.append(", ");
		sb.append("pessoasAnnotations:");
		if (this.pessoasAnnotations == null) {
			sb.append("null");
		} else {
			sb.append(this.pessoasAnnotations);
		}
		first = false;
		sb.append(")");
		return sb.toString();
	}

	public void validate() throws org.apache.thrift.TException {
		// check for required fields
		if (!isSetId()) {
			throw new org.apache.thrift.protocol.TProtocolException("Required field 'id' is unset! Struct:" + toString());
		}

		if (!isSetLastUpdate()) {
			throw new org.apache.thrift.protocol.TProtocolException("Required field 'lastUpdate' is unset! Struct:" + toString());
		}

		if (!isSetProcessId()) {
			throw new org.apache.thrift.protocol.TProtocolException("Required field 'processId' is unset! Struct:" + toString());
		}

		if (!isSetOperationType()) {
			throw new org.apache.thrift.protocol.TProtocolException("Required field 'operationType' is unset! Struct:" + toString());
		}

		if (!isSetInstituicao()) {
			throw new org.apache.thrift.protocol.TProtocolException("Required field 'instituicao' is unset! Struct:" + toString());
		}

		if (!isSetTotalEstudante()) {
			throw new org.apache.thrift.protocol.TProtocolException("Required field 'totalEstudante' is unset! Struct:" + toString());
		}

		if (!isSetTotalEgresso()) {
			throw new org.apache.thrift.protocol.TProtocolException("Required field 'totalEgresso' is unset! Struct:" + toString());
		}

		if (!isSetTotalEndereco()) {
			throw new org.apache.thrift.protocol.TProtocolException("Required field 'totalEndereco' is unset! Struct:" + toString());
		}

		if (!isSetTotalAtividade()) {
			throw new org.apache.thrift.protocol.TProtocolException("Required field 'totalAtividade' is unset! Struct:" + toString());
		}

		if (!isSetTiposProducoes()) {
			throw new org.apache.thrift.protocol.TProtocolException("Required field 'tiposProducoes' is unset! Struct:" + toString());
		}

		if (!isSetAnosProducoes()) {
			throw new org.apache.thrift.protocol.TProtocolException("Required field 'anosProducoes' is unset! Struct:" + toString());
		}

		if (!isSetNiveisTitulacoesMaximas()) {
			throw new org.apache.thrift.protocol.TProtocolException("Required field 'niveisTitulacoesMaximas' is unset! Struct:" + toString());
		}

		if (!isSetAreasTitulacoesMaximas()) {
			throw new org.apache.thrift.protocol.TProtocolException("Required field 'areasTitulacoesMaximas' is unset! Struct:" + toString());
		}

		if (!isSetAnosTitulacoesMaximas()) {
			throw new org.apache.thrift.protocol.TProtocolException("Required field 'anosTitulacoesMaximas' is unset! Struct:" + toString());
		}

		if (!isSetPessoasAnnotations()) {
			throw new org.apache.thrift.protocol.TProtocolException("Required field 'pessoasAnnotations' is unset! Struct:" + toString());
		}

		// check for sub-struct validity
		if (instituicao != null) {
			instituicao.validate();
		}
	}

	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
		try {
			write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
		} catch (org.apache.thrift.TException te) {
			throw new java.io.IOException(te);
		}
	}

	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
		try {
			// it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
			__isset_bitfield = 0;
			read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
		} catch (org.apache.thrift.TException te) {
			throw new java.io.IOException(te);
		}
	}

	private static class DimensionalInstituicaoRecordStandardSchemeFactory implements SchemeFactory {
		public DimensionalInstituicaoRecordStandardScheme getScheme() {
			return new DimensionalInstituicaoRecordStandardScheme();
		}
	}

	private static class DimensionalInstituicaoRecordStandardScheme extends StandardScheme<DimensionalInstituicaoRecord> {

		public void read(org.apache.thrift.protocol.TProtocol iprot, DimensionalInstituicaoRecord struct) throws org.apache.thrift.TException {
			org.apache.thrift.protocol.TField schemeField;
			iprot.readStructBegin();
			while (true) {
				schemeField = iprot.readFieldBegin();
				if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
					break;
				}
				switch (schemeField.id) {
				case 1: // ID
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.id = iprot.readString();
						struct.setIdIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 2: // LAST_UPDATE
					if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
						struct.lastUpdate = iprot.readI64();
						struct.setLastUpdateIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 3: // PROCESS_ID
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.processId = iprot.readString();
						struct.setProcessIdIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 4: // OPERATION_TYPE
					if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
						struct.operationType = br.org.stela.intelectus.service.thrift.OperationType.findByValue(iprot.readI32());
						struct.setOperationTypeIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 5: // INSTITUICAO
					if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
						struct.instituicao = new br.org.stela.intelectus.lattes.thrift.Instituicao();
						struct.instituicao.read(iprot);
						struct.setInstituicaoIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 6: // TOTAL_ESTUDANTE
					if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
						struct.totalEstudante = iprot.readI32();
						struct.setTotalEstudanteIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 7: // TOTAL_EGRESSO
					if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
						struct.totalEgresso = iprot.readI32();
						struct.setTotalEgressoIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 8: // TOTAL_ENDERECO
					if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
						struct.totalEndereco = iprot.readI32();
						struct.setTotalEnderecoIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 9: // TOTAL_ATIVIDADE
					if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
						struct.totalAtividade = iprot.readI32();
						struct.setTotalAtividadeIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 10: // TIPOS_PRODUCOES
					if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
						{
							org.apache.thrift.protocol.TList _list112 = iprot.readListBegin();
							struct.tiposProducoes = new ArrayList<AnnotationValue>(_list112.size);
							AnnotationValue _elem113;
							for (int _i114 = 0; _i114 < _list112.size; ++_i114) {
								_elem113 = new AnnotationValue();
								_elem113.read(iprot);
								struct.tiposProducoes.add(_elem113);
							}
							iprot.readListEnd();
						}
						struct.setTiposProducoesIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 11: // ANOS_PRODUCOES
					if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
						{
							org.apache.thrift.protocol.TList _list115 = iprot.readListBegin();
							struct.anosProducoes = new ArrayList<AnnotationValue>(_list115.size);
							AnnotationValue _elem116;
							for (int _i117 = 0; _i117 < _list115.size; ++_i117) {
								_elem116 = new AnnotationValue();
								_elem116.read(iprot);
								struct.anosProducoes.add(_elem116);
							}
							iprot.readListEnd();
						}
						struct.setAnosProducoesIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 12: // NIVEIS_TITULACOES_MAXIMAS
					if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
						{
							org.apache.thrift.protocol.TList _list118 = iprot.readListBegin();
							struct.niveisTitulacoesMaximas = new ArrayList<AnnotationValue>(_list118.size);
							AnnotationValue _elem119;
							for (int _i120 = 0; _i120 < _list118.size; ++_i120) {
								_elem119 = new AnnotationValue();
								_elem119.read(iprot);
								struct.niveisTitulacoesMaximas.add(_elem119);
							}
							iprot.readListEnd();
						}
						struct.setNiveisTitulacoesMaximasIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 13: // AREAS_TITULACOES_MAXIMAS
					if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
						{
							org.apache.thrift.protocol.TList _list121 = iprot.readListBegin();
							struct.areasTitulacoesMaximas = new ArrayList<AnnotationValue>(_list121.size);
							AnnotationValue _elem122;
							for (int _i123 = 0; _i123 < _list121.size; ++_i123) {
								_elem122 = new AnnotationValue();
								_elem122.read(iprot);
								struct.areasTitulacoesMaximas.add(_elem122);
							}
							iprot.readListEnd();
						}
						struct.setAreasTitulacoesMaximasIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 14: // ANOS_TITULACOES_MAXIMAS
					if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
						{
							org.apache.thrift.protocol.TList _list124 = iprot.readListBegin();
							struct.anosTitulacoesMaximas = new ArrayList<AnnotationValue>(_list124.size);
							AnnotationValue _elem125;
							for (int _i126 = 0; _i126 < _list124.size; ++_i126) {
								_elem125 = new AnnotationValue();
								_elem125.read(iprot);
								struct.anosTitulacoesMaximas.add(_elem125);
							}
							iprot.readListEnd();
						}
						struct.setAnosTitulacoesMaximasIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 15: // PESSOAS_ANNOTATIONS
					if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
						{
							org.apache.thrift.protocol.TMap _map127 = iprot.readMapBegin();
							struct.pessoasAnnotations = new HashMap<AnnotationType, List<AnnotationValue>>(2 * _map127.size);
							AnnotationType _key128;
							List<AnnotationValue> _val129;
							for (int _i130 = 0; _i130 < _map127.size; ++_i130) {
								_key128 = br.org.stela.intelectus.service.thrift.AnnotationType.findByValue(iprot.readI32());
								{
									org.apache.thrift.protocol.TList _list131 = iprot.readListBegin();
									_val129 = new ArrayList<AnnotationValue>(_list131.size);
									AnnotationValue _elem132;
									for (int _i133 = 0; _i133 < _list131.size; ++_i133) {
										_elem132 = new AnnotationValue();
										_elem132.read(iprot);
										_val129.add(_elem132);
									}
									iprot.readListEnd();
								}
								struct.pessoasAnnotations.put(_key128, _val129);
							}
							iprot.readMapEnd();
						}
						struct.setPessoasAnnotationsIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				default:
					org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
				}
				iprot.readFieldEnd();
			}
			iprot.readStructEnd();
			struct.validate();
		}

		public void write(org.apache.thrift.protocol.TProtocol oprot, DimensionalInstituicaoRecord struct) throws org.apache.thrift.TException {
			struct.validate();

			oprot.writeStructBegin(STRUCT_DESC);
			if (struct.id != null) {
				oprot.writeFieldBegin(ID_FIELD_DESC);
				oprot.writeString(struct.id);
				oprot.writeFieldEnd();
			}
			oprot.writeFieldBegin(LAST_UPDATE_FIELD_DESC);
			oprot.writeI64(struct.lastUpdate);
			oprot.writeFieldEnd();
			if (struct.processId != null) {
				oprot.writeFieldBegin(PROCESS_ID_FIELD_DESC);
				oprot.writeString(struct.processId);
				oprot.writeFieldEnd();
			}
			if (struct.operationType != null) {
				oprot.writeFieldBegin(OPERATION_TYPE_FIELD_DESC);
				oprot.writeI32(struct.operationType.getValue());
				oprot.writeFieldEnd();
			}
			if (struct.instituicao != null) {
				oprot.writeFieldBegin(INSTITUICAO_FIELD_DESC);
				struct.instituicao.write(oprot);
				oprot.writeFieldEnd();
			}
			oprot.writeFieldBegin(TOTAL_ESTUDANTE_FIELD_DESC);
			oprot.writeI32(struct.totalEstudante);
			oprot.writeFieldEnd();
			oprot.writeFieldBegin(TOTAL_EGRESSO_FIELD_DESC);
			oprot.writeI32(struct.totalEgresso);
			oprot.writeFieldEnd();
			oprot.writeFieldBegin(TOTAL_ENDERECO_FIELD_DESC);
			oprot.writeI32(struct.totalEndereco);
			oprot.writeFieldEnd();
			oprot.writeFieldBegin(TOTAL_ATIVIDADE_FIELD_DESC);
			oprot.writeI32(struct.totalAtividade);
			oprot.writeFieldEnd();
			if (struct.tiposProducoes != null) {
				oprot.writeFieldBegin(TIPOS_PRODUCOES_FIELD_DESC);
				{
					oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.tiposProducoes.size()));
					for (AnnotationValue _iter134 : struct.tiposProducoes) {
						_iter134.write(oprot);
					}
					oprot.writeListEnd();
				}
				oprot.writeFieldEnd();
			}
			if (struct.anosProducoes != null) {
				oprot.writeFieldBegin(ANOS_PRODUCOES_FIELD_DESC);
				{
					oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.anosProducoes.size()));
					for (AnnotationValue _iter135 : struct.anosProducoes) {
						_iter135.write(oprot);
					}
					oprot.writeListEnd();
				}
				oprot.writeFieldEnd();
			}
			if (struct.niveisTitulacoesMaximas != null) {
				oprot.writeFieldBegin(NIVEIS_TITULACOES_MAXIMAS_FIELD_DESC);
				{
					oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.niveisTitulacoesMaximas.size()));
					for (AnnotationValue _iter136 : struct.niveisTitulacoesMaximas) {
						_iter136.write(oprot);
					}
					oprot.writeListEnd();
				}
				oprot.writeFieldEnd();
			}
			if (struct.areasTitulacoesMaximas != null) {
				oprot.writeFieldBegin(AREAS_TITULACOES_MAXIMAS_FIELD_DESC);
				{
					oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.areasTitulacoesMaximas.size()));
					for (AnnotationValue _iter137 : struct.areasTitulacoesMaximas) {
						_iter137.write(oprot);
					}
					oprot.writeListEnd();
				}
				oprot.writeFieldEnd();
			}
			if (struct.anosTitulacoesMaximas != null) {
				oprot.writeFieldBegin(ANOS_TITULACOES_MAXIMAS_FIELD_DESC);
				{
					oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.anosTitulacoesMaximas.size()));
					for (AnnotationValue _iter138 : struct.anosTitulacoesMaximas) {
						_iter138.write(oprot);
					}
					oprot.writeListEnd();
				}
				oprot.writeFieldEnd();
			}
			if (struct.pessoasAnnotations != null) {
				oprot.writeFieldBegin(PESSOAS_ANNOTATIONS_FIELD_DESC);
				{
					oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.I32, org.apache.thrift.protocol.TType.LIST,
							struct.pessoasAnnotations.size()));
					for (Map.Entry<AnnotationType, List<AnnotationValue>> _iter139 : struct.pessoasAnnotations.entrySet()) {
						oprot.writeI32(_iter139.getKey().getValue());
						{
							oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, _iter139.getValue().size()));
							for (AnnotationValue _iter140 : _iter139.getValue()) {
								_iter140.write(oprot);
							}
							oprot.writeListEnd();
						}
					}
					oprot.writeMapEnd();
				}
				oprot.writeFieldEnd();
			}
			oprot.writeFieldStop();
			oprot.writeStructEnd();
		}

	}

	private static class DimensionalInstituicaoRecordTupleSchemeFactory implements SchemeFactory {
		public DimensionalInstituicaoRecordTupleScheme getScheme() {
			return new DimensionalInstituicaoRecordTupleScheme();
		}
	}

	private static class DimensionalInstituicaoRecordTupleScheme extends TupleScheme<DimensionalInstituicaoRecord> {

		@Override
		public void write(org.apache.thrift.protocol.TProtocol prot, DimensionalInstituicaoRecord struct) throws org.apache.thrift.TException {
			TTupleProtocol oprot = (TTupleProtocol) prot;
			oprot.writeString(struct.id);
			oprot.writeI64(struct.lastUpdate);
			oprot.writeString(struct.processId);
			oprot.writeI32(struct.operationType.getValue());
			struct.instituicao.write(oprot);
			oprot.writeI32(struct.totalEstudante);
			oprot.writeI32(struct.totalEgresso);
			oprot.writeI32(struct.totalEndereco);
			oprot.writeI32(struct.totalAtividade);
			{
				oprot.writeI32(struct.tiposProducoes.size());
				for (AnnotationValue _iter141 : struct.tiposProducoes) {
					_iter141.write(oprot);
				}
			}
			{
				oprot.writeI32(struct.anosProducoes.size());
				for (AnnotationValue _iter142 : struct.anosProducoes) {
					_iter142.write(oprot);
				}
			}
			{
				oprot.writeI32(struct.niveisTitulacoesMaximas.size());
				for (AnnotationValue _iter143 : struct.niveisTitulacoesMaximas) {
					_iter143.write(oprot);
				}
			}
			{
				oprot.writeI32(struct.areasTitulacoesMaximas.size());
				for (AnnotationValue _iter144 : struct.areasTitulacoesMaximas) {
					_iter144.write(oprot);
				}
			}
			{
				oprot.writeI32(struct.anosTitulacoesMaximas.size());
				for (AnnotationValue _iter145 : struct.anosTitulacoesMaximas) {
					_iter145.write(oprot);
				}
			}
			{
				oprot.writeI32(struct.pessoasAnnotations.size());
				for (Map.Entry<AnnotationType, List<AnnotationValue>> _iter146 : struct.pessoasAnnotations.entrySet()) {
					oprot.writeI32(_iter146.getKey().getValue());
					{
						oprot.writeI32(_iter146.getValue().size());
						for (AnnotationValue _iter147 : _iter146.getValue()) {
							_iter147.write(oprot);
						}
					}
				}
			}
		}

		@Override
		public void read(org.apache.thrift.protocol.TProtocol prot, DimensionalInstituicaoRecord struct) throws org.apache.thrift.TException {
			TTupleProtocol iprot = (TTupleProtocol) prot;
			struct.id = iprot.readString();
			struct.setIdIsSet(true);
			struct.lastUpdate = iprot.readI64();
			struct.setLastUpdateIsSet(true);
			struct.processId = iprot.readString();
			struct.setProcessIdIsSet(true);
			struct.operationType = br.org.stela.intelectus.service.thrift.OperationType.findByValue(iprot.readI32());
			struct.setOperationTypeIsSet(true);
			struct.instituicao = new br.org.stela.intelectus.lattes.thrift.Instituicao();
			struct.instituicao.read(iprot);
			struct.setInstituicaoIsSet(true);
			struct.totalEstudante = iprot.readI32();
			struct.setTotalEstudanteIsSet(true);
			struct.totalEgresso = iprot.readI32();
			struct.setTotalEgressoIsSet(true);
			struct.totalEndereco = iprot.readI32();
			struct.setTotalEnderecoIsSet(true);
			struct.totalAtividade = iprot.readI32();
			struct.setTotalAtividadeIsSet(true);
			{
				org.apache.thrift.protocol.TList _list148 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
				struct.tiposProducoes = new ArrayList<AnnotationValue>(_list148.size);
				AnnotationValue _elem149;
				for (int _i150 = 0; _i150 < _list148.size; ++_i150) {
					_elem149 = new AnnotationValue();
					_elem149.read(iprot);
					struct.tiposProducoes.add(_elem149);
				}
			}
			struct.setTiposProducoesIsSet(true);
			{
				org.apache.thrift.protocol.TList _list151 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
				struct.anosProducoes = new ArrayList<AnnotationValue>(_list151.size);
				AnnotationValue _elem152;
				for (int _i153 = 0; _i153 < _list151.size; ++_i153) {
					_elem152 = new AnnotationValue();
					_elem152.read(iprot);
					struct.anosProducoes.add(_elem152);
				}
			}
			struct.setAnosProducoesIsSet(true);
			{
				org.apache.thrift.protocol.TList _list154 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
				struct.niveisTitulacoesMaximas = new ArrayList<AnnotationValue>(_list154.size);
				AnnotationValue _elem155;
				for (int _i156 = 0; _i156 < _list154.size; ++_i156) {
					_elem155 = new AnnotationValue();
					_elem155.read(iprot);
					struct.niveisTitulacoesMaximas.add(_elem155);
				}
			}
			struct.setNiveisTitulacoesMaximasIsSet(true);
			{
				org.apache.thrift.protocol.TList _list157 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
				struct.areasTitulacoesMaximas = new ArrayList<AnnotationValue>(_list157.size);
				AnnotationValue _elem158;
				for (int _i159 = 0; _i159 < _list157.size; ++_i159) {
					_elem158 = new AnnotationValue();
					_elem158.read(iprot);
					struct.areasTitulacoesMaximas.add(_elem158);
				}
			}
			struct.setAreasTitulacoesMaximasIsSet(true);
			{
				org.apache.thrift.protocol.TList _list160 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
				struct.anosTitulacoesMaximas = new ArrayList<AnnotationValue>(_list160.size);
				AnnotationValue _elem161;
				for (int _i162 = 0; _i162 < _list160.size; ++_i162) {
					_elem161 = new AnnotationValue();
					_elem161.read(iprot);
					struct.anosTitulacoesMaximas.add(_elem161);
				}
			}
			struct.setAnosTitulacoesMaximasIsSet(true);
			{
				org.apache.thrift.protocol.TMap _map163 =
						new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.I32, org.apache.thrift.protocol.TType.LIST, iprot.readI32());
				struct.pessoasAnnotations = new HashMap<AnnotationType, List<AnnotationValue>>(2 * _map163.size);
				AnnotationType _key164;
				List<AnnotationValue> _val165;
				for (int _i166 = 0; _i166 < _map163.size; ++_i166) {
					_key164 = br.org.stela.intelectus.service.thrift.AnnotationType.findByValue(iprot.readI32());
					{
						org.apache.thrift.protocol.TList _list167 =
								new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
						_val165 = new ArrayList<AnnotationValue>(_list167.size);
						AnnotationValue _elem168;
						for (int _i169 = 0; _i169 < _list167.size; ++_i169) {
							_elem168 = new AnnotationValue();
							_elem168.read(iprot);
							_val165.add(_elem168);
						}
					}
					struct.pessoasAnnotations.put(_key164, _val165);
				}
			}
			struct.setPessoasAnnotationsIsSet(true);
		}
	}

}
