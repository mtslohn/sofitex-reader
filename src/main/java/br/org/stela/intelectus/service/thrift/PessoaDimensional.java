/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package br.org.stela.intelectus.service.thrift;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-6-9")
public class PessoaDimensional
		implements org.apache.thrift.TBase<PessoaDimensional, PessoaDimensional._Fields>, java.io.Serializable, Cloneable, Comparable<PessoaDimensional> {
	private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("PessoaDimensional");

	private static final org.apache.thrift.protocol.TField PALAVRAS_CHAVE_FIELD_DESC =
			new org.apache.thrift.protocol.TField("palavrasChave", org.apache.thrift.protocol.TType.LIST, (short) 1);

	private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();

	static {
		schemes.put(StandardScheme.class, new PessoaDimensionalStandardSchemeFactory());
		schemes.put(TupleScheme.class, new PessoaDimensionalTupleSchemeFactory());
	}

	private List<br.org.stela.intelectus.lattes.thrift.PalavraChave> palavrasChave; // optional

	/** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
	public enum _Fields implements org.apache.thrift.TFieldIdEnum {
		PALAVRAS_CHAVE((short) 1, "palavrasChave");

		private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

		static {
			for (_Fields field : EnumSet.allOf(_Fields.class)) {
				byName.put(field.getFieldName(), field);
			}
		}

		/**
		 * Find the _Fields constant that matches fieldId, or null if its not found.
		 */
		public static _Fields findByThriftId(int fieldId) {
			switch (fieldId) {
			case 1: // PALAVRAS_CHAVE
				return PALAVRAS_CHAVE;
			default:
				return null;
			}
		}

		/**
		 * Find the _Fields constant that matches fieldId, throwing an exception if it is not found.
		 */
		public static _Fields findByThriftIdOrThrow(int fieldId) {
			_Fields fields = findByThriftId(fieldId);
			if (fields == null)
				throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
			return fields;
		}

		/**
		 * Find the _Fields constant that matches name, or null if its not found.
		 */
		public static _Fields findByName(String name) {
			return byName.get(name);
		}

		private final short _thriftId;
		private final String _fieldName;

		_Fields(short thriftId, String fieldName) {
			_thriftId = thriftId;
			_fieldName = fieldName;
		}

		public short getThriftFieldId() {
			return _thriftId;
		}

		public String getFieldName() {
			return _fieldName;
		}
	}

	// isset id assignments
	private static final _Fields optionals[] = {_Fields.PALAVRAS_CHAVE};
	public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;

	static {
		Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
		tmpMap.put(_Fields.PALAVRAS_CHAVE,
				new org.apache.thrift.meta_data.FieldMetaData("palavrasChave", org.apache.thrift.TFieldRequirementType.OPTIONAL,
						new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, new org.apache.thrift.meta_data.StructMetaData(
								org.apache.thrift.protocol.TType.STRUCT, br.org.stela.intelectus.lattes.thrift.PalavraChave.class))));
		metaDataMap = Collections.unmodifiableMap(tmpMap);
		org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(PessoaDimensional.class, metaDataMap);
	}

	public PessoaDimensional() {
	}

	/**
	 * Performs a deep copy on <i>other</i>.
	 */
	public PessoaDimensional(PessoaDimensional other) {
		if (other.isSetPalavrasChave()) {
			List<br.org.stela.intelectus.lattes.thrift.PalavraChave> __this__palavrasChave =
					new ArrayList<br.org.stela.intelectus.lattes.thrift.PalavraChave>(other.palavrasChave.size());
			for (br.org.stela.intelectus.lattes.thrift.PalavraChave other_element : other.palavrasChave) {
				__this__palavrasChave.add(new br.org.stela.intelectus.lattes.thrift.PalavraChave(other_element));
			}
			this.palavrasChave = __this__palavrasChave;
		}
	}

	public PessoaDimensional deepCopy() {
		return new PessoaDimensional(this);
	}

	@Override
	public void clear() {
		this.palavrasChave = null;
	}

	public int getPalavrasChaveSize() {
		return (this.palavrasChave == null) ? 0 : this.palavrasChave.size();
	}

	public java.util.Iterator<br.org.stela.intelectus.lattes.thrift.PalavraChave> getPalavrasChaveIterator() {
		return (this.palavrasChave == null) ? null : this.palavrasChave.iterator();
	}

	public void addToPalavrasChave(br.org.stela.intelectus.lattes.thrift.PalavraChave elem) {
		if (this.palavrasChave == null) {
			this.palavrasChave = new ArrayList<br.org.stela.intelectus.lattes.thrift.PalavraChave>();
		}
		this.palavrasChave.add(elem);
	}

	public List<br.org.stela.intelectus.lattes.thrift.PalavraChave> getPalavrasChave() {
		return this.palavrasChave;
	}

	public void setPalavrasChave(List<br.org.stela.intelectus.lattes.thrift.PalavraChave> palavrasChave) {
		this.palavrasChave = palavrasChave;
	}

	public void unsetPalavrasChave() {
		this.palavrasChave = null;
	}

	/** Returns true if field palavrasChave is set (has been assigned a value) and false otherwise */
	public boolean isSetPalavrasChave() {
		return this.palavrasChave != null;
	}

	public void setPalavrasChaveIsSet(boolean value) {
		if (!value) {
			this.palavrasChave = null;
		}
	}

	public void setFieldValue(_Fields field, Object value) {
		switch (field) {
		case PALAVRAS_CHAVE:
			if (value == null) {
				unsetPalavrasChave();
			} else {
				setPalavrasChave((List<br.org.stela.intelectus.lattes.thrift.PalavraChave>) value);
			}
			break;

		}
	}

	public Object getFieldValue(_Fields field) {
		switch (field) {
		case PALAVRAS_CHAVE:
			return getPalavrasChave();

		}
		throw new IllegalStateException();
	}

	/** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
	public boolean isSet(_Fields field) {
		if (field == null) {
			throw new IllegalArgumentException();
		}

		switch (field) {
		case PALAVRAS_CHAVE:
			return isSetPalavrasChave();
		}
		throw new IllegalStateException();
	}

	@Override
	public boolean equals(Object that) {
		if (that == null)
			return false;
		if (that instanceof PessoaDimensional)
			return this.equals((PessoaDimensional) that);
		return false;
	}

	public boolean equals(PessoaDimensional that) {
		if (that == null)
			return false;

		boolean this_present_palavrasChave = true && this.isSetPalavrasChave();
		boolean that_present_palavrasChave = true && that.isSetPalavrasChave();
		if (this_present_palavrasChave || that_present_palavrasChave) {
			if (!(this_present_palavrasChave && that_present_palavrasChave))
				return false;
			if (!this.palavrasChave.equals(that.palavrasChave))
				return false;
		}

		return true;
	}

	@Override
	public int hashCode() {
		List<Object> list = new ArrayList<Object>();

		boolean present_palavrasChave = true && (isSetPalavrasChave());
		list.add(present_palavrasChave);
		if (present_palavrasChave)
			list.add(palavrasChave);

		return list.hashCode();
	}

	@Override
	public int compareTo(PessoaDimensional other) {
		if (!getClass().equals(other.getClass())) {
			return getClass().getName().compareTo(other.getClass().getName());
		}

		int lastComparison = 0;

		lastComparison = Boolean.valueOf(isSetPalavrasChave()).compareTo(other.isSetPalavrasChave());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetPalavrasChave()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.palavrasChave, other.palavrasChave);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		return 0;
	}

	public _Fields fieldForId(int fieldId) {
		return _Fields.findByThriftId(fieldId);
	}

	public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
		schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
	}

	public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
		schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder("PessoaDimensional(");
		boolean first = true;

		if (isSetPalavrasChave()) {
			sb.append("palavrasChave:");
			if (this.palavrasChave == null) {
				sb.append("null");
			} else {
				sb.append(this.palavrasChave);
			}
			first = false;
		}
		sb.append(")");
		return sb.toString();
	}

	public void validate() throws org.apache.thrift.TException {
		// check for required fields
		// check for sub-struct validity
	}

	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
		try {
			write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
		} catch (org.apache.thrift.TException te) {
			throw new java.io.IOException(te);
		}
	}

	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
		try {
			read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
		} catch (org.apache.thrift.TException te) {
			throw new java.io.IOException(te);
		}
	}

	private static class PessoaDimensionalStandardSchemeFactory implements SchemeFactory {
		public PessoaDimensionalStandardScheme getScheme() {
			return new PessoaDimensionalStandardScheme();
		}
	}

	private static class PessoaDimensionalStandardScheme extends StandardScheme<PessoaDimensional> {

		public void read(org.apache.thrift.protocol.TProtocol iprot, PessoaDimensional struct) throws org.apache.thrift.TException {
			org.apache.thrift.protocol.TField schemeField;
			iprot.readStructBegin();
			while (true) {
				schemeField = iprot.readFieldBegin();
				if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
					break;
				}
				switch (schemeField.id) {
				case 1: // PALAVRAS_CHAVE
					if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
						{
							org.apache.thrift.protocol.TList _list36 = iprot.readListBegin();
							struct.palavrasChave = new ArrayList<br.org.stela.intelectus.lattes.thrift.PalavraChave>(_list36.size);
							br.org.stela.intelectus.lattes.thrift.PalavraChave _elem37;
							for (int _i38 = 0; _i38 < _list36.size; ++_i38) {
								_elem37 = new br.org.stela.intelectus.lattes.thrift.PalavraChave();
								_elem37.read(iprot);
								struct.palavrasChave.add(_elem37);
							}
							iprot.readListEnd();
						}
						struct.setPalavrasChaveIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				default:
					org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
				}
				iprot.readFieldEnd();
			}
			iprot.readStructEnd();
			struct.validate();
		}

		public void write(org.apache.thrift.protocol.TProtocol oprot, PessoaDimensional struct) throws org.apache.thrift.TException {
			struct.validate();

			oprot.writeStructBegin(STRUCT_DESC);
			if (struct.palavrasChave != null) {
				if (struct.isSetPalavrasChave()) {
					oprot.writeFieldBegin(PALAVRAS_CHAVE_FIELD_DESC);
					{
						oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.palavrasChave.size()));
						for (br.org.stela.intelectus.lattes.thrift.PalavraChave _iter39 : struct.palavrasChave) {
							_iter39.write(oprot);
						}
						oprot.writeListEnd();
					}
					oprot.writeFieldEnd();
				}
			}
			oprot.writeFieldStop();
			oprot.writeStructEnd();
		}

	}

	private static class PessoaDimensionalTupleSchemeFactory implements SchemeFactory {
		public PessoaDimensionalTupleScheme getScheme() {
			return new PessoaDimensionalTupleScheme();
		}
	}

	private static class PessoaDimensionalTupleScheme extends TupleScheme<PessoaDimensional> {

		@Override
		public void write(org.apache.thrift.protocol.TProtocol prot, PessoaDimensional struct) throws org.apache.thrift.TException {
			TTupleProtocol oprot = (TTupleProtocol) prot;
			BitSet optionals = new BitSet();
			if (struct.isSetPalavrasChave()) {
				optionals.set(0);
			}
			oprot.writeBitSet(optionals, 1);
			if (struct.isSetPalavrasChave()) {
				{
					oprot.writeI32(struct.palavrasChave.size());
					for (br.org.stela.intelectus.lattes.thrift.PalavraChave _iter40 : struct.palavrasChave) {
						_iter40.write(oprot);
					}
				}
			}
		}

		@Override
		public void read(org.apache.thrift.protocol.TProtocol prot, PessoaDimensional struct) throws org.apache.thrift.TException {
			TTupleProtocol iprot = (TTupleProtocol) prot;
			BitSet incoming = iprot.readBitSet(1);
			if (incoming.get(0)) {
				{
					org.apache.thrift.protocol.TList _list41 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
					struct.palavrasChave = new ArrayList<br.org.stela.intelectus.lattes.thrift.PalavraChave>(_list41.size);
					br.org.stela.intelectus.lattes.thrift.PalavraChave _elem42;
					for (int _i43 = 0; _i43 < _list41.size; ++_i43) {
						_elem42 = new br.org.stela.intelectus.lattes.thrift.PalavraChave();
						_elem42.read(iprot);
						struct.palavrasChave.add(_elem42);
					}
				}
				struct.setPalavrasChaveIsSet(true);
			}
		}
	}

}
