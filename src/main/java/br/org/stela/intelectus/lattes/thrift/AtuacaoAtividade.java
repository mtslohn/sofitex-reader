/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package br.org.stela.intelectus.lattes.thrift;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-6-9")
public class AtuacaoAtividade
		implements org.apache.thrift.TBase<AtuacaoAtividade, AtuacaoAtividade._Fields>, java.io.Serializable, Cloneable, Comparable<AtuacaoAtividade> {
	private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("AtuacaoAtividade");

	private static final org.apache.thrift.protocol.TField NRO_ID_CNPQ_FIELD_DESC =
			new org.apache.thrift.protocol.TField("nroIdCnpq", org.apache.thrift.protocol.TType.STRING, (short) 1);
	private static final org.apache.thrift.protocol.TField SEQ_ATIVIDADE_FIELD_DESC =
			new org.apache.thrift.protocol.TField("seqAtividade", org.apache.thrift.protocol.TType.I32, (short) 2);
	private static final org.apache.thrift.protocol.TField COD_INST_FIELD_DESC =
			new org.apache.thrift.protocol.TField("codInst", org.apache.thrift.protocol.TType.STRING, (short) 3);
	private static final org.apache.thrift.protocol.TField NME_INST_FIELD_DESC =
			new org.apache.thrift.protocol.TField("nmeInst", org.apache.thrift.protocol.TType.STRING, (short) 4);
	private static final org.apache.thrift.protocol.TField SGL_INST_FIELD_DESC =
			new org.apache.thrift.protocol.TField("sglInst", org.apache.thrift.protocol.TType.STRING, (short) 5);
	private static final org.apache.thrift.protocol.TField DSC_ABREV_INST_FIELD_DESC =
			new org.apache.thrift.protocol.TField("dscAbrevInst", org.apache.thrift.protocol.TType.STRING, (short) 6);
	private static final org.apache.thrift.protocol.TField DSC_UF_INST_FIELD_DESC =
			new org.apache.thrift.protocol.TField("dscUfInst", org.apache.thrift.protocol.TType.STRING, (short) 7);
	private static final org.apache.thrift.protocol.TField DSC_REGIAO_INST_FIELD_DESC =
			new org.apache.thrift.protocol.TField("dscRegiaoInst", org.apache.thrift.protocol.TType.STRING, (short) 8);
	private static final org.apache.thrift.protocol.TField COD_SETOR_ECON_INST_FIELD_DESC =
			new org.apache.thrift.protocol.TField("codSetorEconInst", org.apache.thrift.protocol.TType.STRING, (short) 9);
	private static final org.apache.thrift.protocol.TField DSC_SETOR_ECON_INST_FIELD_DESC =
			new org.apache.thrift.protocol.TField("dscSetorEconInst", org.apache.thrift.protocol.TType.STRING, (short) 10);
	private static final org.apache.thrift.protocol.TField COD_INST_OUTRA_FIELD_DESC =
			new org.apache.thrift.protocol.TField("codInstOutra", org.apache.thrift.protocol.TType.STRING, (short) 11);
	private static final org.apache.thrift.protocol.TField NME_INST_OUTRA_FIELD_DESC =
			new org.apache.thrift.protocol.TField("nmeInstOutra", org.apache.thrift.protocol.TType.STRING, (short) 12);
	private static final org.apache.thrift.protocol.TField SGL_INST_OUTRA_FIELD_DESC =
			new org.apache.thrift.protocol.TField("sglInstOutra", org.apache.thrift.protocol.TType.STRING, (short) 13);
	private static final org.apache.thrift.protocol.TField DSC_ABREV_INST_OUTRA_FIELD_DESC =
			new org.apache.thrift.protocol.TField("dscAbrevInstOutra", org.apache.thrift.protocol.TType.STRING, (short) 14);
	private static final org.apache.thrift.protocol.TField DSC_UF_INST_OUTRA_FIELD_DESC =
			new org.apache.thrift.protocol.TField("dscUfInstOutra", org.apache.thrift.protocol.TType.STRING, (short) 15);
	private static final org.apache.thrift.protocol.TField DSC_REGIAO_INST_OUTRA_FIELD_DESC =
			new org.apache.thrift.protocol.TField("dscRegiaoInstOutra", org.apache.thrift.protocol.TType.STRING, (short) 16);
	private static final org.apache.thrift.protocol.TField HISTORICOS_FIELD_DESC =
			new org.apache.thrift.protocol.TField("historicos", org.apache.thrift.protocol.TType.LIST, (short) 17);
	private static final org.apache.thrift.protocol.TField FUNCOES_FIELD_DESC =
			new org.apache.thrift.protocol.TField("funcoes", org.apache.thrift.protocol.TType.LIST, (short) 18);

	private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();

	static {
		schemes.put(StandardScheme.class, new AtuacaoAtividadeStandardSchemeFactory());
		schemes.put(TupleScheme.class, new AtuacaoAtividadeTupleSchemeFactory());
	}

	private String nroIdCnpq; // required
	private int seqAtividade; // optional
	private String codInst; // optional
	private String nmeInst; // optional
	private String sglInst; // optional
	private String dscAbrevInst; // optional
	private String dscUfInst; // optional
	private String dscRegiaoInst; // optional
	private String codSetorEconInst; // optional
	private String dscSetorEconInst; // optional
	private String codInstOutra; // optional
	private String nmeInstOutra; // optional
	private String sglInstOutra; // optional
	private String dscAbrevInstOutra; // optional
	private String dscUfInstOutra; // optional
	private String dscRegiaoInstOutra; // optional
	private List<AtuacaoAtividadeHistorico> historicos; // optional
	private List<AtuacaoAtividadeFuncao> funcoes; // optional

	/** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
	public enum _Fields implements org.apache.thrift.TFieldIdEnum {
		NRO_ID_CNPQ((short) 1, "nroIdCnpq"),
		SEQ_ATIVIDADE((short) 2, "seqAtividade"),
		COD_INST((short) 3, "codInst"),
		NME_INST((short) 4, "nmeInst"),
		SGL_INST((short) 5, "sglInst"),
		DSC_ABREV_INST((short) 6, "dscAbrevInst"),
		DSC_UF_INST((short) 7, "dscUfInst"),
		DSC_REGIAO_INST((short) 8, "dscRegiaoInst"),
		COD_SETOR_ECON_INST((short) 9, "codSetorEconInst"),
		DSC_SETOR_ECON_INST((short) 10, "dscSetorEconInst"),
		COD_INST_OUTRA((short) 11, "codInstOutra"),
		NME_INST_OUTRA((short) 12, "nmeInstOutra"),
		SGL_INST_OUTRA((short) 13, "sglInstOutra"),
		DSC_ABREV_INST_OUTRA((short) 14, "dscAbrevInstOutra"),
		DSC_UF_INST_OUTRA((short) 15, "dscUfInstOutra"),
		DSC_REGIAO_INST_OUTRA((short) 16, "dscRegiaoInstOutra"),
		HISTORICOS((short) 17, "historicos"),
		FUNCOES((short) 18, "funcoes");

		private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

		static {
			for (_Fields field : EnumSet.allOf(_Fields.class)) {
				byName.put(field.getFieldName(), field);
			}
		}

		/**
		 * Find the _Fields constant that matches fieldId, or null if its not found.
		 */
		public static _Fields findByThriftId(int fieldId) {
			switch (fieldId) {
			case 1: // NRO_ID_CNPQ
				return NRO_ID_CNPQ;
			case 2: // SEQ_ATIVIDADE
				return SEQ_ATIVIDADE;
			case 3: // COD_INST
				return COD_INST;
			case 4: // NME_INST
				return NME_INST;
			case 5: // SGL_INST
				return SGL_INST;
			case 6: // DSC_ABREV_INST
				return DSC_ABREV_INST;
			case 7: // DSC_UF_INST
				return DSC_UF_INST;
			case 8: // DSC_REGIAO_INST
				return DSC_REGIAO_INST;
			case 9: // COD_SETOR_ECON_INST
				return COD_SETOR_ECON_INST;
			case 10: // DSC_SETOR_ECON_INST
				return DSC_SETOR_ECON_INST;
			case 11: // COD_INST_OUTRA
				return COD_INST_OUTRA;
			case 12: // NME_INST_OUTRA
				return NME_INST_OUTRA;
			case 13: // SGL_INST_OUTRA
				return SGL_INST_OUTRA;
			case 14: // DSC_ABREV_INST_OUTRA
				return DSC_ABREV_INST_OUTRA;
			case 15: // DSC_UF_INST_OUTRA
				return DSC_UF_INST_OUTRA;
			case 16: // DSC_REGIAO_INST_OUTRA
				return DSC_REGIAO_INST_OUTRA;
			case 17: // HISTORICOS
				return HISTORICOS;
			case 18: // FUNCOES
				return FUNCOES;
			default:
				return null;
			}
		}

		/**
		 * Find the _Fields constant that matches fieldId, throwing an exception if it is not found.
		 */
		public static _Fields findByThriftIdOrThrow(int fieldId) {
			_Fields fields = findByThriftId(fieldId);
			if (fields == null)
				throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
			return fields;
		}

		/**
		 * Find the _Fields constant that matches name, or null if its not found.
		 */
		public static _Fields findByName(String name) {
			return byName.get(name);
		}

		private final short _thriftId;
		private final String _fieldName;

		_Fields(short thriftId, String fieldName) {
			_thriftId = thriftId;
			_fieldName = fieldName;
		}

		public short getThriftFieldId() {
			return _thriftId;
		}

		public String getFieldName() {
			return _fieldName;
		}
	}

	// isset id assignments
	private static final int __SEQATIVIDADE_ISSET_ID = 0;
	private byte __isset_bitfield = 0;
	private static final _Fields optionals[] =
			{_Fields.SEQ_ATIVIDADE, _Fields.COD_INST, _Fields.NME_INST, _Fields.SGL_INST, _Fields.DSC_ABREV_INST, _Fields.DSC_UF_INST, _Fields.DSC_REGIAO_INST,
					_Fields.COD_SETOR_ECON_INST, _Fields.DSC_SETOR_ECON_INST, _Fields.COD_INST_OUTRA, _Fields.NME_INST_OUTRA, _Fields.SGL_INST_OUTRA,
					_Fields.DSC_ABREV_INST_OUTRA, _Fields.DSC_UF_INST_OUTRA, _Fields.DSC_REGIAO_INST_OUTRA, _Fields.HISTORICOS, _Fields.FUNCOES};
	public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;

	static {
		Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
		tmpMap.put(_Fields.NRO_ID_CNPQ, new org.apache.thrift.meta_data.FieldMetaData("nroIdCnpq", org.apache.thrift.TFieldRequirementType.REQUIRED,
				new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
		tmpMap.put(_Fields.SEQ_ATIVIDADE, new org.apache.thrift.meta_data.FieldMetaData("seqAtividade", org.apache.thrift.TFieldRequirementType.OPTIONAL,
				new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32, "int")));
		tmpMap.put(_Fields.COD_INST, new org.apache.thrift.meta_data.FieldMetaData("codInst", org.apache.thrift.TFieldRequirementType.OPTIONAL,
				new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
		tmpMap.put(_Fields.NME_INST, new org.apache.thrift.meta_data.FieldMetaData("nmeInst", org.apache.thrift.TFieldRequirementType.OPTIONAL,
				new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
		tmpMap.put(_Fields.SGL_INST, new org.apache.thrift.meta_data.FieldMetaData("sglInst", org.apache.thrift.TFieldRequirementType.OPTIONAL,
				new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
		tmpMap.put(_Fields.DSC_ABREV_INST, new org.apache.thrift.meta_data.FieldMetaData("dscAbrevInst", org.apache.thrift.TFieldRequirementType.OPTIONAL,
				new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
		tmpMap.put(_Fields.DSC_UF_INST, new org.apache.thrift.meta_data.FieldMetaData("dscUfInst", org.apache.thrift.TFieldRequirementType.OPTIONAL,
				new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
		tmpMap.put(_Fields.DSC_REGIAO_INST, new org.apache.thrift.meta_data.FieldMetaData("dscRegiaoInst", org.apache.thrift.TFieldRequirementType.OPTIONAL,
				new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
		tmpMap.put(_Fields.COD_SETOR_ECON_INST, new org.apache.thrift.meta_data.FieldMetaData("codSetorEconInst",
				org.apache.thrift.TFieldRequirementType.OPTIONAL, new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
		tmpMap.put(_Fields.DSC_SETOR_ECON_INST, new org.apache.thrift.meta_data.FieldMetaData("dscSetorEconInst",
				org.apache.thrift.TFieldRequirementType.OPTIONAL, new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
		tmpMap.put(_Fields.COD_INST_OUTRA, new org.apache.thrift.meta_data.FieldMetaData("codInstOutra", org.apache.thrift.TFieldRequirementType.OPTIONAL,
				new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
		tmpMap.put(_Fields.NME_INST_OUTRA, new org.apache.thrift.meta_data.FieldMetaData("nmeInstOutra", org.apache.thrift.TFieldRequirementType.OPTIONAL,
				new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
		tmpMap.put(_Fields.SGL_INST_OUTRA, new org.apache.thrift.meta_data.FieldMetaData("sglInstOutra", org.apache.thrift.TFieldRequirementType.OPTIONAL,
				new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
		tmpMap.put(_Fields.DSC_ABREV_INST_OUTRA, new org.apache.thrift.meta_data.FieldMetaData("dscAbrevInstOutra",
				org.apache.thrift.TFieldRequirementType.OPTIONAL, new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
		tmpMap.put(_Fields.DSC_UF_INST_OUTRA, new org.apache.thrift.meta_data.FieldMetaData("dscUfInstOutra", org.apache.thrift.TFieldRequirementType.OPTIONAL,
				new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
		tmpMap.put(_Fields.DSC_REGIAO_INST_OUTRA, new org.apache.thrift.meta_data.FieldMetaData("dscRegiaoInstOutra",
				org.apache.thrift.TFieldRequirementType.OPTIONAL, new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
		tmpMap.put(_Fields.HISTORICOS,
				new org.apache.thrift.meta_data.FieldMetaData("historicos", org.apache.thrift.TFieldRequirementType.OPTIONAL,
						new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST,
								new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, AtuacaoAtividadeHistorico.class))));
		tmpMap.put(_Fields.FUNCOES,
				new org.apache.thrift.meta_data.FieldMetaData("funcoes", org.apache.thrift.TFieldRequirementType.OPTIONAL,
						new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST,
								new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, AtuacaoAtividadeFuncao.class))));
		metaDataMap = Collections.unmodifiableMap(tmpMap);
		org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(AtuacaoAtividade.class, metaDataMap);
	}

	public AtuacaoAtividade() {
	}

	public AtuacaoAtividade(String nroIdCnpq) {
		this();
		this.nroIdCnpq = nroIdCnpq;
	}

	/**
	 * Performs a deep copy on <i>other</i>.
	 */
	public AtuacaoAtividade(AtuacaoAtividade other) {
		__isset_bitfield = other.__isset_bitfield;
		if (other.isSetNroIdCnpq()) {
			this.nroIdCnpq = other.nroIdCnpq;
		}
		this.seqAtividade = other.seqAtividade;
		if (other.isSetCodInst()) {
			this.codInst = other.codInst;
		}
		if (other.isSetNmeInst()) {
			this.nmeInst = other.nmeInst;
		}
		if (other.isSetSglInst()) {
			this.sglInst = other.sglInst;
		}
		if (other.isSetDscAbrevInst()) {
			this.dscAbrevInst = other.dscAbrevInst;
		}
		if (other.isSetDscUfInst()) {
			this.dscUfInst = other.dscUfInst;
		}
		if (other.isSetDscRegiaoInst()) {
			this.dscRegiaoInst = other.dscRegiaoInst;
		}
		if (other.isSetCodSetorEconInst()) {
			this.codSetorEconInst = other.codSetorEconInst;
		}
		if (other.isSetDscSetorEconInst()) {
			this.dscSetorEconInst = other.dscSetorEconInst;
		}
		if (other.isSetCodInstOutra()) {
			this.codInstOutra = other.codInstOutra;
		}
		if (other.isSetNmeInstOutra()) {
			this.nmeInstOutra = other.nmeInstOutra;
		}
		if (other.isSetSglInstOutra()) {
			this.sglInstOutra = other.sglInstOutra;
		}
		if (other.isSetDscAbrevInstOutra()) {
			this.dscAbrevInstOutra = other.dscAbrevInstOutra;
		}
		if (other.isSetDscUfInstOutra()) {
			this.dscUfInstOutra = other.dscUfInstOutra;
		}
		if (other.isSetDscRegiaoInstOutra()) {
			this.dscRegiaoInstOutra = other.dscRegiaoInstOutra;
		}
		if (other.isSetHistoricos()) {
			List<AtuacaoAtividadeHistorico> __this__historicos = new ArrayList<AtuacaoAtividadeHistorico>(other.historicos.size());
			for (AtuacaoAtividadeHistorico other_element : other.historicos) {
				__this__historicos.add(new AtuacaoAtividadeHistorico(other_element));
			}
			this.historicos = __this__historicos;
		}
		if (other.isSetFuncoes()) {
			List<AtuacaoAtividadeFuncao> __this__funcoes = new ArrayList<AtuacaoAtividadeFuncao>(other.funcoes.size());
			for (AtuacaoAtividadeFuncao other_element : other.funcoes) {
				__this__funcoes.add(new AtuacaoAtividadeFuncao(other_element));
			}
			this.funcoes = __this__funcoes;
		}
	}

	public AtuacaoAtividade deepCopy() {
		return new AtuacaoAtividade(this);
	}

	@Override
	public void clear() {
		this.nroIdCnpq = null;
		setSeqAtividadeIsSet(false);
		this.seqAtividade = 0;
		this.codInst = null;
		this.nmeInst = null;
		this.sglInst = null;
		this.dscAbrevInst = null;
		this.dscUfInst = null;
		this.dscRegiaoInst = null;
		this.codSetorEconInst = null;
		this.dscSetorEconInst = null;
		this.codInstOutra = null;
		this.nmeInstOutra = null;
		this.sglInstOutra = null;
		this.dscAbrevInstOutra = null;
		this.dscUfInstOutra = null;
		this.dscRegiaoInstOutra = null;
		this.historicos = null;
		this.funcoes = null;
	}

	public String getNroIdCnpq() {
		return this.nroIdCnpq;
	}

	public void setNroIdCnpq(String nroIdCnpq) {
		this.nroIdCnpq = nroIdCnpq;
	}

	public void unsetNroIdCnpq() {
		this.nroIdCnpq = null;
	}

	/** Returns true if field nroIdCnpq is set (has been assigned a value) and false otherwise */
	public boolean isSetNroIdCnpq() {
		return this.nroIdCnpq != null;
	}

	public void setNroIdCnpqIsSet(boolean value) {
		if (!value) {
			this.nroIdCnpq = null;
		}
	}

	public int getSeqAtividade() {
		return this.seqAtividade;
	}

	public void setSeqAtividade(int seqAtividade) {
		this.seqAtividade = seqAtividade;
		setSeqAtividadeIsSet(true);
	}

	public void unsetSeqAtividade() {
		__isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SEQATIVIDADE_ISSET_ID);
	}

	/** Returns true if field seqAtividade is set (has been assigned a value) and false otherwise */
	public boolean isSetSeqAtividade() {
		return EncodingUtils.testBit(__isset_bitfield, __SEQATIVIDADE_ISSET_ID);
	}

	public void setSeqAtividadeIsSet(boolean value) {
		__isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SEQATIVIDADE_ISSET_ID, value);
	}

	public String getCodInst() {
		return this.codInst;
	}

	public void setCodInst(String codInst) {
		this.codInst = codInst;
	}

	public void unsetCodInst() {
		this.codInst = null;
	}

	/** Returns true if field codInst is set (has been assigned a value) and false otherwise */
	public boolean isSetCodInst() {
		return this.codInst != null;
	}

	public void setCodInstIsSet(boolean value) {
		if (!value) {
			this.codInst = null;
		}
	}

	public String getNmeInst() {
		return this.nmeInst;
	}

	public void setNmeInst(String nmeInst) {
		this.nmeInst = nmeInst;
	}

	public void unsetNmeInst() {
		this.nmeInst = null;
	}

	/** Returns true if field nmeInst is set (has been assigned a value) and false otherwise */
	public boolean isSetNmeInst() {
		return this.nmeInst != null;
	}

	public void setNmeInstIsSet(boolean value) {
		if (!value) {
			this.nmeInst = null;
		}
	}

	public String getSglInst() {
		return this.sglInst;
	}

	public void setSglInst(String sglInst) {
		this.sglInst = sglInst;
	}

	public void unsetSglInst() {
		this.sglInst = null;
	}

	/** Returns true if field sglInst is set (has been assigned a value) and false otherwise */
	public boolean isSetSglInst() {
		return this.sglInst != null;
	}

	public void setSglInstIsSet(boolean value) {
		if (!value) {
			this.sglInst = null;
		}
	}

	public String getDscAbrevInst() {
		return this.dscAbrevInst;
	}

	public void setDscAbrevInst(String dscAbrevInst) {
		this.dscAbrevInst = dscAbrevInst;
	}

	public void unsetDscAbrevInst() {
		this.dscAbrevInst = null;
	}

	/** Returns true if field dscAbrevInst is set (has been assigned a value) and false otherwise */
	public boolean isSetDscAbrevInst() {
		return this.dscAbrevInst != null;
	}

	public void setDscAbrevInstIsSet(boolean value) {
		if (!value) {
			this.dscAbrevInst = null;
		}
	}

	public String getDscUfInst() {
		return this.dscUfInst;
	}

	public void setDscUfInst(String dscUfInst) {
		this.dscUfInst = dscUfInst;
	}

	public void unsetDscUfInst() {
		this.dscUfInst = null;
	}

	/** Returns true if field dscUfInst is set (has been assigned a value) and false otherwise */
	public boolean isSetDscUfInst() {
		return this.dscUfInst != null;
	}

	public void setDscUfInstIsSet(boolean value) {
		if (!value) {
			this.dscUfInst = null;
		}
	}

	public String getDscRegiaoInst() {
		return this.dscRegiaoInst;
	}

	public void setDscRegiaoInst(String dscRegiaoInst) {
		this.dscRegiaoInst = dscRegiaoInst;
	}

	public void unsetDscRegiaoInst() {
		this.dscRegiaoInst = null;
	}

	/** Returns true if field dscRegiaoInst is set (has been assigned a value) and false otherwise */
	public boolean isSetDscRegiaoInst() {
		return this.dscRegiaoInst != null;
	}

	public void setDscRegiaoInstIsSet(boolean value) {
		if (!value) {
			this.dscRegiaoInst = null;
		}
	}

	public String getCodSetorEconInst() {
		return this.codSetorEconInst;
	}

	public void setCodSetorEconInst(String codSetorEconInst) {
		this.codSetorEconInst = codSetorEconInst;
	}

	public void unsetCodSetorEconInst() {
		this.codSetorEconInst = null;
	}

	/** Returns true if field codSetorEconInst is set (has been assigned a value) and false otherwise */
	public boolean isSetCodSetorEconInst() {
		return this.codSetorEconInst != null;
	}

	public void setCodSetorEconInstIsSet(boolean value) {
		if (!value) {
			this.codSetorEconInst = null;
		}
	}

	public String getDscSetorEconInst() {
		return this.dscSetorEconInst;
	}

	public void setDscSetorEconInst(String dscSetorEconInst) {
		this.dscSetorEconInst = dscSetorEconInst;
	}

	public void unsetDscSetorEconInst() {
		this.dscSetorEconInst = null;
	}

	/** Returns true if field dscSetorEconInst is set (has been assigned a value) and false otherwise */
	public boolean isSetDscSetorEconInst() {
		return this.dscSetorEconInst != null;
	}

	public void setDscSetorEconInstIsSet(boolean value) {
		if (!value) {
			this.dscSetorEconInst = null;
		}
	}

	public String getCodInstOutra() {
		return this.codInstOutra;
	}

	public void setCodInstOutra(String codInstOutra) {
		this.codInstOutra = codInstOutra;
	}

	public void unsetCodInstOutra() {
		this.codInstOutra = null;
	}

	/** Returns true if field codInstOutra is set (has been assigned a value) and false otherwise */
	public boolean isSetCodInstOutra() {
		return this.codInstOutra != null;
	}

	public void setCodInstOutraIsSet(boolean value) {
		if (!value) {
			this.codInstOutra = null;
		}
	}

	public String getNmeInstOutra() {
		return this.nmeInstOutra;
	}

	public void setNmeInstOutra(String nmeInstOutra) {
		this.nmeInstOutra = nmeInstOutra;
	}

	public void unsetNmeInstOutra() {
		this.nmeInstOutra = null;
	}

	/** Returns true if field nmeInstOutra is set (has been assigned a value) and false otherwise */
	public boolean isSetNmeInstOutra() {
		return this.nmeInstOutra != null;
	}

	public void setNmeInstOutraIsSet(boolean value) {
		if (!value) {
			this.nmeInstOutra = null;
		}
	}

	public String getSglInstOutra() {
		return this.sglInstOutra;
	}

	public void setSglInstOutra(String sglInstOutra) {
		this.sglInstOutra = sglInstOutra;
	}

	public void unsetSglInstOutra() {
		this.sglInstOutra = null;
	}

	/** Returns true if field sglInstOutra is set (has been assigned a value) and false otherwise */
	public boolean isSetSglInstOutra() {
		return this.sglInstOutra != null;
	}

	public void setSglInstOutraIsSet(boolean value) {
		if (!value) {
			this.sglInstOutra = null;
		}
	}

	public String getDscAbrevInstOutra() {
		return this.dscAbrevInstOutra;
	}

	public void setDscAbrevInstOutra(String dscAbrevInstOutra) {
		this.dscAbrevInstOutra = dscAbrevInstOutra;
	}

	public void unsetDscAbrevInstOutra() {
		this.dscAbrevInstOutra = null;
	}

	/** Returns true if field dscAbrevInstOutra is set (has been assigned a value) and false otherwise */
	public boolean isSetDscAbrevInstOutra() {
		return this.dscAbrevInstOutra != null;
	}

	public void setDscAbrevInstOutraIsSet(boolean value) {
		if (!value) {
			this.dscAbrevInstOutra = null;
		}
	}

	public String getDscUfInstOutra() {
		return this.dscUfInstOutra;
	}

	public void setDscUfInstOutra(String dscUfInstOutra) {
		this.dscUfInstOutra = dscUfInstOutra;
	}

	public void unsetDscUfInstOutra() {
		this.dscUfInstOutra = null;
	}

	/** Returns true if field dscUfInstOutra is set (has been assigned a value) and false otherwise */
	public boolean isSetDscUfInstOutra() {
		return this.dscUfInstOutra != null;
	}

	public void setDscUfInstOutraIsSet(boolean value) {
		if (!value) {
			this.dscUfInstOutra = null;
		}
	}

	public String getDscRegiaoInstOutra() {
		return this.dscRegiaoInstOutra;
	}

	public void setDscRegiaoInstOutra(String dscRegiaoInstOutra) {
		this.dscRegiaoInstOutra = dscRegiaoInstOutra;
	}

	public void unsetDscRegiaoInstOutra() {
		this.dscRegiaoInstOutra = null;
	}

	/** Returns true if field dscRegiaoInstOutra is set (has been assigned a value) and false otherwise */
	public boolean isSetDscRegiaoInstOutra() {
		return this.dscRegiaoInstOutra != null;
	}

	public void setDscRegiaoInstOutraIsSet(boolean value) {
		if (!value) {
			this.dscRegiaoInstOutra = null;
		}
	}

	public int getHistoricosSize() {
		return (this.historicos == null) ? 0 : this.historicos.size();
	}

	public java.util.Iterator<AtuacaoAtividadeHistorico> getHistoricosIterator() {
		return (this.historicos == null) ? null : this.historicos.iterator();
	}

	public void addToHistoricos(AtuacaoAtividadeHistorico elem) {
		if (this.historicos == null) {
			this.historicos = new ArrayList<AtuacaoAtividadeHistorico>();
		}
		this.historicos.add(elem);
	}

	public List<AtuacaoAtividadeHistorico> getHistoricos() {
		return this.historicos;
	}

	public void setHistoricos(List<AtuacaoAtividadeHistorico> historicos) {
		this.historicos = historicos;
	}

	public void unsetHistoricos() {
		this.historicos = null;
	}

	/** Returns true if field historicos is set (has been assigned a value) and false otherwise */
	public boolean isSetHistoricos() {
		return this.historicos != null;
	}

	public void setHistoricosIsSet(boolean value) {
		if (!value) {
			this.historicos = null;
		}
	}

	public int getFuncoesSize() {
		return (this.funcoes == null) ? 0 : this.funcoes.size();
	}

	public java.util.Iterator<AtuacaoAtividadeFuncao> getFuncoesIterator() {
		return (this.funcoes == null) ? null : this.funcoes.iterator();
	}

	public void addToFuncoes(AtuacaoAtividadeFuncao elem) {
		if (this.funcoes == null) {
			this.funcoes = new ArrayList<AtuacaoAtividadeFuncao>();
		}
		this.funcoes.add(elem);
	}

	public List<AtuacaoAtividadeFuncao> getFuncoes() {
		return this.funcoes;
	}

	public void setFuncoes(List<AtuacaoAtividadeFuncao> funcoes) {
		this.funcoes = funcoes;
	}

	public void unsetFuncoes() {
		this.funcoes = null;
	}

	/** Returns true if field funcoes is set (has been assigned a value) and false otherwise */
	public boolean isSetFuncoes() {
		return this.funcoes != null;
	}

	public void setFuncoesIsSet(boolean value) {
		if (!value) {
			this.funcoes = null;
		}
	}

	public void setFieldValue(_Fields field, Object value) {
		switch (field) {
		case NRO_ID_CNPQ:
			if (value == null) {
				unsetNroIdCnpq();
			} else {
				setNroIdCnpq((String) value);
			}
			break;

		case SEQ_ATIVIDADE:
			if (value == null) {
				unsetSeqAtividade();
			} else {
				setSeqAtividade((Integer) value);
			}
			break;

		case COD_INST:
			if (value == null) {
				unsetCodInst();
			} else {
				setCodInst((String) value);
			}
			break;

		case NME_INST:
			if (value == null) {
				unsetNmeInst();
			} else {
				setNmeInst((String) value);
			}
			break;

		case SGL_INST:
			if (value == null) {
				unsetSglInst();
			} else {
				setSglInst((String) value);
			}
			break;

		case DSC_ABREV_INST:
			if (value == null) {
				unsetDscAbrevInst();
			} else {
				setDscAbrevInst((String) value);
			}
			break;

		case DSC_UF_INST:
			if (value == null) {
				unsetDscUfInst();
			} else {
				setDscUfInst((String) value);
			}
			break;

		case DSC_REGIAO_INST:
			if (value == null) {
				unsetDscRegiaoInst();
			} else {
				setDscRegiaoInst((String) value);
			}
			break;

		case COD_SETOR_ECON_INST:
			if (value == null) {
				unsetCodSetorEconInst();
			} else {
				setCodSetorEconInst((String) value);
			}
			break;

		case DSC_SETOR_ECON_INST:
			if (value == null) {
				unsetDscSetorEconInst();
			} else {
				setDscSetorEconInst((String) value);
			}
			break;

		case COD_INST_OUTRA:
			if (value == null) {
				unsetCodInstOutra();
			} else {
				setCodInstOutra((String) value);
			}
			break;

		case NME_INST_OUTRA:
			if (value == null) {
				unsetNmeInstOutra();
			} else {
				setNmeInstOutra((String) value);
			}
			break;

		case SGL_INST_OUTRA:
			if (value == null) {
				unsetSglInstOutra();
			} else {
				setSglInstOutra((String) value);
			}
			break;

		case DSC_ABREV_INST_OUTRA:
			if (value == null) {
				unsetDscAbrevInstOutra();
			} else {
				setDscAbrevInstOutra((String) value);
			}
			break;

		case DSC_UF_INST_OUTRA:
			if (value == null) {
				unsetDscUfInstOutra();
			} else {
				setDscUfInstOutra((String) value);
			}
			break;

		case DSC_REGIAO_INST_OUTRA:
			if (value == null) {
				unsetDscRegiaoInstOutra();
			} else {
				setDscRegiaoInstOutra((String) value);
			}
			break;

		case HISTORICOS:
			if (value == null) {
				unsetHistoricos();
			} else {
				setHistoricos((List<AtuacaoAtividadeHistorico>) value);
			}
			break;

		case FUNCOES:
			if (value == null) {
				unsetFuncoes();
			} else {
				setFuncoes((List<AtuacaoAtividadeFuncao>) value);
			}
			break;

		}
	}

	public Object getFieldValue(_Fields field) {
		switch (field) {
		case NRO_ID_CNPQ:
			return getNroIdCnpq();

		case SEQ_ATIVIDADE:
			return Integer.valueOf(getSeqAtividade());

		case COD_INST:
			return getCodInst();

		case NME_INST:
			return getNmeInst();

		case SGL_INST:
			return getSglInst();

		case DSC_ABREV_INST:
			return getDscAbrevInst();

		case DSC_UF_INST:
			return getDscUfInst();

		case DSC_REGIAO_INST:
			return getDscRegiaoInst();

		case COD_SETOR_ECON_INST:
			return getCodSetorEconInst();

		case DSC_SETOR_ECON_INST:
			return getDscSetorEconInst();

		case COD_INST_OUTRA:
			return getCodInstOutra();

		case NME_INST_OUTRA:
			return getNmeInstOutra();

		case SGL_INST_OUTRA:
			return getSglInstOutra();

		case DSC_ABREV_INST_OUTRA:
			return getDscAbrevInstOutra();

		case DSC_UF_INST_OUTRA:
			return getDscUfInstOutra();

		case DSC_REGIAO_INST_OUTRA:
			return getDscRegiaoInstOutra();

		case HISTORICOS:
			return getHistoricos();

		case FUNCOES:
			return getFuncoes();

		}
		throw new IllegalStateException();
	}

	/** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
	public boolean isSet(_Fields field) {
		if (field == null) {
			throw new IllegalArgumentException();
		}

		switch (field) {
		case NRO_ID_CNPQ:
			return isSetNroIdCnpq();
		case SEQ_ATIVIDADE:
			return isSetSeqAtividade();
		case COD_INST:
			return isSetCodInst();
		case NME_INST:
			return isSetNmeInst();
		case SGL_INST:
			return isSetSglInst();
		case DSC_ABREV_INST:
			return isSetDscAbrevInst();
		case DSC_UF_INST:
			return isSetDscUfInst();
		case DSC_REGIAO_INST:
			return isSetDscRegiaoInst();
		case COD_SETOR_ECON_INST:
			return isSetCodSetorEconInst();
		case DSC_SETOR_ECON_INST:
			return isSetDscSetorEconInst();
		case COD_INST_OUTRA:
			return isSetCodInstOutra();
		case NME_INST_OUTRA:
			return isSetNmeInstOutra();
		case SGL_INST_OUTRA:
			return isSetSglInstOutra();
		case DSC_ABREV_INST_OUTRA:
			return isSetDscAbrevInstOutra();
		case DSC_UF_INST_OUTRA:
			return isSetDscUfInstOutra();
		case DSC_REGIAO_INST_OUTRA:
			return isSetDscRegiaoInstOutra();
		case HISTORICOS:
			return isSetHistoricos();
		case FUNCOES:
			return isSetFuncoes();
		}
		throw new IllegalStateException();
	}

	@Override
	public boolean equals(Object that) {
		if (that == null)
			return false;
		if (that instanceof AtuacaoAtividade)
			return this.equals((AtuacaoAtividade) that);
		return false;
	}

	public boolean equals(AtuacaoAtividade that) {
		if (that == null)
			return false;

		boolean this_present_nroIdCnpq = true && this.isSetNroIdCnpq();
		boolean that_present_nroIdCnpq = true && that.isSetNroIdCnpq();
		if (this_present_nroIdCnpq || that_present_nroIdCnpq) {
			if (!(this_present_nroIdCnpq && that_present_nroIdCnpq))
				return false;
			if (!this.nroIdCnpq.equals(that.nroIdCnpq))
				return false;
		}

		boolean this_present_seqAtividade = true && this.isSetSeqAtividade();
		boolean that_present_seqAtividade = true && that.isSetSeqAtividade();
		if (this_present_seqAtividade || that_present_seqAtividade) {
			if (!(this_present_seqAtividade && that_present_seqAtividade))
				return false;
			if (this.seqAtividade != that.seqAtividade)
				return false;
		}

		boolean this_present_codInst = true && this.isSetCodInst();
		boolean that_present_codInst = true && that.isSetCodInst();
		if (this_present_codInst || that_present_codInst) {
			if (!(this_present_codInst && that_present_codInst))
				return false;
			if (!this.codInst.equals(that.codInst))
				return false;
		}

		boolean this_present_nmeInst = true && this.isSetNmeInst();
		boolean that_present_nmeInst = true && that.isSetNmeInst();
		if (this_present_nmeInst || that_present_nmeInst) {
			if (!(this_present_nmeInst && that_present_nmeInst))
				return false;
			if (!this.nmeInst.equals(that.nmeInst))
				return false;
		}

		boolean this_present_sglInst = true && this.isSetSglInst();
		boolean that_present_sglInst = true && that.isSetSglInst();
		if (this_present_sglInst || that_present_sglInst) {
			if (!(this_present_sglInst && that_present_sglInst))
				return false;
			if (!this.sglInst.equals(that.sglInst))
				return false;
		}

		boolean this_present_dscAbrevInst = true && this.isSetDscAbrevInst();
		boolean that_present_dscAbrevInst = true && that.isSetDscAbrevInst();
		if (this_present_dscAbrevInst || that_present_dscAbrevInst) {
			if (!(this_present_dscAbrevInst && that_present_dscAbrevInst))
				return false;
			if (!this.dscAbrevInst.equals(that.dscAbrevInst))
				return false;
		}

		boolean this_present_dscUfInst = true && this.isSetDscUfInst();
		boolean that_present_dscUfInst = true && that.isSetDscUfInst();
		if (this_present_dscUfInst || that_present_dscUfInst) {
			if (!(this_present_dscUfInst && that_present_dscUfInst))
				return false;
			if (!this.dscUfInst.equals(that.dscUfInst))
				return false;
		}

		boolean this_present_dscRegiaoInst = true && this.isSetDscRegiaoInst();
		boolean that_present_dscRegiaoInst = true && that.isSetDscRegiaoInst();
		if (this_present_dscRegiaoInst || that_present_dscRegiaoInst) {
			if (!(this_present_dscRegiaoInst && that_present_dscRegiaoInst))
				return false;
			if (!this.dscRegiaoInst.equals(that.dscRegiaoInst))
				return false;
		}

		boolean this_present_codSetorEconInst = true && this.isSetCodSetorEconInst();
		boolean that_present_codSetorEconInst = true && that.isSetCodSetorEconInst();
		if (this_present_codSetorEconInst || that_present_codSetorEconInst) {
			if (!(this_present_codSetorEconInst && that_present_codSetorEconInst))
				return false;
			if (!this.codSetorEconInst.equals(that.codSetorEconInst))
				return false;
		}

		boolean this_present_dscSetorEconInst = true && this.isSetDscSetorEconInst();
		boolean that_present_dscSetorEconInst = true && that.isSetDscSetorEconInst();
		if (this_present_dscSetorEconInst || that_present_dscSetorEconInst) {
			if (!(this_present_dscSetorEconInst && that_present_dscSetorEconInst))
				return false;
			if (!this.dscSetorEconInst.equals(that.dscSetorEconInst))
				return false;
		}

		boolean this_present_codInstOutra = true && this.isSetCodInstOutra();
		boolean that_present_codInstOutra = true && that.isSetCodInstOutra();
		if (this_present_codInstOutra || that_present_codInstOutra) {
			if (!(this_present_codInstOutra && that_present_codInstOutra))
				return false;
			if (!this.codInstOutra.equals(that.codInstOutra))
				return false;
		}

		boolean this_present_nmeInstOutra = true && this.isSetNmeInstOutra();
		boolean that_present_nmeInstOutra = true && that.isSetNmeInstOutra();
		if (this_present_nmeInstOutra || that_present_nmeInstOutra) {
			if (!(this_present_nmeInstOutra && that_present_nmeInstOutra))
				return false;
			if (!this.nmeInstOutra.equals(that.nmeInstOutra))
				return false;
		}

		boolean this_present_sglInstOutra = true && this.isSetSglInstOutra();
		boolean that_present_sglInstOutra = true && that.isSetSglInstOutra();
		if (this_present_sglInstOutra || that_present_sglInstOutra) {
			if (!(this_present_sglInstOutra && that_present_sglInstOutra))
				return false;
			if (!this.sglInstOutra.equals(that.sglInstOutra))
				return false;
		}

		boolean this_present_dscAbrevInstOutra = true && this.isSetDscAbrevInstOutra();
		boolean that_present_dscAbrevInstOutra = true && that.isSetDscAbrevInstOutra();
		if (this_present_dscAbrevInstOutra || that_present_dscAbrevInstOutra) {
			if (!(this_present_dscAbrevInstOutra && that_present_dscAbrevInstOutra))
				return false;
			if (!this.dscAbrevInstOutra.equals(that.dscAbrevInstOutra))
				return false;
		}

		boolean this_present_dscUfInstOutra = true && this.isSetDscUfInstOutra();
		boolean that_present_dscUfInstOutra = true && that.isSetDscUfInstOutra();
		if (this_present_dscUfInstOutra || that_present_dscUfInstOutra) {
			if (!(this_present_dscUfInstOutra && that_present_dscUfInstOutra))
				return false;
			if (!this.dscUfInstOutra.equals(that.dscUfInstOutra))
				return false;
		}

		boolean this_present_dscRegiaoInstOutra = true && this.isSetDscRegiaoInstOutra();
		boolean that_present_dscRegiaoInstOutra = true && that.isSetDscRegiaoInstOutra();
		if (this_present_dscRegiaoInstOutra || that_present_dscRegiaoInstOutra) {
			if (!(this_present_dscRegiaoInstOutra && that_present_dscRegiaoInstOutra))
				return false;
			if (!this.dscRegiaoInstOutra.equals(that.dscRegiaoInstOutra))
				return false;
		}

		boolean this_present_historicos = true && this.isSetHistoricos();
		boolean that_present_historicos = true && that.isSetHistoricos();
		if (this_present_historicos || that_present_historicos) {
			if (!(this_present_historicos && that_present_historicos))
				return false;
			if (!this.historicos.equals(that.historicos))
				return false;
		}

		boolean this_present_funcoes = true && this.isSetFuncoes();
		boolean that_present_funcoes = true && that.isSetFuncoes();
		if (this_present_funcoes || that_present_funcoes) {
			if (!(this_present_funcoes && that_present_funcoes))
				return false;
			if (!this.funcoes.equals(that.funcoes))
				return false;
		}

		return true;
	}

	@Override
	public int hashCode() {
		List<Object> list = new ArrayList<Object>();

		boolean present_nroIdCnpq = true && (isSetNroIdCnpq());
		list.add(present_nroIdCnpq);
		if (present_nroIdCnpq)
			list.add(nroIdCnpq);

		boolean present_seqAtividade = true && (isSetSeqAtividade());
		list.add(present_seqAtividade);
		if (present_seqAtividade)
			list.add(seqAtividade);

		boolean present_codInst = true && (isSetCodInst());
		list.add(present_codInst);
		if (present_codInst)
			list.add(codInst);

		boolean present_nmeInst = true && (isSetNmeInst());
		list.add(present_nmeInst);
		if (present_nmeInst)
			list.add(nmeInst);

		boolean present_sglInst = true && (isSetSglInst());
		list.add(present_sglInst);
		if (present_sglInst)
			list.add(sglInst);

		boolean present_dscAbrevInst = true && (isSetDscAbrevInst());
		list.add(present_dscAbrevInst);
		if (present_dscAbrevInst)
			list.add(dscAbrevInst);

		boolean present_dscUfInst = true && (isSetDscUfInst());
		list.add(present_dscUfInst);
		if (present_dscUfInst)
			list.add(dscUfInst);

		boolean present_dscRegiaoInst = true && (isSetDscRegiaoInst());
		list.add(present_dscRegiaoInst);
		if (present_dscRegiaoInst)
			list.add(dscRegiaoInst);

		boolean present_codSetorEconInst = true && (isSetCodSetorEconInst());
		list.add(present_codSetorEconInst);
		if (present_codSetorEconInst)
			list.add(codSetorEconInst);

		boolean present_dscSetorEconInst = true && (isSetDscSetorEconInst());
		list.add(present_dscSetorEconInst);
		if (present_dscSetorEconInst)
			list.add(dscSetorEconInst);

		boolean present_codInstOutra = true && (isSetCodInstOutra());
		list.add(present_codInstOutra);
		if (present_codInstOutra)
			list.add(codInstOutra);

		boolean present_nmeInstOutra = true && (isSetNmeInstOutra());
		list.add(present_nmeInstOutra);
		if (present_nmeInstOutra)
			list.add(nmeInstOutra);

		boolean present_sglInstOutra = true && (isSetSglInstOutra());
		list.add(present_sglInstOutra);
		if (present_sglInstOutra)
			list.add(sglInstOutra);

		boolean present_dscAbrevInstOutra = true && (isSetDscAbrevInstOutra());
		list.add(present_dscAbrevInstOutra);
		if (present_dscAbrevInstOutra)
			list.add(dscAbrevInstOutra);

		boolean present_dscUfInstOutra = true && (isSetDscUfInstOutra());
		list.add(present_dscUfInstOutra);
		if (present_dscUfInstOutra)
			list.add(dscUfInstOutra);

		boolean present_dscRegiaoInstOutra = true && (isSetDscRegiaoInstOutra());
		list.add(present_dscRegiaoInstOutra);
		if (present_dscRegiaoInstOutra)
			list.add(dscRegiaoInstOutra);

		boolean present_historicos = true && (isSetHistoricos());
		list.add(present_historicos);
		if (present_historicos)
			list.add(historicos);

		boolean present_funcoes = true && (isSetFuncoes());
		list.add(present_funcoes);
		if (present_funcoes)
			list.add(funcoes);

		return list.hashCode();
	}

	@Override
	public int compareTo(AtuacaoAtividade other) {
		if (!getClass().equals(other.getClass())) {
			return getClass().getName().compareTo(other.getClass().getName());
		}

		int lastComparison = 0;

		lastComparison = Boolean.valueOf(isSetNroIdCnpq()).compareTo(other.isSetNroIdCnpq());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetNroIdCnpq()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nroIdCnpq, other.nroIdCnpq);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetSeqAtividade()).compareTo(other.isSetSeqAtividade());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetSeqAtividade()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.seqAtividade, other.seqAtividade);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetCodInst()).compareTo(other.isSetCodInst());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetCodInst()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.codInst, other.codInst);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetNmeInst()).compareTo(other.isSetNmeInst());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetNmeInst()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nmeInst, other.nmeInst);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetSglInst()).compareTo(other.isSetSglInst());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetSglInst()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sglInst, other.sglInst);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetDscAbrevInst()).compareTo(other.isSetDscAbrevInst());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetDscAbrevInst()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dscAbrevInst, other.dscAbrevInst);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetDscUfInst()).compareTo(other.isSetDscUfInst());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetDscUfInst()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dscUfInst, other.dscUfInst);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetDscRegiaoInst()).compareTo(other.isSetDscRegiaoInst());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetDscRegiaoInst()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dscRegiaoInst, other.dscRegiaoInst);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetCodSetorEconInst()).compareTo(other.isSetCodSetorEconInst());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetCodSetorEconInst()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.codSetorEconInst, other.codSetorEconInst);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetDscSetorEconInst()).compareTo(other.isSetDscSetorEconInst());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetDscSetorEconInst()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dscSetorEconInst, other.dscSetorEconInst);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetCodInstOutra()).compareTo(other.isSetCodInstOutra());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetCodInstOutra()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.codInstOutra, other.codInstOutra);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetNmeInstOutra()).compareTo(other.isSetNmeInstOutra());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetNmeInstOutra()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nmeInstOutra, other.nmeInstOutra);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetSglInstOutra()).compareTo(other.isSetSglInstOutra());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetSglInstOutra()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sglInstOutra, other.sglInstOutra);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetDscAbrevInstOutra()).compareTo(other.isSetDscAbrevInstOutra());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetDscAbrevInstOutra()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dscAbrevInstOutra, other.dscAbrevInstOutra);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetDscUfInstOutra()).compareTo(other.isSetDscUfInstOutra());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetDscUfInstOutra()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dscUfInstOutra, other.dscUfInstOutra);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetDscRegiaoInstOutra()).compareTo(other.isSetDscRegiaoInstOutra());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetDscRegiaoInstOutra()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dscRegiaoInstOutra, other.dscRegiaoInstOutra);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetHistoricos()).compareTo(other.isSetHistoricos());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetHistoricos()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.historicos, other.historicos);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetFuncoes()).compareTo(other.isSetFuncoes());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetFuncoes()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.funcoes, other.funcoes);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		return 0;
	}

	public _Fields fieldForId(int fieldId) {
		return _Fields.findByThriftId(fieldId);
	}

	public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
		schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
	}

	public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
		schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder("AtuacaoAtividade(");
		boolean first = true;

		sb.append("nroIdCnpq:");
		if (this.nroIdCnpq == null) {
			sb.append("null");
		} else {
			sb.append(this.nroIdCnpq);
		}
		first = false;
		if (isSetSeqAtividade()) {
			if (!first)
				sb.append(", ");
			sb.append("seqAtividade:");
			sb.append(this.seqAtividade);
			first = false;
		}
		if (isSetCodInst()) {
			if (!first)
				sb.append(", ");
			sb.append("codInst:");
			if (this.codInst == null) {
				sb.append("null");
			} else {
				sb.append(this.codInst);
			}
			first = false;
		}
		if (isSetNmeInst()) {
			if (!first)
				sb.append(", ");
			sb.append("nmeInst:");
			if (this.nmeInst == null) {
				sb.append("null");
			} else {
				sb.append(this.nmeInst);
			}
			first = false;
		}
		if (isSetSglInst()) {
			if (!first)
				sb.append(", ");
			sb.append("sglInst:");
			if (this.sglInst == null) {
				sb.append("null");
			} else {
				sb.append(this.sglInst);
			}
			first = false;
		}
		if (isSetDscAbrevInst()) {
			if (!first)
				sb.append(", ");
			sb.append("dscAbrevInst:");
			if (this.dscAbrevInst == null) {
				sb.append("null");
			} else {
				sb.append(this.dscAbrevInst);
			}
			first = false;
		}
		if (isSetDscUfInst()) {
			if (!first)
				sb.append(", ");
			sb.append("dscUfInst:");
			if (this.dscUfInst == null) {
				sb.append("null");
			} else {
				sb.append(this.dscUfInst);
			}
			first = false;
		}
		if (isSetDscRegiaoInst()) {
			if (!first)
				sb.append(", ");
			sb.append("dscRegiaoInst:");
			if (this.dscRegiaoInst == null) {
				sb.append("null");
			} else {
				sb.append(this.dscRegiaoInst);
			}
			first = false;
		}
		if (isSetCodSetorEconInst()) {
			if (!first)
				sb.append(", ");
			sb.append("codSetorEconInst:");
			if (this.codSetorEconInst == null) {
				sb.append("null");
			} else {
				sb.append(this.codSetorEconInst);
			}
			first = false;
		}
		if (isSetDscSetorEconInst()) {
			if (!first)
				sb.append(", ");
			sb.append("dscSetorEconInst:");
			if (this.dscSetorEconInst == null) {
				sb.append("null");
			} else {
				sb.append(this.dscSetorEconInst);
			}
			first = false;
		}
		if (isSetCodInstOutra()) {
			if (!first)
				sb.append(", ");
			sb.append("codInstOutra:");
			if (this.codInstOutra == null) {
				sb.append("null");
			} else {
				sb.append(this.codInstOutra);
			}
			first = false;
		}
		if (isSetNmeInstOutra()) {
			if (!first)
				sb.append(", ");
			sb.append("nmeInstOutra:");
			if (this.nmeInstOutra == null) {
				sb.append("null");
			} else {
				sb.append(this.nmeInstOutra);
			}
			first = false;
		}
		if (isSetSglInstOutra()) {
			if (!first)
				sb.append(", ");
			sb.append("sglInstOutra:");
			if (this.sglInstOutra == null) {
				sb.append("null");
			} else {
				sb.append(this.sglInstOutra);
			}
			first = false;
		}
		if (isSetDscAbrevInstOutra()) {
			if (!first)
				sb.append(", ");
			sb.append("dscAbrevInstOutra:");
			if (this.dscAbrevInstOutra == null) {
				sb.append("null");
			} else {
				sb.append(this.dscAbrevInstOutra);
			}
			first = false;
		}
		if (isSetDscUfInstOutra()) {
			if (!first)
				sb.append(", ");
			sb.append("dscUfInstOutra:");
			if (this.dscUfInstOutra == null) {
				sb.append("null");
			} else {
				sb.append(this.dscUfInstOutra);
			}
			first = false;
		}
		if (isSetDscRegiaoInstOutra()) {
			if (!first)
				sb.append(", ");
			sb.append("dscRegiaoInstOutra:");
			if (this.dscRegiaoInstOutra == null) {
				sb.append("null");
			} else {
				sb.append(this.dscRegiaoInstOutra);
			}
			first = false;
		}
		if (isSetHistoricos()) {
			if (!first)
				sb.append(", ");
			sb.append("historicos:");
			if (this.historicos == null) {
				sb.append("null");
			} else {
				sb.append(this.historicos);
			}
			first = false;
		}
		if (isSetFuncoes()) {
			if (!first)
				sb.append(", ");
			sb.append("funcoes:");
			if (this.funcoes == null) {
				sb.append("null");
			} else {
				sb.append(this.funcoes);
			}
			first = false;
		}
		sb.append(")");
		return sb.toString();
	}

	public void validate() throws org.apache.thrift.TException {
		// check for required fields
		if (!isSetNroIdCnpq()) {
			throw new org.apache.thrift.protocol.TProtocolException("Required field 'nroIdCnpq' is unset! Struct:" + toString());
		}

		// check for sub-struct validity
	}

	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
		try {
			write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
		} catch (org.apache.thrift.TException te) {
			throw new java.io.IOException(te);
		}
	}

	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
		try {
			// it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
			__isset_bitfield = 0;
			read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
		} catch (org.apache.thrift.TException te) {
			throw new java.io.IOException(te);
		}
	}

	private static class AtuacaoAtividadeStandardSchemeFactory implements SchemeFactory {
		public AtuacaoAtividadeStandardScheme getScheme() {
			return new AtuacaoAtividadeStandardScheme();
		}
	}

	private static class AtuacaoAtividadeStandardScheme extends StandardScheme<AtuacaoAtividade> {

		public void read(org.apache.thrift.protocol.TProtocol iprot, AtuacaoAtividade struct) throws org.apache.thrift.TException {
			org.apache.thrift.protocol.TField schemeField;
			iprot.readStructBegin();
			while (true) {
				schemeField = iprot.readFieldBegin();
				if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
					break;
				}
				switch (schemeField.id) {
				case 1: // NRO_ID_CNPQ
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.nroIdCnpq = iprot.readString();
						struct.setNroIdCnpqIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 2: // SEQ_ATIVIDADE
					if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
						struct.seqAtividade = iprot.readI32();
						struct.setSeqAtividadeIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 3: // COD_INST
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.codInst = iprot.readString();
						struct.setCodInstIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 4: // NME_INST
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.nmeInst = iprot.readString();
						struct.setNmeInstIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 5: // SGL_INST
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.sglInst = iprot.readString();
						struct.setSglInstIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 6: // DSC_ABREV_INST
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.dscAbrevInst = iprot.readString();
						struct.setDscAbrevInstIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 7: // DSC_UF_INST
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.dscUfInst = iprot.readString();
						struct.setDscUfInstIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 8: // DSC_REGIAO_INST
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.dscRegiaoInst = iprot.readString();
						struct.setDscRegiaoInstIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 9: // COD_SETOR_ECON_INST
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.codSetorEconInst = iprot.readString();
						struct.setCodSetorEconInstIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 10: // DSC_SETOR_ECON_INST
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.dscSetorEconInst = iprot.readString();
						struct.setDscSetorEconInstIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 11: // COD_INST_OUTRA
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.codInstOutra = iprot.readString();
						struct.setCodInstOutraIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 12: // NME_INST_OUTRA
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.nmeInstOutra = iprot.readString();
						struct.setNmeInstOutraIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 13: // SGL_INST_OUTRA
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.sglInstOutra = iprot.readString();
						struct.setSglInstOutraIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 14: // DSC_ABREV_INST_OUTRA
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.dscAbrevInstOutra = iprot.readString();
						struct.setDscAbrevInstOutraIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 15: // DSC_UF_INST_OUTRA
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.dscUfInstOutra = iprot.readString();
						struct.setDscUfInstOutraIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 16: // DSC_REGIAO_INST_OUTRA
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.dscRegiaoInstOutra = iprot.readString();
						struct.setDscRegiaoInstOutraIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 17: // HISTORICOS
					if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
						{
							org.apache.thrift.protocol.TList _list0 = iprot.readListBegin();
							struct.historicos = new ArrayList<AtuacaoAtividadeHistorico>(_list0.size);
							AtuacaoAtividadeHistorico _elem1;
							for (int _i2 = 0; _i2 < _list0.size; ++_i2) {
								_elem1 = new AtuacaoAtividadeHistorico();
								_elem1.read(iprot);
								struct.historicos.add(_elem1);
							}
							iprot.readListEnd();
						}
						struct.setHistoricosIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 18: // FUNCOES
					if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
						{
							org.apache.thrift.protocol.TList _list3 = iprot.readListBegin();
							struct.funcoes = new ArrayList<AtuacaoAtividadeFuncao>(_list3.size);
							AtuacaoAtividadeFuncao _elem4;
							for (int _i5 = 0; _i5 < _list3.size; ++_i5) {
								_elem4 = new AtuacaoAtividadeFuncao();
								_elem4.read(iprot);
								struct.funcoes.add(_elem4);
							}
							iprot.readListEnd();
						}
						struct.setFuncoesIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				default:
					org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
				}
				iprot.readFieldEnd();
			}
			iprot.readStructEnd();
			struct.validate();
		}

		public void write(org.apache.thrift.protocol.TProtocol oprot, AtuacaoAtividade struct) throws org.apache.thrift.TException {
			struct.validate();

			oprot.writeStructBegin(STRUCT_DESC);
			if (struct.nroIdCnpq != null) {
				oprot.writeFieldBegin(NRO_ID_CNPQ_FIELD_DESC);
				oprot.writeString(struct.nroIdCnpq);
				oprot.writeFieldEnd();
			}
			if (struct.isSetSeqAtividade()) {
				oprot.writeFieldBegin(SEQ_ATIVIDADE_FIELD_DESC);
				oprot.writeI32(struct.seqAtividade);
				oprot.writeFieldEnd();
			}
			if (struct.codInst != null) {
				if (struct.isSetCodInst()) {
					oprot.writeFieldBegin(COD_INST_FIELD_DESC);
					oprot.writeString(struct.codInst);
					oprot.writeFieldEnd();
				}
			}
			if (struct.nmeInst != null) {
				if (struct.isSetNmeInst()) {
					oprot.writeFieldBegin(NME_INST_FIELD_DESC);
					oprot.writeString(struct.nmeInst);
					oprot.writeFieldEnd();
				}
			}
			if (struct.sglInst != null) {
				if (struct.isSetSglInst()) {
					oprot.writeFieldBegin(SGL_INST_FIELD_DESC);
					oprot.writeString(struct.sglInst);
					oprot.writeFieldEnd();
				}
			}
			if (struct.dscAbrevInst != null) {
				if (struct.isSetDscAbrevInst()) {
					oprot.writeFieldBegin(DSC_ABREV_INST_FIELD_DESC);
					oprot.writeString(struct.dscAbrevInst);
					oprot.writeFieldEnd();
				}
			}
			if (struct.dscUfInst != null) {
				if (struct.isSetDscUfInst()) {
					oprot.writeFieldBegin(DSC_UF_INST_FIELD_DESC);
					oprot.writeString(struct.dscUfInst);
					oprot.writeFieldEnd();
				}
			}
			if (struct.dscRegiaoInst != null) {
				if (struct.isSetDscRegiaoInst()) {
					oprot.writeFieldBegin(DSC_REGIAO_INST_FIELD_DESC);
					oprot.writeString(struct.dscRegiaoInst);
					oprot.writeFieldEnd();
				}
			}
			if (struct.codSetorEconInst != null) {
				if (struct.isSetCodSetorEconInst()) {
					oprot.writeFieldBegin(COD_SETOR_ECON_INST_FIELD_DESC);
					oprot.writeString(struct.codSetorEconInst);
					oprot.writeFieldEnd();
				}
			}
			if (struct.dscSetorEconInst != null) {
				if (struct.isSetDscSetorEconInst()) {
					oprot.writeFieldBegin(DSC_SETOR_ECON_INST_FIELD_DESC);
					oprot.writeString(struct.dscSetorEconInst);
					oprot.writeFieldEnd();
				}
			}
			if (struct.codInstOutra != null) {
				if (struct.isSetCodInstOutra()) {
					oprot.writeFieldBegin(COD_INST_OUTRA_FIELD_DESC);
					oprot.writeString(struct.codInstOutra);
					oprot.writeFieldEnd();
				}
			}
			if (struct.nmeInstOutra != null) {
				if (struct.isSetNmeInstOutra()) {
					oprot.writeFieldBegin(NME_INST_OUTRA_FIELD_DESC);
					oprot.writeString(struct.nmeInstOutra);
					oprot.writeFieldEnd();
				}
			}
			if (struct.sglInstOutra != null) {
				if (struct.isSetSglInstOutra()) {
					oprot.writeFieldBegin(SGL_INST_OUTRA_FIELD_DESC);
					oprot.writeString(struct.sglInstOutra);
					oprot.writeFieldEnd();
				}
			}
			if (struct.dscAbrevInstOutra != null) {
				if (struct.isSetDscAbrevInstOutra()) {
					oprot.writeFieldBegin(DSC_ABREV_INST_OUTRA_FIELD_DESC);
					oprot.writeString(struct.dscAbrevInstOutra);
					oprot.writeFieldEnd();
				}
			}
			if (struct.dscUfInstOutra != null) {
				if (struct.isSetDscUfInstOutra()) {
					oprot.writeFieldBegin(DSC_UF_INST_OUTRA_FIELD_DESC);
					oprot.writeString(struct.dscUfInstOutra);
					oprot.writeFieldEnd();
				}
			}
			if (struct.dscRegiaoInstOutra != null) {
				if (struct.isSetDscRegiaoInstOutra()) {
					oprot.writeFieldBegin(DSC_REGIAO_INST_OUTRA_FIELD_DESC);
					oprot.writeString(struct.dscRegiaoInstOutra);
					oprot.writeFieldEnd();
				}
			}
			if (struct.historicos != null) {
				if (struct.isSetHistoricos()) {
					oprot.writeFieldBegin(HISTORICOS_FIELD_DESC);
					{
						oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.historicos.size()));
						for (AtuacaoAtividadeHistorico _iter6 : struct.historicos) {
							_iter6.write(oprot);
						}
						oprot.writeListEnd();
					}
					oprot.writeFieldEnd();
				}
			}
			if (struct.funcoes != null) {
				if (struct.isSetFuncoes()) {
					oprot.writeFieldBegin(FUNCOES_FIELD_DESC);
					{
						oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.funcoes.size()));
						for (AtuacaoAtividadeFuncao _iter7 : struct.funcoes) {
							_iter7.write(oprot);
						}
						oprot.writeListEnd();
					}
					oprot.writeFieldEnd();
				}
			}
			oprot.writeFieldStop();
			oprot.writeStructEnd();
		}

	}

	private static class AtuacaoAtividadeTupleSchemeFactory implements SchemeFactory {
		public AtuacaoAtividadeTupleScheme getScheme() {
			return new AtuacaoAtividadeTupleScheme();
		}
	}

	private static class AtuacaoAtividadeTupleScheme extends TupleScheme<AtuacaoAtividade> {

		@Override
		public void write(org.apache.thrift.protocol.TProtocol prot, AtuacaoAtividade struct) throws org.apache.thrift.TException {
			TTupleProtocol oprot = (TTupleProtocol) prot;
			oprot.writeString(struct.nroIdCnpq);
			BitSet optionals = new BitSet();
			if (struct.isSetSeqAtividade()) {
				optionals.set(0);
			}
			if (struct.isSetCodInst()) {
				optionals.set(1);
			}
			if (struct.isSetNmeInst()) {
				optionals.set(2);
			}
			if (struct.isSetSglInst()) {
				optionals.set(3);
			}
			if (struct.isSetDscAbrevInst()) {
				optionals.set(4);
			}
			if (struct.isSetDscUfInst()) {
				optionals.set(5);
			}
			if (struct.isSetDscRegiaoInst()) {
				optionals.set(6);
			}
			if (struct.isSetCodSetorEconInst()) {
				optionals.set(7);
			}
			if (struct.isSetDscSetorEconInst()) {
				optionals.set(8);
			}
			if (struct.isSetCodInstOutra()) {
				optionals.set(9);
			}
			if (struct.isSetNmeInstOutra()) {
				optionals.set(10);
			}
			if (struct.isSetSglInstOutra()) {
				optionals.set(11);
			}
			if (struct.isSetDscAbrevInstOutra()) {
				optionals.set(12);
			}
			if (struct.isSetDscUfInstOutra()) {
				optionals.set(13);
			}
			if (struct.isSetDscRegiaoInstOutra()) {
				optionals.set(14);
			}
			if (struct.isSetHistoricos()) {
				optionals.set(15);
			}
			if (struct.isSetFuncoes()) {
				optionals.set(16);
			}
			oprot.writeBitSet(optionals, 17);
			if (struct.isSetSeqAtividade()) {
				oprot.writeI32(struct.seqAtividade);
			}
			if (struct.isSetCodInst()) {
				oprot.writeString(struct.codInst);
			}
			if (struct.isSetNmeInst()) {
				oprot.writeString(struct.nmeInst);
			}
			if (struct.isSetSglInst()) {
				oprot.writeString(struct.sglInst);
			}
			if (struct.isSetDscAbrevInst()) {
				oprot.writeString(struct.dscAbrevInst);
			}
			if (struct.isSetDscUfInst()) {
				oprot.writeString(struct.dscUfInst);
			}
			if (struct.isSetDscRegiaoInst()) {
				oprot.writeString(struct.dscRegiaoInst);
			}
			if (struct.isSetCodSetorEconInst()) {
				oprot.writeString(struct.codSetorEconInst);
			}
			if (struct.isSetDscSetorEconInst()) {
				oprot.writeString(struct.dscSetorEconInst);
			}
			if (struct.isSetCodInstOutra()) {
				oprot.writeString(struct.codInstOutra);
			}
			if (struct.isSetNmeInstOutra()) {
				oprot.writeString(struct.nmeInstOutra);
			}
			if (struct.isSetSglInstOutra()) {
				oprot.writeString(struct.sglInstOutra);
			}
			if (struct.isSetDscAbrevInstOutra()) {
				oprot.writeString(struct.dscAbrevInstOutra);
			}
			if (struct.isSetDscUfInstOutra()) {
				oprot.writeString(struct.dscUfInstOutra);
			}
			if (struct.isSetDscRegiaoInstOutra()) {
				oprot.writeString(struct.dscRegiaoInstOutra);
			}
			if (struct.isSetHistoricos()) {
				{
					oprot.writeI32(struct.historicos.size());
					for (AtuacaoAtividadeHistorico _iter8 : struct.historicos) {
						_iter8.write(oprot);
					}
				}
			}
			if (struct.isSetFuncoes()) {
				{
					oprot.writeI32(struct.funcoes.size());
					for (AtuacaoAtividadeFuncao _iter9 : struct.funcoes) {
						_iter9.write(oprot);
					}
				}
			}
		}

		@Override
		public void read(org.apache.thrift.protocol.TProtocol prot, AtuacaoAtividade struct) throws org.apache.thrift.TException {
			TTupleProtocol iprot = (TTupleProtocol) prot;
			struct.nroIdCnpq = iprot.readString();
			struct.setNroIdCnpqIsSet(true);
			BitSet incoming = iprot.readBitSet(17);
			if (incoming.get(0)) {
				struct.seqAtividade = iprot.readI32();
				struct.setSeqAtividadeIsSet(true);
			}
			if (incoming.get(1)) {
				struct.codInst = iprot.readString();
				struct.setCodInstIsSet(true);
			}
			if (incoming.get(2)) {
				struct.nmeInst = iprot.readString();
				struct.setNmeInstIsSet(true);
			}
			if (incoming.get(3)) {
				struct.sglInst = iprot.readString();
				struct.setSglInstIsSet(true);
			}
			if (incoming.get(4)) {
				struct.dscAbrevInst = iprot.readString();
				struct.setDscAbrevInstIsSet(true);
			}
			if (incoming.get(5)) {
				struct.dscUfInst = iprot.readString();
				struct.setDscUfInstIsSet(true);
			}
			if (incoming.get(6)) {
				struct.dscRegiaoInst = iprot.readString();
				struct.setDscRegiaoInstIsSet(true);
			}
			if (incoming.get(7)) {
				struct.codSetorEconInst = iprot.readString();
				struct.setCodSetorEconInstIsSet(true);
			}
			if (incoming.get(8)) {
				struct.dscSetorEconInst = iprot.readString();
				struct.setDscSetorEconInstIsSet(true);
			}
			if (incoming.get(9)) {
				struct.codInstOutra = iprot.readString();
				struct.setCodInstOutraIsSet(true);
			}
			if (incoming.get(10)) {
				struct.nmeInstOutra = iprot.readString();
				struct.setNmeInstOutraIsSet(true);
			}
			if (incoming.get(11)) {
				struct.sglInstOutra = iprot.readString();
				struct.setSglInstOutraIsSet(true);
			}
			if (incoming.get(12)) {
				struct.dscAbrevInstOutra = iprot.readString();
				struct.setDscAbrevInstOutraIsSet(true);
			}
			if (incoming.get(13)) {
				struct.dscUfInstOutra = iprot.readString();
				struct.setDscUfInstOutraIsSet(true);
			}
			if (incoming.get(14)) {
				struct.dscRegiaoInstOutra = iprot.readString();
				struct.setDscRegiaoInstOutraIsSet(true);
			}
			if (incoming.get(15)) {
				{
					org.apache.thrift.protocol.TList _list10 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
					struct.historicos = new ArrayList<AtuacaoAtividadeHistorico>(_list10.size);
					AtuacaoAtividadeHistorico _elem11;
					for (int _i12 = 0; _i12 < _list10.size; ++_i12) {
						_elem11 = new AtuacaoAtividadeHistorico();
						_elem11.read(iprot);
						struct.historicos.add(_elem11);
					}
				}
				struct.setHistoricosIsSet(true);
			}
			if (incoming.get(16)) {
				{
					org.apache.thrift.protocol.TList _list13 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
					struct.funcoes = new ArrayList<AtuacaoAtividadeFuncao>(_list13.size);
					AtuacaoAtividadeFuncao _elem14;
					for (int _i15 = 0; _i15 < _list13.size; ++_i15) {
						_elem14 = new AtuacaoAtividadeFuncao();
						_elem14.read(iprot);
						struct.funcoes.add(_elem14);
					}
				}
				struct.setFuncoesIsSet(true);
			}
		}
	}

}
