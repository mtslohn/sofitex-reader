/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package br.org.stela.intelectus.lattes.thrift;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-6-9")
public class Formacao implements org.apache.thrift.TBase<Formacao, Formacao._Fields>, java.io.Serializable, Cloneable, Comparable<Formacao> {
	private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("Formacao");

	private static final org.apache.thrift.protocol.TField NRO_ID_CNPQ_FIELD_DESC =
			new org.apache.thrift.protocol.TField("nroIdCnpq", org.apache.thrift.protocol.TType.STRING, (short) 1);
	private static final org.apache.thrift.protocol.TField SEQ_ORDEM_NIVEL_FORM_FIELD_DESC =
			new org.apache.thrift.protocol.TField("seqOrdemNivelForm", org.apache.thrift.protocol.TType.I32, (short) 2);
	private static final org.apache.thrift.protocol.TField COD_NIVEL_FORM_FIELD_DESC =
			new org.apache.thrift.protocol.TField("codNivelForm", org.apache.thrift.protocol.TType.STRING, (short) 3);
	private static final org.apache.thrift.protocol.TField DSC_NIVEL_FORM_FIELD_DESC =
			new org.apache.thrift.protocol.TField("dscNivelForm", org.apache.thrift.protocol.TType.STRING, (short) 4);
	private static final org.apache.thrift.protocol.TField ANO_INI_FORM_FIELD_DESC =
			new org.apache.thrift.protocol.TField("anoIniForm", org.apache.thrift.protocol.TType.STRING, (short) 5);
	private static final org.apache.thrift.protocol.TField ANO_OBTEN_FORM_FIELD_DESC =
			new org.apache.thrift.protocol.TField("anoObtenForm", org.apache.thrift.protocol.TType.STRING, (short) 6);
	private static final org.apache.thrift.protocol.TField ANO_TER_FORM_FIELD_DESC =
			new org.apache.thrift.protocol.TField("anoTerForm", org.apache.thrift.protocol.TType.STRING, (short) 7);
	private static final org.apache.thrift.protocol.TField TXT_TIT_FORM_FIELD_DESC =
			new org.apache.thrift.protocol.TField("txtTitForm", org.apache.thrift.protocol.TType.STRING, (short) 8);
	private static final org.apache.thrift.protocol.TField STA_FORMACAO_CONCLUIDA_FIELD_DESC =
			new org.apache.thrift.protocol.TField("staFormacaoConcluida", org.apache.thrift.protocol.TType.STRING, (short) 9);
	private static final org.apache.thrift.protocol.TField COD_CURSO_FIELD_DESC =
			new org.apache.thrift.protocol.TField("codCurso", org.apache.thrift.protocol.TType.STRING, (short) 10);
	private static final org.apache.thrift.protocol.TField DSC_CURSO_FIELD_DESC =
			new org.apache.thrift.protocol.TField("dscCurso", org.apache.thrift.protocol.TType.STRING, (short) 11);
	private static final org.apache.thrift.protocol.TField COD_AREA_CONHEC_CURSO_FIELD_DESC =
			new org.apache.thrift.protocol.TField("codAreaConhecCurso", org.apache.thrift.protocol.TType.STRING, (short) 12);
	private static final org.apache.thrift.protocol.TField NME_AREA_CONHEC_CURSO_FIELD_DESC =
			new org.apache.thrift.protocol.TField("nmeAreaConhecCurso", org.apache.thrift.protocol.TType.STRING, (short) 13);
	private static final org.apache.thrift.protocol.TField COD_CURSO_OUTRO_FIELD_DESC =
			new org.apache.thrift.protocol.TField("codCursoOutro", org.apache.thrift.protocol.TType.STRING, (short) 14);
	private static final org.apache.thrift.protocol.TField DSC_CURSO_OUTRO_FIELD_DESC =
			new org.apache.thrift.protocol.TField("dscCursoOutro", org.apache.thrift.protocol.TType.STRING, (short) 15);
	private static final org.apache.thrift.protocol.TField COD_AREA_CONHEC_CURSO_OUTRO_FIELD_DESC =
			new org.apache.thrift.protocol.TField("codAreaConhecCursoOutro", org.apache.thrift.protocol.TType.STRING, (short) 16);
	private static final org.apache.thrift.protocol.TField NME_AREA_CONHEC_CURSO_OUTRO_FIELD_DESC =
			new org.apache.thrift.protocol.TField("nmeAreaConhecCursoOutro", org.apache.thrift.protocol.TType.STRING, (short) 17);
	private static final org.apache.thrift.protocol.TField COD_AREA_CONHEC_OUTRA_CURSO_OUTRO_FIELD_DESC =
			new org.apache.thrift.protocol.TField("codAreaConhecOutraCursoOutro", org.apache.thrift.protocol.TType.STRING, (short) 18);
	private static final org.apache.thrift.protocol.TField NME_AREA_CONHEC_OUTRA_CURSO_OUTRO_FIELD_DESC =
			new org.apache.thrift.protocol.TField("nmeAreaConhecOutraCursoOutro", org.apache.thrift.protocol.TType.STRING, (short) 19);
	private static final org.apache.thrift.protocol.TField COD_INST_FIELD_DESC =
			new org.apache.thrift.protocol.TField("codInst", org.apache.thrift.protocol.TType.STRING, (short) 20);
	private static final org.apache.thrift.protocol.TField NME_INST_FIELD_DESC =
			new org.apache.thrift.protocol.TField("nmeInst", org.apache.thrift.protocol.TType.STRING, (short) 21);
	private static final org.apache.thrift.protocol.TField SGL_INST_FIELD_DESC =
			new org.apache.thrift.protocol.TField("sglInst", org.apache.thrift.protocol.TType.STRING, (short) 22);
	private static final org.apache.thrift.protocol.TField DSC_ABREV_INST_FIELD_DESC =
			new org.apache.thrift.protocol.TField("dscAbrevInst", org.apache.thrift.protocol.TType.STRING, (short) 23);
	private static final org.apache.thrift.protocol.TField DSC_UF_INST_FIELD_DESC =
			new org.apache.thrift.protocol.TField("dscUfInst", org.apache.thrift.protocol.TType.STRING, (short) 24);
	private static final org.apache.thrift.protocol.TField DSC_REGIAO_INST_FIELD_DESC =
			new org.apache.thrift.protocol.TField("dscRegiaoInst", org.apache.thrift.protocol.TType.STRING, (short) 25);
	private static final org.apache.thrift.protocol.TField COD_SETOR_ECON_INST_FIELD_DESC =
			new org.apache.thrift.protocol.TField("codSetorEconInst", org.apache.thrift.protocol.TType.STRING, (short) 26);
	private static final org.apache.thrift.protocol.TField DSC_SETOR_ECON_INST_FIELD_DESC =
			new org.apache.thrift.protocol.TField("dscSetorEconInst", org.apache.thrift.protocol.TType.STRING, (short) 27);
	private static final org.apache.thrift.protocol.TField COD_INST_OUTRA_FIELD_DESC =
			new org.apache.thrift.protocol.TField("codInstOutra", org.apache.thrift.protocol.TType.STRING, (short) 28);
	private static final org.apache.thrift.protocol.TField NME_INST_OUTRA_FIELD_DESC =
			new org.apache.thrift.protocol.TField("nmeInstOutra", org.apache.thrift.protocol.TType.STRING, (short) 29);
	private static final org.apache.thrift.protocol.TField SGL_INST_OUTRA_FIELD_DESC =
			new org.apache.thrift.protocol.TField("sglInstOutra", org.apache.thrift.protocol.TType.STRING, (short) 30);
	private static final org.apache.thrift.protocol.TField DSC_ABREV_INST_OUTRA_FIELD_DESC =
			new org.apache.thrift.protocol.TField("dscAbrevInstOutra", org.apache.thrift.protocol.TType.STRING, (short) 31);
	private static final org.apache.thrift.protocol.TField DSC_UF_INST_OUTRA_FIELD_DESC =
			new org.apache.thrift.protocol.TField("dscUfInstOutra", org.apache.thrift.protocol.TType.STRING, (short) 32);
	private static final org.apache.thrift.protocol.TField DSC_REGIAO_INST_OUTRA_FIELD_DESC =
			new org.apache.thrift.protocol.TField("dscRegiaoInstOutra", org.apache.thrift.protocol.TType.STRING, (short) 33);

	private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();

	static {
		schemes.put(StandardScheme.class, new FormacaoStandardSchemeFactory());
		schemes.put(TupleScheme.class, new FormacaoTupleSchemeFactory());
	}

	private String nroIdCnpq; // required
	private int seqOrdemNivelForm; // required
	private String codNivelForm; // required
	private String dscNivelForm; // optional
	private String anoIniForm; // optional
	private String anoObtenForm; // optional
	private String anoTerForm; // optional
	private String txtTitForm; // optional
	private String staFormacaoConcluida; // optional
	private String codCurso; // optional
	private String dscCurso; // optional
	private String codAreaConhecCurso; // optional
	private String nmeAreaConhecCurso; // optional
	private String codCursoOutro; // optional
	private String dscCursoOutro; // optional
	private String codAreaConhecCursoOutro; // optional
	private String nmeAreaConhecCursoOutro; // optional
	private String codAreaConhecOutraCursoOutro; // optional
	private String nmeAreaConhecOutraCursoOutro; // optional
	private String codInst; // optional
	private String nmeInst; // optional
	private String sglInst; // optional
	private String dscAbrevInst; // optional
	private String dscUfInst; // optional
	private String dscRegiaoInst; // optional
	private String codSetorEconInst; // optional
	private String dscSetorEconInst; // optional
	private String codInstOutra; // optional
	private String nmeInstOutra; // optional
	private String sglInstOutra; // optional
	private String dscAbrevInstOutra; // optional
	private String dscUfInstOutra; // optional
	private String dscRegiaoInstOutra; // optional

	/** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
	public enum _Fields implements org.apache.thrift.TFieldIdEnum {
		NRO_ID_CNPQ((short) 1, "nroIdCnpq"),
		SEQ_ORDEM_NIVEL_FORM((short) 2, "seqOrdemNivelForm"),
		COD_NIVEL_FORM((short) 3, "codNivelForm"),
		DSC_NIVEL_FORM((short) 4, "dscNivelForm"),
		ANO_INI_FORM((short) 5, "anoIniForm"),
		ANO_OBTEN_FORM((short) 6, "anoObtenForm"),
		ANO_TER_FORM((short) 7, "anoTerForm"),
		TXT_TIT_FORM((short) 8, "txtTitForm"),
		STA_FORMACAO_CONCLUIDA((short) 9, "staFormacaoConcluida"),
		COD_CURSO((short) 10, "codCurso"),
		DSC_CURSO((short) 11, "dscCurso"),
		COD_AREA_CONHEC_CURSO((short) 12, "codAreaConhecCurso"),
		NME_AREA_CONHEC_CURSO((short) 13, "nmeAreaConhecCurso"),
		COD_CURSO_OUTRO((short) 14, "codCursoOutro"),
		DSC_CURSO_OUTRO((short) 15, "dscCursoOutro"),
		COD_AREA_CONHEC_CURSO_OUTRO((short) 16, "codAreaConhecCursoOutro"),
		NME_AREA_CONHEC_CURSO_OUTRO((short) 17, "nmeAreaConhecCursoOutro"),
		COD_AREA_CONHEC_OUTRA_CURSO_OUTRO((short) 18, "codAreaConhecOutraCursoOutro"),
		NME_AREA_CONHEC_OUTRA_CURSO_OUTRO((short) 19, "nmeAreaConhecOutraCursoOutro"),
		COD_INST((short) 20, "codInst"),
		NME_INST((short) 21, "nmeInst"),
		SGL_INST((short) 22, "sglInst"),
		DSC_ABREV_INST((short) 23, "dscAbrevInst"),
		DSC_UF_INST((short) 24, "dscUfInst"),
		DSC_REGIAO_INST((short) 25, "dscRegiaoInst"),
		COD_SETOR_ECON_INST((short) 26, "codSetorEconInst"),
		DSC_SETOR_ECON_INST((short) 27, "dscSetorEconInst"),
		COD_INST_OUTRA((short) 28, "codInstOutra"),
		NME_INST_OUTRA((short) 29, "nmeInstOutra"),
		SGL_INST_OUTRA((short) 30, "sglInstOutra"),
		DSC_ABREV_INST_OUTRA((short) 31, "dscAbrevInstOutra"),
		DSC_UF_INST_OUTRA((short) 32, "dscUfInstOutra"),
		DSC_REGIAO_INST_OUTRA((short) 33, "dscRegiaoInstOutra");

		private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

		static {
			for (_Fields field : EnumSet.allOf(_Fields.class)) {
				byName.put(field.getFieldName(), field);
			}
		}

		/**
		 * Find the _Fields constant that matches fieldId, or null if its not found.
		 */
		public static _Fields findByThriftId(int fieldId) {
			switch (fieldId) {
			case 1: // NRO_ID_CNPQ
				return NRO_ID_CNPQ;
			case 2: // SEQ_ORDEM_NIVEL_FORM
				return SEQ_ORDEM_NIVEL_FORM;
			case 3: // COD_NIVEL_FORM
				return COD_NIVEL_FORM;
			case 4: // DSC_NIVEL_FORM
				return DSC_NIVEL_FORM;
			case 5: // ANO_INI_FORM
				return ANO_INI_FORM;
			case 6: // ANO_OBTEN_FORM
				return ANO_OBTEN_FORM;
			case 7: // ANO_TER_FORM
				return ANO_TER_FORM;
			case 8: // TXT_TIT_FORM
				return TXT_TIT_FORM;
			case 9: // STA_FORMACAO_CONCLUIDA
				return STA_FORMACAO_CONCLUIDA;
			case 10: // COD_CURSO
				return COD_CURSO;
			case 11: // DSC_CURSO
				return DSC_CURSO;
			case 12: // COD_AREA_CONHEC_CURSO
				return COD_AREA_CONHEC_CURSO;
			case 13: // NME_AREA_CONHEC_CURSO
				return NME_AREA_CONHEC_CURSO;
			case 14: // COD_CURSO_OUTRO
				return COD_CURSO_OUTRO;
			case 15: // DSC_CURSO_OUTRO
				return DSC_CURSO_OUTRO;
			case 16: // COD_AREA_CONHEC_CURSO_OUTRO
				return COD_AREA_CONHEC_CURSO_OUTRO;
			case 17: // NME_AREA_CONHEC_CURSO_OUTRO
				return NME_AREA_CONHEC_CURSO_OUTRO;
			case 18: // COD_AREA_CONHEC_OUTRA_CURSO_OUTRO
				return COD_AREA_CONHEC_OUTRA_CURSO_OUTRO;
			case 19: // NME_AREA_CONHEC_OUTRA_CURSO_OUTRO
				return NME_AREA_CONHEC_OUTRA_CURSO_OUTRO;
			case 20: // COD_INST
				return COD_INST;
			case 21: // NME_INST
				return NME_INST;
			case 22: // SGL_INST
				return SGL_INST;
			case 23: // DSC_ABREV_INST
				return DSC_ABREV_INST;
			case 24: // DSC_UF_INST
				return DSC_UF_INST;
			case 25: // DSC_REGIAO_INST
				return DSC_REGIAO_INST;
			case 26: // COD_SETOR_ECON_INST
				return COD_SETOR_ECON_INST;
			case 27: // DSC_SETOR_ECON_INST
				return DSC_SETOR_ECON_INST;
			case 28: // COD_INST_OUTRA
				return COD_INST_OUTRA;
			case 29: // NME_INST_OUTRA
				return NME_INST_OUTRA;
			case 30: // SGL_INST_OUTRA
				return SGL_INST_OUTRA;
			case 31: // DSC_ABREV_INST_OUTRA
				return DSC_ABREV_INST_OUTRA;
			case 32: // DSC_UF_INST_OUTRA
				return DSC_UF_INST_OUTRA;
			case 33: // DSC_REGIAO_INST_OUTRA
				return DSC_REGIAO_INST_OUTRA;
			default:
				return null;
			}
		}

		/**
		 * Find the _Fields constant that matches fieldId, throwing an exception if it is not found.
		 */
		public static _Fields findByThriftIdOrThrow(int fieldId) {
			_Fields fields = findByThriftId(fieldId);
			if (fields == null)
				throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
			return fields;
		}

		/**
		 * Find the _Fields constant that matches name, or null if its not found.
		 */
		public static _Fields findByName(String name) {
			return byName.get(name);
		}

		private final short _thriftId;
		private final String _fieldName;

		_Fields(short thriftId, String fieldName) {
			_thriftId = thriftId;
			_fieldName = fieldName;
		}

		public short getThriftFieldId() {
			return _thriftId;
		}

		public String getFieldName() {
			return _fieldName;
		}
	}

	// isset id assignments
	private static final int __SEQORDEMNIVELFORM_ISSET_ID = 0;
	private byte __isset_bitfield = 0;
	private static final _Fields optionals[] = {_Fields.DSC_NIVEL_FORM, _Fields.ANO_INI_FORM, _Fields.ANO_OBTEN_FORM, _Fields.ANO_TER_FORM,
			_Fields.TXT_TIT_FORM, _Fields.STA_FORMACAO_CONCLUIDA, _Fields.COD_CURSO, _Fields.DSC_CURSO, _Fields.COD_AREA_CONHEC_CURSO,
			_Fields.NME_AREA_CONHEC_CURSO, _Fields.COD_CURSO_OUTRO, _Fields.DSC_CURSO_OUTRO, _Fields.COD_AREA_CONHEC_CURSO_OUTRO,
			_Fields.NME_AREA_CONHEC_CURSO_OUTRO, _Fields.COD_AREA_CONHEC_OUTRA_CURSO_OUTRO, _Fields.NME_AREA_CONHEC_OUTRA_CURSO_OUTRO, _Fields.COD_INST,
			_Fields.NME_INST, _Fields.SGL_INST, _Fields.DSC_ABREV_INST, _Fields.DSC_UF_INST, _Fields.DSC_REGIAO_INST, _Fields.COD_SETOR_ECON_INST,
			_Fields.DSC_SETOR_ECON_INST, _Fields.COD_INST_OUTRA, _Fields.NME_INST_OUTRA, _Fields.SGL_INST_OUTRA, _Fields.DSC_ABREV_INST_OUTRA,
			_Fields.DSC_UF_INST_OUTRA, _Fields.DSC_REGIAO_INST_OUTRA};
	public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;

	static {
		Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
		tmpMap.put(_Fields.NRO_ID_CNPQ, new org.apache.thrift.meta_data.FieldMetaData("nroIdCnpq", org.apache.thrift.TFieldRequirementType.REQUIRED,
				new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
		tmpMap.put(_Fields.SEQ_ORDEM_NIVEL_FORM,
				new org.apache.thrift.meta_data.FieldMetaData("seqOrdemNivelForm", org.apache.thrift.TFieldRequirementType.REQUIRED,
						new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32, "int")));
		tmpMap.put(_Fields.COD_NIVEL_FORM, new org.apache.thrift.meta_data.FieldMetaData("codNivelForm", org.apache.thrift.TFieldRequirementType.REQUIRED,
				new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
		tmpMap.put(_Fields.DSC_NIVEL_FORM, new org.apache.thrift.meta_data.FieldMetaData("dscNivelForm", org.apache.thrift.TFieldRequirementType.OPTIONAL,
				new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
		tmpMap.put(_Fields.ANO_INI_FORM, new org.apache.thrift.meta_data.FieldMetaData("anoIniForm", org.apache.thrift.TFieldRequirementType.OPTIONAL,
				new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
		tmpMap.put(_Fields.ANO_OBTEN_FORM, new org.apache.thrift.meta_data.FieldMetaData("anoObtenForm", org.apache.thrift.TFieldRequirementType.OPTIONAL,
				new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
		tmpMap.put(_Fields.ANO_TER_FORM, new org.apache.thrift.meta_data.FieldMetaData("anoTerForm", org.apache.thrift.TFieldRequirementType.OPTIONAL,
				new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
		tmpMap.put(_Fields.TXT_TIT_FORM, new org.apache.thrift.meta_data.FieldMetaData("txtTitForm", org.apache.thrift.TFieldRequirementType.OPTIONAL,
				new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
		tmpMap.put(_Fields.STA_FORMACAO_CONCLUIDA, new org.apache.thrift.meta_data.FieldMetaData("staFormacaoConcluida",
				org.apache.thrift.TFieldRequirementType.OPTIONAL, new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
		tmpMap.put(_Fields.COD_CURSO, new org.apache.thrift.meta_data.FieldMetaData("codCurso", org.apache.thrift.TFieldRequirementType.OPTIONAL,
				new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
		tmpMap.put(_Fields.DSC_CURSO, new org.apache.thrift.meta_data.FieldMetaData("dscCurso", org.apache.thrift.TFieldRequirementType.OPTIONAL,
				new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
		tmpMap.put(_Fields.COD_AREA_CONHEC_CURSO, new org.apache.thrift.meta_data.FieldMetaData("codAreaConhecCurso",
				org.apache.thrift.TFieldRequirementType.OPTIONAL, new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
		tmpMap.put(_Fields.NME_AREA_CONHEC_CURSO, new org.apache.thrift.meta_data.FieldMetaData("nmeAreaConhecCurso",
				org.apache.thrift.TFieldRequirementType.OPTIONAL, new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
		tmpMap.put(_Fields.COD_CURSO_OUTRO, new org.apache.thrift.meta_data.FieldMetaData("codCursoOutro", org.apache.thrift.TFieldRequirementType.OPTIONAL,
				new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
		tmpMap.put(_Fields.DSC_CURSO_OUTRO, new org.apache.thrift.meta_data.FieldMetaData("dscCursoOutro", org.apache.thrift.TFieldRequirementType.OPTIONAL,
				new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
		tmpMap.put(_Fields.COD_AREA_CONHEC_CURSO_OUTRO, new org.apache.thrift.meta_data.FieldMetaData("codAreaConhecCursoOutro",
				org.apache.thrift.TFieldRequirementType.OPTIONAL, new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
		tmpMap.put(_Fields.NME_AREA_CONHEC_CURSO_OUTRO, new org.apache.thrift.meta_data.FieldMetaData("nmeAreaConhecCursoOutro",
				org.apache.thrift.TFieldRequirementType.OPTIONAL, new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
		tmpMap.put(_Fields.COD_AREA_CONHEC_OUTRA_CURSO_OUTRO, new org.apache.thrift.meta_data.FieldMetaData("codAreaConhecOutraCursoOutro",
				org.apache.thrift.TFieldRequirementType.OPTIONAL, new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
		tmpMap.put(_Fields.NME_AREA_CONHEC_OUTRA_CURSO_OUTRO, new org.apache.thrift.meta_data.FieldMetaData("nmeAreaConhecOutraCursoOutro",
				org.apache.thrift.TFieldRequirementType.OPTIONAL, new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
		tmpMap.put(_Fields.COD_INST, new org.apache.thrift.meta_data.FieldMetaData("codInst", org.apache.thrift.TFieldRequirementType.OPTIONAL,
				new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
		tmpMap.put(_Fields.NME_INST, new org.apache.thrift.meta_data.FieldMetaData("nmeInst", org.apache.thrift.TFieldRequirementType.OPTIONAL,
				new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
		tmpMap.put(_Fields.SGL_INST, new org.apache.thrift.meta_data.FieldMetaData("sglInst", org.apache.thrift.TFieldRequirementType.OPTIONAL,
				new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
		tmpMap.put(_Fields.DSC_ABREV_INST, new org.apache.thrift.meta_data.FieldMetaData("dscAbrevInst", org.apache.thrift.TFieldRequirementType.OPTIONAL,
				new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
		tmpMap.put(_Fields.DSC_UF_INST, new org.apache.thrift.meta_data.FieldMetaData("dscUfInst", org.apache.thrift.TFieldRequirementType.OPTIONAL,
				new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
		tmpMap.put(_Fields.DSC_REGIAO_INST, new org.apache.thrift.meta_data.FieldMetaData("dscRegiaoInst", org.apache.thrift.TFieldRequirementType.OPTIONAL,
				new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
		tmpMap.put(_Fields.COD_SETOR_ECON_INST, new org.apache.thrift.meta_data.FieldMetaData("codSetorEconInst",
				org.apache.thrift.TFieldRequirementType.OPTIONAL, new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
		tmpMap.put(_Fields.DSC_SETOR_ECON_INST, new org.apache.thrift.meta_data.FieldMetaData("dscSetorEconInst",
				org.apache.thrift.TFieldRequirementType.OPTIONAL, new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
		tmpMap.put(_Fields.COD_INST_OUTRA, new org.apache.thrift.meta_data.FieldMetaData("codInstOutra", org.apache.thrift.TFieldRequirementType.OPTIONAL,
				new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
		tmpMap.put(_Fields.NME_INST_OUTRA, new org.apache.thrift.meta_data.FieldMetaData("nmeInstOutra", org.apache.thrift.TFieldRequirementType.OPTIONAL,
				new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
		tmpMap.put(_Fields.SGL_INST_OUTRA, new org.apache.thrift.meta_data.FieldMetaData("sglInstOutra", org.apache.thrift.TFieldRequirementType.OPTIONAL,
				new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
		tmpMap.put(_Fields.DSC_ABREV_INST_OUTRA, new org.apache.thrift.meta_data.FieldMetaData("dscAbrevInstOutra",
				org.apache.thrift.TFieldRequirementType.OPTIONAL, new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
		tmpMap.put(_Fields.DSC_UF_INST_OUTRA, new org.apache.thrift.meta_data.FieldMetaData("dscUfInstOutra", org.apache.thrift.TFieldRequirementType.OPTIONAL,
				new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
		tmpMap.put(_Fields.DSC_REGIAO_INST_OUTRA, new org.apache.thrift.meta_data.FieldMetaData("dscRegiaoInstOutra",
				org.apache.thrift.TFieldRequirementType.OPTIONAL, new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
		metaDataMap = Collections.unmodifiableMap(tmpMap);
		org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(Formacao.class, metaDataMap);
	}

	public Formacao() {
	}

	public Formacao(String nroIdCnpq, int seqOrdemNivelForm, String codNivelForm) {
		this();
		this.nroIdCnpq = nroIdCnpq;
		this.seqOrdemNivelForm = seqOrdemNivelForm;
		setSeqOrdemNivelFormIsSet(true);
		this.codNivelForm = codNivelForm;
	}

	/**
	 * Performs a deep copy on <i>other</i>.
	 */
	public Formacao(Formacao other) {
		__isset_bitfield = other.__isset_bitfield;
		if (other.isSetNroIdCnpq()) {
			this.nroIdCnpq = other.nroIdCnpq;
		}
		this.seqOrdemNivelForm = other.seqOrdemNivelForm;
		if (other.isSetCodNivelForm()) {
			this.codNivelForm = other.codNivelForm;
		}
		if (other.isSetDscNivelForm()) {
			this.dscNivelForm = other.dscNivelForm;
		}
		if (other.isSetAnoIniForm()) {
			this.anoIniForm = other.anoIniForm;
		}
		if (other.isSetAnoObtenForm()) {
			this.anoObtenForm = other.anoObtenForm;
		}
		if (other.isSetAnoTerForm()) {
			this.anoTerForm = other.anoTerForm;
		}
		if (other.isSetTxtTitForm()) {
			this.txtTitForm = other.txtTitForm;
		}
		if (other.isSetStaFormacaoConcluida()) {
			this.staFormacaoConcluida = other.staFormacaoConcluida;
		}
		if (other.isSetCodCurso()) {
			this.codCurso = other.codCurso;
		}
		if (other.isSetDscCurso()) {
			this.dscCurso = other.dscCurso;
		}
		if (other.isSetCodAreaConhecCurso()) {
			this.codAreaConhecCurso = other.codAreaConhecCurso;
		}
		if (other.isSetNmeAreaConhecCurso()) {
			this.nmeAreaConhecCurso = other.nmeAreaConhecCurso;
		}
		if (other.isSetCodCursoOutro()) {
			this.codCursoOutro = other.codCursoOutro;
		}
		if (other.isSetDscCursoOutro()) {
			this.dscCursoOutro = other.dscCursoOutro;
		}
		if (other.isSetCodAreaConhecCursoOutro()) {
			this.codAreaConhecCursoOutro = other.codAreaConhecCursoOutro;
		}
		if (other.isSetNmeAreaConhecCursoOutro()) {
			this.nmeAreaConhecCursoOutro = other.nmeAreaConhecCursoOutro;
		}
		if (other.isSetCodAreaConhecOutraCursoOutro()) {
			this.codAreaConhecOutraCursoOutro = other.codAreaConhecOutraCursoOutro;
		}
		if (other.isSetNmeAreaConhecOutraCursoOutro()) {
			this.nmeAreaConhecOutraCursoOutro = other.nmeAreaConhecOutraCursoOutro;
		}
		if (other.isSetCodInst()) {
			this.codInst = other.codInst;
		}
		if (other.isSetNmeInst()) {
			this.nmeInst = other.nmeInst;
		}
		if (other.isSetSglInst()) {
			this.sglInst = other.sglInst;
		}
		if (other.isSetDscAbrevInst()) {
			this.dscAbrevInst = other.dscAbrevInst;
		}
		if (other.isSetDscUfInst()) {
			this.dscUfInst = other.dscUfInst;
		}
		if (other.isSetDscRegiaoInst()) {
			this.dscRegiaoInst = other.dscRegiaoInst;
		}
		if (other.isSetCodSetorEconInst()) {
			this.codSetorEconInst = other.codSetorEconInst;
		}
		if (other.isSetDscSetorEconInst()) {
			this.dscSetorEconInst = other.dscSetorEconInst;
		}
		if (other.isSetCodInstOutra()) {
			this.codInstOutra = other.codInstOutra;
		}
		if (other.isSetNmeInstOutra()) {
			this.nmeInstOutra = other.nmeInstOutra;
		}
		if (other.isSetSglInstOutra()) {
			this.sglInstOutra = other.sglInstOutra;
		}
		if (other.isSetDscAbrevInstOutra()) {
			this.dscAbrevInstOutra = other.dscAbrevInstOutra;
		}
		if (other.isSetDscUfInstOutra()) {
			this.dscUfInstOutra = other.dscUfInstOutra;
		}
		if (other.isSetDscRegiaoInstOutra()) {
			this.dscRegiaoInstOutra = other.dscRegiaoInstOutra;
		}
	}

	public Formacao deepCopy() {
		return new Formacao(this);
	}

	@Override
	public void clear() {
		this.nroIdCnpq = null;
		setSeqOrdemNivelFormIsSet(false);
		this.seqOrdemNivelForm = 0;
		this.codNivelForm = null;
		this.dscNivelForm = null;
		this.anoIniForm = null;
		this.anoObtenForm = null;
		this.anoTerForm = null;
		this.txtTitForm = null;
		this.staFormacaoConcluida = null;
		this.codCurso = null;
		this.dscCurso = null;
		this.codAreaConhecCurso = null;
		this.nmeAreaConhecCurso = null;
		this.codCursoOutro = null;
		this.dscCursoOutro = null;
		this.codAreaConhecCursoOutro = null;
		this.nmeAreaConhecCursoOutro = null;
		this.codAreaConhecOutraCursoOutro = null;
		this.nmeAreaConhecOutraCursoOutro = null;
		this.codInst = null;
		this.nmeInst = null;
		this.sglInst = null;
		this.dscAbrevInst = null;
		this.dscUfInst = null;
		this.dscRegiaoInst = null;
		this.codSetorEconInst = null;
		this.dscSetorEconInst = null;
		this.codInstOutra = null;
		this.nmeInstOutra = null;
		this.sglInstOutra = null;
		this.dscAbrevInstOutra = null;
		this.dscUfInstOutra = null;
		this.dscRegiaoInstOutra = null;
	}

	public String getNroIdCnpq() {
		return this.nroIdCnpq;
	}

	public void setNroIdCnpq(String nroIdCnpq) {
		this.nroIdCnpq = nroIdCnpq;
	}

	public void unsetNroIdCnpq() {
		this.nroIdCnpq = null;
	}

	/** Returns true if field nroIdCnpq is set (has been assigned a value) and false otherwise */
	public boolean isSetNroIdCnpq() {
		return this.nroIdCnpq != null;
	}

	public void setNroIdCnpqIsSet(boolean value) {
		if (!value) {
			this.nroIdCnpq = null;
		}
	}

	public int getSeqOrdemNivelForm() {
		return this.seqOrdemNivelForm;
	}

	public void setSeqOrdemNivelForm(int seqOrdemNivelForm) {
		this.seqOrdemNivelForm = seqOrdemNivelForm;
		setSeqOrdemNivelFormIsSet(true);
	}

	public void unsetSeqOrdemNivelForm() {
		__isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SEQORDEMNIVELFORM_ISSET_ID);
	}

	/** Returns true if field seqOrdemNivelForm is set (has been assigned a value) and false otherwise */
	public boolean isSetSeqOrdemNivelForm() {
		return EncodingUtils.testBit(__isset_bitfield, __SEQORDEMNIVELFORM_ISSET_ID);
	}

	public void setSeqOrdemNivelFormIsSet(boolean value) {
		__isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SEQORDEMNIVELFORM_ISSET_ID, value);
	}

	public String getCodNivelForm() {
		return this.codNivelForm;
	}

	public void setCodNivelForm(String codNivelForm) {
		this.codNivelForm = codNivelForm;
	}

	public void unsetCodNivelForm() {
		this.codNivelForm = null;
	}

	/** Returns true if field codNivelForm is set (has been assigned a value) and false otherwise */
	public boolean isSetCodNivelForm() {
		return this.codNivelForm != null;
	}

	public void setCodNivelFormIsSet(boolean value) {
		if (!value) {
			this.codNivelForm = null;
		}
	}

	public String getDscNivelForm() {
		return this.dscNivelForm;
	}

	public void setDscNivelForm(String dscNivelForm) {
		this.dscNivelForm = dscNivelForm;
	}

	public void unsetDscNivelForm() {
		this.dscNivelForm = null;
	}

	/** Returns true if field dscNivelForm is set (has been assigned a value) and false otherwise */
	public boolean isSetDscNivelForm() {
		return this.dscNivelForm != null;
	}

	public void setDscNivelFormIsSet(boolean value) {
		if (!value) {
			this.dscNivelForm = null;
		}
	}

	public String getAnoIniForm() {
		return this.anoIniForm;
	}

	public void setAnoIniForm(String anoIniForm) {
		this.anoIniForm = anoIniForm;
	}

	public void unsetAnoIniForm() {
		this.anoIniForm = null;
	}

	/** Returns true if field anoIniForm is set (has been assigned a value) and false otherwise */
	public boolean isSetAnoIniForm() {
		return this.anoIniForm != null;
	}

	public void setAnoIniFormIsSet(boolean value) {
		if (!value) {
			this.anoIniForm = null;
		}
	}

	public String getAnoObtenForm() {
		return this.anoObtenForm;
	}

	public void setAnoObtenForm(String anoObtenForm) {
		this.anoObtenForm = anoObtenForm;
	}

	public void unsetAnoObtenForm() {
		this.anoObtenForm = null;
	}

	/** Returns true if field anoObtenForm is set (has been assigned a value) and false otherwise */
	public boolean isSetAnoObtenForm() {
		return this.anoObtenForm != null;
	}

	public void setAnoObtenFormIsSet(boolean value) {
		if (!value) {
			this.anoObtenForm = null;
		}
	}

	public String getAnoTerForm() {
		return this.anoTerForm;
	}

	public void setAnoTerForm(String anoTerForm) {
		this.anoTerForm = anoTerForm;
	}

	public void unsetAnoTerForm() {
		this.anoTerForm = null;
	}

	/** Returns true if field anoTerForm is set (has been assigned a value) and false otherwise */
	public boolean isSetAnoTerForm() {
		return this.anoTerForm != null;
	}

	public void setAnoTerFormIsSet(boolean value) {
		if (!value) {
			this.anoTerForm = null;
		}
	}

	public String getTxtTitForm() {
		return this.txtTitForm;
	}

	public void setTxtTitForm(String txtTitForm) {
		this.txtTitForm = txtTitForm;
	}

	public void unsetTxtTitForm() {
		this.txtTitForm = null;
	}

	/** Returns true if field txtTitForm is set (has been assigned a value) and false otherwise */
	public boolean isSetTxtTitForm() {
		return this.txtTitForm != null;
	}

	public void setTxtTitFormIsSet(boolean value) {
		if (!value) {
			this.txtTitForm = null;
		}
	}

	public String getStaFormacaoConcluida() {
		return this.staFormacaoConcluida;
	}

	public void setStaFormacaoConcluida(String staFormacaoConcluida) {
		this.staFormacaoConcluida = staFormacaoConcluida;
	}

	public void unsetStaFormacaoConcluida() {
		this.staFormacaoConcluida = null;
	}

	/** Returns true if field staFormacaoConcluida is set (has been assigned a value) and false otherwise */
	public boolean isSetStaFormacaoConcluida() {
		return this.staFormacaoConcluida != null;
	}

	public void setStaFormacaoConcluidaIsSet(boolean value) {
		if (!value) {
			this.staFormacaoConcluida = null;
		}
	}

	public String getCodCurso() {
		return this.codCurso;
	}

	public void setCodCurso(String codCurso) {
		this.codCurso = codCurso;
	}

	public void unsetCodCurso() {
		this.codCurso = null;
	}

	/** Returns true if field codCurso is set (has been assigned a value) and false otherwise */
	public boolean isSetCodCurso() {
		return this.codCurso != null;
	}

	public void setCodCursoIsSet(boolean value) {
		if (!value) {
			this.codCurso = null;
		}
	}

	public String getDscCurso() {
		return this.dscCurso;
	}

	public void setDscCurso(String dscCurso) {
		this.dscCurso = dscCurso;
	}

	public void unsetDscCurso() {
		this.dscCurso = null;
	}

	/** Returns true if field dscCurso is set (has been assigned a value) and false otherwise */
	public boolean isSetDscCurso() {
		return this.dscCurso != null;
	}

	public void setDscCursoIsSet(boolean value) {
		if (!value) {
			this.dscCurso = null;
		}
	}

	public String getCodAreaConhecCurso() {
		return this.codAreaConhecCurso;
	}

	public void setCodAreaConhecCurso(String codAreaConhecCurso) {
		this.codAreaConhecCurso = codAreaConhecCurso;
	}

	public void unsetCodAreaConhecCurso() {
		this.codAreaConhecCurso = null;
	}

	/** Returns true if field codAreaConhecCurso is set (has been assigned a value) and false otherwise */
	public boolean isSetCodAreaConhecCurso() {
		return this.codAreaConhecCurso != null;
	}

	public void setCodAreaConhecCursoIsSet(boolean value) {
		if (!value) {
			this.codAreaConhecCurso = null;
		}
	}

	public String getNmeAreaConhecCurso() {
		return this.nmeAreaConhecCurso;
	}

	public void setNmeAreaConhecCurso(String nmeAreaConhecCurso) {
		this.nmeAreaConhecCurso = nmeAreaConhecCurso;
	}

	public void unsetNmeAreaConhecCurso() {
		this.nmeAreaConhecCurso = null;
	}

	/** Returns true if field nmeAreaConhecCurso is set (has been assigned a value) and false otherwise */
	public boolean isSetNmeAreaConhecCurso() {
		return this.nmeAreaConhecCurso != null;
	}

	public void setNmeAreaConhecCursoIsSet(boolean value) {
		if (!value) {
			this.nmeAreaConhecCurso = null;
		}
	}

	public String getCodCursoOutro() {
		return this.codCursoOutro;
	}

	public void setCodCursoOutro(String codCursoOutro) {
		this.codCursoOutro = codCursoOutro;
	}

	public void unsetCodCursoOutro() {
		this.codCursoOutro = null;
	}

	/** Returns true if field codCursoOutro is set (has been assigned a value) and false otherwise */
	public boolean isSetCodCursoOutro() {
		return this.codCursoOutro != null;
	}

	public void setCodCursoOutroIsSet(boolean value) {
		if (!value) {
			this.codCursoOutro = null;
		}
	}

	public String getDscCursoOutro() {
		return this.dscCursoOutro;
	}

	public void setDscCursoOutro(String dscCursoOutro) {
		this.dscCursoOutro = dscCursoOutro;
	}

	public void unsetDscCursoOutro() {
		this.dscCursoOutro = null;
	}

	/** Returns true if field dscCursoOutro is set (has been assigned a value) and false otherwise */
	public boolean isSetDscCursoOutro() {
		return this.dscCursoOutro != null;
	}

	public void setDscCursoOutroIsSet(boolean value) {
		if (!value) {
			this.dscCursoOutro = null;
		}
	}

	public String getCodAreaConhecCursoOutro() {
		return this.codAreaConhecCursoOutro;
	}

	public void setCodAreaConhecCursoOutro(String codAreaConhecCursoOutro) {
		this.codAreaConhecCursoOutro = codAreaConhecCursoOutro;
	}

	public void unsetCodAreaConhecCursoOutro() {
		this.codAreaConhecCursoOutro = null;
	}

	/** Returns true if field codAreaConhecCursoOutro is set (has been assigned a value) and false otherwise */
	public boolean isSetCodAreaConhecCursoOutro() {
		return this.codAreaConhecCursoOutro != null;
	}

	public void setCodAreaConhecCursoOutroIsSet(boolean value) {
		if (!value) {
			this.codAreaConhecCursoOutro = null;
		}
	}

	public String getNmeAreaConhecCursoOutro() {
		return this.nmeAreaConhecCursoOutro;
	}

	public void setNmeAreaConhecCursoOutro(String nmeAreaConhecCursoOutro) {
		this.nmeAreaConhecCursoOutro = nmeAreaConhecCursoOutro;
	}

	public void unsetNmeAreaConhecCursoOutro() {
		this.nmeAreaConhecCursoOutro = null;
	}

	/** Returns true if field nmeAreaConhecCursoOutro is set (has been assigned a value) and false otherwise */
	public boolean isSetNmeAreaConhecCursoOutro() {
		return this.nmeAreaConhecCursoOutro != null;
	}

	public void setNmeAreaConhecCursoOutroIsSet(boolean value) {
		if (!value) {
			this.nmeAreaConhecCursoOutro = null;
		}
	}

	public String getCodAreaConhecOutraCursoOutro() {
		return this.codAreaConhecOutraCursoOutro;
	}

	public void setCodAreaConhecOutraCursoOutro(String codAreaConhecOutraCursoOutro) {
		this.codAreaConhecOutraCursoOutro = codAreaConhecOutraCursoOutro;
	}

	public void unsetCodAreaConhecOutraCursoOutro() {
		this.codAreaConhecOutraCursoOutro = null;
	}

	/** Returns true if field codAreaConhecOutraCursoOutro is set (has been assigned a value) and false otherwise */
	public boolean isSetCodAreaConhecOutraCursoOutro() {
		return this.codAreaConhecOutraCursoOutro != null;
	}

	public void setCodAreaConhecOutraCursoOutroIsSet(boolean value) {
		if (!value) {
			this.codAreaConhecOutraCursoOutro = null;
		}
	}

	public String getNmeAreaConhecOutraCursoOutro() {
		return this.nmeAreaConhecOutraCursoOutro;
	}

	public void setNmeAreaConhecOutraCursoOutro(String nmeAreaConhecOutraCursoOutro) {
		this.nmeAreaConhecOutraCursoOutro = nmeAreaConhecOutraCursoOutro;
	}

	public void unsetNmeAreaConhecOutraCursoOutro() {
		this.nmeAreaConhecOutraCursoOutro = null;
	}

	/** Returns true if field nmeAreaConhecOutraCursoOutro is set (has been assigned a value) and false otherwise */
	public boolean isSetNmeAreaConhecOutraCursoOutro() {
		return this.nmeAreaConhecOutraCursoOutro != null;
	}

	public void setNmeAreaConhecOutraCursoOutroIsSet(boolean value) {
		if (!value) {
			this.nmeAreaConhecOutraCursoOutro = null;
		}
	}

	public String getCodInst() {
		return this.codInst;
	}

	public void setCodInst(String codInst) {
		this.codInst = codInst;
	}

	public void unsetCodInst() {
		this.codInst = null;
	}

	/** Returns true if field codInst is set (has been assigned a value) and false otherwise */
	public boolean isSetCodInst() {
		return this.codInst != null;
	}

	public void setCodInstIsSet(boolean value) {
		if (!value) {
			this.codInst = null;
		}
	}

	public String getNmeInst() {
		return this.nmeInst;
	}

	public void setNmeInst(String nmeInst) {
		this.nmeInst = nmeInst;
	}

	public void unsetNmeInst() {
		this.nmeInst = null;
	}

	/** Returns true if field nmeInst is set (has been assigned a value) and false otherwise */
	public boolean isSetNmeInst() {
		return this.nmeInst != null;
	}

	public void setNmeInstIsSet(boolean value) {
		if (!value) {
			this.nmeInst = null;
		}
	}

	public String getSglInst() {
		return this.sglInst;
	}

	public void setSglInst(String sglInst) {
		this.sglInst = sglInst;
	}

	public void unsetSglInst() {
		this.sglInst = null;
	}

	/** Returns true if field sglInst is set (has been assigned a value) and false otherwise */
	public boolean isSetSglInst() {
		return this.sglInst != null;
	}

	public void setSglInstIsSet(boolean value) {
		if (!value) {
			this.sglInst = null;
		}
	}

	public String getDscAbrevInst() {
		return this.dscAbrevInst;
	}

	public void setDscAbrevInst(String dscAbrevInst) {
		this.dscAbrevInst = dscAbrevInst;
	}

	public void unsetDscAbrevInst() {
		this.dscAbrevInst = null;
	}

	/** Returns true if field dscAbrevInst is set (has been assigned a value) and false otherwise */
	public boolean isSetDscAbrevInst() {
		return this.dscAbrevInst != null;
	}

	public void setDscAbrevInstIsSet(boolean value) {
		if (!value) {
			this.dscAbrevInst = null;
		}
	}

	public String getDscUfInst() {
		return this.dscUfInst;
	}

	public void setDscUfInst(String dscUfInst) {
		this.dscUfInst = dscUfInst;
	}

	public void unsetDscUfInst() {
		this.dscUfInst = null;
	}

	/** Returns true if field dscUfInst is set (has been assigned a value) and false otherwise */
	public boolean isSetDscUfInst() {
		return this.dscUfInst != null;
	}

	public void setDscUfInstIsSet(boolean value) {
		if (!value) {
			this.dscUfInst = null;
		}
	}

	public String getDscRegiaoInst() {
		return this.dscRegiaoInst;
	}

	public void setDscRegiaoInst(String dscRegiaoInst) {
		this.dscRegiaoInst = dscRegiaoInst;
	}

	public void unsetDscRegiaoInst() {
		this.dscRegiaoInst = null;
	}

	/** Returns true if field dscRegiaoInst is set (has been assigned a value) and false otherwise */
	public boolean isSetDscRegiaoInst() {
		return this.dscRegiaoInst != null;
	}

	public void setDscRegiaoInstIsSet(boolean value) {
		if (!value) {
			this.dscRegiaoInst = null;
		}
	}

	public String getCodSetorEconInst() {
		return this.codSetorEconInst;
	}

	public void setCodSetorEconInst(String codSetorEconInst) {
		this.codSetorEconInst = codSetorEconInst;
	}

	public void unsetCodSetorEconInst() {
		this.codSetorEconInst = null;
	}

	/** Returns true if field codSetorEconInst is set (has been assigned a value) and false otherwise */
	public boolean isSetCodSetorEconInst() {
		return this.codSetorEconInst != null;
	}

	public void setCodSetorEconInstIsSet(boolean value) {
		if (!value) {
			this.codSetorEconInst = null;
		}
	}

	public String getDscSetorEconInst() {
		return this.dscSetorEconInst;
	}

	public void setDscSetorEconInst(String dscSetorEconInst) {
		this.dscSetorEconInst = dscSetorEconInst;
	}

	public void unsetDscSetorEconInst() {
		this.dscSetorEconInst = null;
	}

	/** Returns true if field dscSetorEconInst is set (has been assigned a value) and false otherwise */
	public boolean isSetDscSetorEconInst() {
		return this.dscSetorEconInst != null;
	}

	public void setDscSetorEconInstIsSet(boolean value) {
		if (!value) {
			this.dscSetorEconInst = null;
		}
	}

	public String getCodInstOutra() {
		return this.codInstOutra;
	}

	public void setCodInstOutra(String codInstOutra) {
		this.codInstOutra = codInstOutra;
	}

	public void unsetCodInstOutra() {
		this.codInstOutra = null;
	}

	/** Returns true if field codInstOutra is set (has been assigned a value) and false otherwise */
	public boolean isSetCodInstOutra() {
		return this.codInstOutra != null;
	}

	public void setCodInstOutraIsSet(boolean value) {
		if (!value) {
			this.codInstOutra = null;
		}
	}

	public String getNmeInstOutra() {
		return this.nmeInstOutra;
	}

	public void setNmeInstOutra(String nmeInstOutra) {
		this.nmeInstOutra = nmeInstOutra;
	}

	public void unsetNmeInstOutra() {
		this.nmeInstOutra = null;
	}

	/** Returns true if field nmeInstOutra is set (has been assigned a value) and false otherwise */
	public boolean isSetNmeInstOutra() {
		return this.nmeInstOutra != null;
	}

	public void setNmeInstOutraIsSet(boolean value) {
		if (!value) {
			this.nmeInstOutra = null;
		}
	}

	public String getSglInstOutra() {
		return this.sglInstOutra;
	}

	public void setSglInstOutra(String sglInstOutra) {
		this.sglInstOutra = sglInstOutra;
	}

	public void unsetSglInstOutra() {
		this.sglInstOutra = null;
	}

	/** Returns true if field sglInstOutra is set (has been assigned a value) and false otherwise */
	public boolean isSetSglInstOutra() {
		return this.sglInstOutra != null;
	}

	public void setSglInstOutraIsSet(boolean value) {
		if (!value) {
			this.sglInstOutra = null;
		}
	}

	public String getDscAbrevInstOutra() {
		return this.dscAbrevInstOutra;
	}

	public void setDscAbrevInstOutra(String dscAbrevInstOutra) {
		this.dscAbrevInstOutra = dscAbrevInstOutra;
	}

	public void unsetDscAbrevInstOutra() {
		this.dscAbrevInstOutra = null;
	}

	/** Returns true if field dscAbrevInstOutra is set (has been assigned a value) and false otherwise */
	public boolean isSetDscAbrevInstOutra() {
		return this.dscAbrevInstOutra != null;
	}

	public void setDscAbrevInstOutraIsSet(boolean value) {
		if (!value) {
			this.dscAbrevInstOutra = null;
		}
	}

	public String getDscUfInstOutra() {
		return this.dscUfInstOutra;
	}

	public void setDscUfInstOutra(String dscUfInstOutra) {
		this.dscUfInstOutra = dscUfInstOutra;
	}

	public void unsetDscUfInstOutra() {
		this.dscUfInstOutra = null;
	}

	/** Returns true if field dscUfInstOutra is set (has been assigned a value) and false otherwise */
	public boolean isSetDscUfInstOutra() {
		return this.dscUfInstOutra != null;
	}

	public void setDscUfInstOutraIsSet(boolean value) {
		if (!value) {
			this.dscUfInstOutra = null;
		}
	}

	public String getDscRegiaoInstOutra() {
		return this.dscRegiaoInstOutra;
	}

	public void setDscRegiaoInstOutra(String dscRegiaoInstOutra) {
		this.dscRegiaoInstOutra = dscRegiaoInstOutra;
	}

	public void unsetDscRegiaoInstOutra() {
		this.dscRegiaoInstOutra = null;
	}

	/** Returns true if field dscRegiaoInstOutra is set (has been assigned a value) and false otherwise */
	public boolean isSetDscRegiaoInstOutra() {
		return this.dscRegiaoInstOutra != null;
	}

	public void setDscRegiaoInstOutraIsSet(boolean value) {
		if (!value) {
			this.dscRegiaoInstOutra = null;
		}
	}

	public void setFieldValue(_Fields field, Object value) {
		switch (field) {
		case NRO_ID_CNPQ:
			if (value == null) {
				unsetNroIdCnpq();
			} else {
				setNroIdCnpq((String) value);
			}
			break;

		case SEQ_ORDEM_NIVEL_FORM:
			if (value == null) {
				unsetSeqOrdemNivelForm();
			} else {
				setSeqOrdemNivelForm((Integer) value);
			}
			break;

		case COD_NIVEL_FORM:
			if (value == null) {
				unsetCodNivelForm();
			} else {
				setCodNivelForm((String) value);
			}
			break;

		case DSC_NIVEL_FORM:
			if (value == null) {
				unsetDscNivelForm();
			} else {
				setDscNivelForm((String) value);
			}
			break;

		case ANO_INI_FORM:
			if (value == null) {
				unsetAnoIniForm();
			} else {
				setAnoIniForm((String) value);
			}
			break;

		case ANO_OBTEN_FORM:
			if (value == null) {
				unsetAnoObtenForm();
			} else {
				setAnoObtenForm((String) value);
			}
			break;

		case ANO_TER_FORM:
			if (value == null) {
				unsetAnoTerForm();
			} else {
				setAnoTerForm((String) value);
			}
			break;

		case TXT_TIT_FORM:
			if (value == null) {
				unsetTxtTitForm();
			} else {
				setTxtTitForm((String) value);
			}
			break;

		case STA_FORMACAO_CONCLUIDA:
			if (value == null) {
				unsetStaFormacaoConcluida();
			} else {
				setStaFormacaoConcluida((String) value);
			}
			break;

		case COD_CURSO:
			if (value == null) {
				unsetCodCurso();
			} else {
				setCodCurso((String) value);
			}
			break;

		case DSC_CURSO:
			if (value == null) {
				unsetDscCurso();
			} else {
				setDscCurso((String) value);
			}
			break;

		case COD_AREA_CONHEC_CURSO:
			if (value == null) {
				unsetCodAreaConhecCurso();
			} else {
				setCodAreaConhecCurso((String) value);
			}
			break;

		case NME_AREA_CONHEC_CURSO:
			if (value == null) {
				unsetNmeAreaConhecCurso();
			} else {
				setNmeAreaConhecCurso((String) value);
			}
			break;

		case COD_CURSO_OUTRO:
			if (value == null) {
				unsetCodCursoOutro();
			} else {
				setCodCursoOutro((String) value);
			}
			break;

		case DSC_CURSO_OUTRO:
			if (value == null) {
				unsetDscCursoOutro();
			} else {
				setDscCursoOutro((String) value);
			}
			break;

		case COD_AREA_CONHEC_CURSO_OUTRO:
			if (value == null) {
				unsetCodAreaConhecCursoOutro();
			} else {
				setCodAreaConhecCursoOutro((String) value);
			}
			break;

		case NME_AREA_CONHEC_CURSO_OUTRO:
			if (value == null) {
				unsetNmeAreaConhecCursoOutro();
			} else {
				setNmeAreaConhecCursoOutro((String) value);
			}
			break;

		case COD_AREA_CONHEC_OUTRA_CURSO_OUTRO:
			if (value == null) {
				unsetCodAreaConhecOutraCursoOutro();
			} else {
				setCodAreaConhecOutraCursoOutro((String) value);
			}
			break;

		case NME_AREA_CONHEC_OUTRA_CURSO_OUTRO:
			if (value == null) {
				unsetNmeAreaConhecOutraCursoOutro();
			} else {
				setNmeAreaConhecOutraCursoOutro((String) value);
			}
			break;

		case COD_INST:
			if (value == null) {
				unsetCodInst();
			} else {
				setCodInst((String) value);
			}
			break;

		case NME_INST:
			if (value == null) {
				unsetNmeInst();
			} else {
				setNmeInst((String) value);
			}
			break;

		case SGL_INST:
			if (value == null) {
				unsetSglInst();
			} else {
				setSglInst((String) value);
			}
			break;

		case DSC_ABREV_INST:
			if (value == null) {
				unsetDscAbrevInst();
			} else {
				setDscAbrevInst((String) value);
			}
			break;

		case DSC_UF_INST:
			if (value == null) {
				unsetDscUfInst();
			} else {
				setDscUfInst((String) value);
			}
			break;

		case DSC_REGIAO_INST:
			if (value == null) {
				unsetDscRegiaoInst();
			} else {
				setDscRegiaoInst((String) value);
			}
			break;

		case COD_SETOR_ECON_INST:
			if (value == null) {
				unsetCodSetorEconInst();
			} else {
				setCodSetorEconInst((String) value);
			}
			break;

		case DSC_SETOR_ECON_INST:
			if (value == null) {
				unsetDscSetorEconInst();
			} else {
				setDscSetorEconInst((String) value);
			}
			break;

		case COD_INST_OUTRA:
			if (value == null) {
				unsetCodInstOutra();
			} else {
				setCodInstOutra((String) value);
			}
			break;

		case NME_INST_OUTRA:
			if (value == null) {
				unsetNmeInstOutra();
			} else {
				setNmeInstOutra((String) value);
			}
			break;

		case SGL_INST_OUTRA:
			if (value == null) {
				unsetSglInstOutra();
			} else {
				setSglInstOutra((String) value);
			}
			break;

		case DSC_ABREV_INST_OUTRA:
			if (value == null) {
				unsetDscAbrevInstOutra();
			} else {
				setDscAbrevInstOutra((String) value);
			}
			break;

		case DSC_UF_INST_OUTRA:
			if (value == null) {
				unsetDscUfInstOutra();
			} else {
				setDscUfInstOutra((String) value);
			}
			break;

		case DSC_REGIAO_INST_OUTRA:
			if (value == null) {
				unsetDscRegiaoInstOutra();
			} else {
				setDscRegiaoInstOutra((String) value);
			}
			break;

		}
	}

	public Object getFieldValue(_Fields field) {
		switch (field) {
		case NRO_ID_CNPQ:
			return getNroIdCnpq();

		case SEQ_ORDEM_NIVEL_FORM:
			return Integer.valueOf(getSeqOrdemNivelForm());

		case COD_NIVEL_FORM:
			return getCodNivelForm();

		case DSC_NIVEL_FORM:
			return getDscNivelForm();

		case ANO_INI_FORM:
			return getAnoIniForm();

		case ANO_OBTEN_FORM:
			return getAnoObtenForm();

		case ANO_TER_FORM:
			return getAnoTerForm();

		case TXT_TIT_FORM:
			return getTxtTitForm();

		case STA_FORMACAO_CONCLUIDA:
			return getStaFormacaoConcluida();

		case COD_CURSO:
			return getCodCurso();

		case DSC_CURSO:
			return getDscCurso();

		case COD_AREA_CONHEC_CURSO:
			return getCodAreaConhecCurso();

		case NME_AREA_CONHEC_CURSO:
			return getNmeAreaConhecCurso();

		case COD_CURSO_OUTRO:
			return getCodCursoOutro();

		case DSC_CURSO_OUTRO:
			return getDscCursoOutro();

		case COD_AREA_CONHEC_CURSO_OUTRO:
			return getCodAreaConhecCursoOutro();

		case NME_AREA_CONHEC_CURSO_OUTRO:
			return getNmeAreaConhecCursoOutro();

		case COD_AREA_CONHEC_OUTRA_CURSO_OUTRO:
			return getCodAreaConhecOutraCursoOutro();

		case NME_AREA_CONHEC_OUTRA_CURSO_OUTRO:
			return getNmeAreaConhecOutraCursoOutro();

		case COD_INST:
			return getCodInst();

		case NME_INST:
			return getNmeInst();

		case SGL_INST:
			return getSglInst();

		case DSC_ABREV_INST:
			return getDscAbrevInst();

		case DSC_UF_INST:
			return getDscUfInst();

		case DSC_REGIAO_INST:
			return getDscRegiaoInst();

		case COD_SETOR_ECON_INST:
			return getCodSetorEconInst();

		case DSC_SETOR_ECON_INST:
			return getDscSetorEconInst();

		case COD_INST_OUTRA:
			return getCodInstOutra();

		case NME_INST_OUTRA:
			return getNmeInstOutra();

		case SGL_INST_OUTRA:
			return getSglInstOutra();

		case DSC_ABREV_INST_OUTRA:
			return getDscAbrevInstOutra();

		case DSC_UF_INST_OUTRA:
			return getDscUfInstOutra();

		case DSC_REGIAO_INST_OUTRA:
			return getDscRegiaoInstOutra();

		}
		throw new IllegalStateException();
	}

	/** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
	public boolean isSet(_Fields field) {
		if (field == null) {
			throw new IllegalArgumentException();
		}

		switch (field) {
		case NRO_ID_CNPQ:
			return isSetNroIdCnpq();
		case SEQ_ORDEM_NIVEL_FORM:
			return isSetSeqOrdemNivelForm();
		case COD_NIVEL_FORM:
			return isSetCodNivelForm();
		case DSC_NIVEL_FORM:
			return isSetDscNivelForm();
		case ANO_INI_FORM:
			return isSetAnoIniForm();
		case ANO_OBTEN_FORM:
			return isSetAnoObtenForm();
		case ANO_TER_FORM:
			return isSetAnoTerForm();
		case TXT_TIT_FORM:
			return isSetTxtTitForm();
		case STA_FORMACAO_CONCLUIDA:
			return isSetStaFormacaoConcluida();
		case COD_CURSO:
			return isSetCodCurso();
		case DSC_CURSO:
			return isSetDscCurso();
		case COD_AREA_CONHEC_CURSO:
			return isSetCodAreaConhecCurso();
		case NME_AREA_CONHEC_CURSO:
			return isSetNmeAreaConhecCurso();
		case COD_CURSO_OUTRO:
			return isSetCodCursoOutro();
		case DSC_CURSO_OUTRO:
			return isSetDscCursoOutro();
		case COD_AREA_CONHEC_CURSO_OUTRO:
			return isSetCodAreaConhecCursoOutro();
		case NME_AREA_CONHEC_CURSO_OUTRO:
			return isSetNmeAreaConhecCursoOutro();
		case COD_AREA_CONHEC_OUTRA_CURSO_OUTRO:
			return isSetCodAreaConhecOutraCursoOutro();
		case NME_AREA_CONHEC_OUTRA_CURSO_OUTRO:
			return isSetNmeAreaConhecOutraCursoOutro();
		case COD_INST:
			return isSetCodInst();
		case NME_INST:
			return isSetNmeInst();
		case SGL_INST:
			return isSetSglInst();
		case DSC_ABREV_INST:
			return isSetDscAbrevInst();
		case DSC_UF_INST:
			return isSetDscUfInst();
		case DSC_REGIAO_INST:
			return isSetDscRegiaoInst();
		case COD_SETOR_ECON_INST:
			return isSetCodSetorEconInst();
		case DSC_SETOR_ECON_INST:
			return isSetDscSetorEconInst();
		case COD_INST_OUTRA:
			return isSetCodInstOutra();
		case NME_INST_OUTRA:
			return isSetNmeInstOutra();
		case SGL_INST_OUTRA:
			return isSetSglInstOutra();
		case DSC_ABREV_INST_OUTRA:
			return isSetDscAbrevInstOutra();
		case DSC_UF_INST_OUTRA:
			return isSetDscUfInstOutra();
		case DSC_REGIAO_INST_OUTRA:
			return isSetDscRegiaoInstOutra();
		}
		throw new IllegalStateException();
	}

	@Override
	public boolean equals(Object that) {
		if (that == null)
			return false;
		if (that instanceof Formacao)
			return this.equals((Formacao) that);
		return false;
	}

	public boolean equals(Formacao that) {
		if (that == null)
			return false;

		boolean this_present_nroIdCnpq = true && this.isSetNroIdCnpq();
		boolean that_present_nroIdCnpq = true && that.isSetNroIdCnpq();
		if (this_present_nroIdCnpq || that_present_nroIdCnpq) {
			if (!(this_present_nroIdCnpq && that_present_nroIdCnpq))
				return false;
			if (!this.nroIdCnpq.equals(that.nroIdCnpq))
				return false;
		}

		boolean this_present_seqOrdemNivelForm = true;
		boolean that_present_seqOrdemNivelForm = true;
		if (this_present_seqOrdemNivelForm || that_present_seqOrdemNivelForm) {
			if (!(this_present_seqOrdemNivelForm && that_present_seqOrdemNivelForm))
				return false;
			if (this.seqOrdemNivelForm != that.seqOrdemNivelForm)
				return false;
		}

		boolean this_present_codNivelForm = true && this.isSetCodNivelForm();
		boolean that_present_codNivelForm = true && that.isSetCodNivelForm();
		if (this_present_codNivelForm || that_present_codNivelForm) {
			if (!(this_present_codNivelForm && that_present_codNivelForm))
				return false;
			if (!this.codNivelForm.equals(that.codNivelForm))
				return false;
		}

		boolean this_present_dscNivelForm = true && this.isSetDscNivelForm();
		boolean that_present_dscNivelForm = true && that.isSetDscNivelForm();
		if (this_present_dscNivelForm || that_present_dscNivelForm) {
			if (!(this_present_dscNivelForm && that_present_dscNivelForm))
				return false;
			if (!this.dscNivelForm.equals(that.dscNivelForm))
				return false;
		}

		boolean this_present_anoIniForm = true && this.isSetAnoIniForm();
		boolean that_present_anoIniForm = true && that.isSetAnoIniForm();
		if (this_present_anoIniForm || that_present_anoIniForm) {
			if (!(this_present_anoIniForm && that_present_anoIniForm))
				return false;
			if (!this.anoIniForm.equals(that.anoIniForm))
				return false;
		}

		boolean this_present_anoObtenForm = true && this.isSetAnoObtenForm();
		boolean that_present_anoObtenForm = true && that.isSetAnoObtenForm();
		if (this_present_anoObtenForm || that_present_anoObtenForm) {
			if (!(this_present_anoObtenForm && that_present_anoObtenForm))
				return false;
			if (!this.anoObtenForm.equals(that.anoObtenForm))
				return false;
		}

		boolean this_present_anoTerForm = true && this.isSetAnoTerForm();
		boolean that_present_anoTerForm = true && that.isSetAnoTerForm();
		if (this_present_anoTerForm || that_present_anoTerForm) {
			if (!(this_present_anoTerForm && that_present_anoTerForm))
				return false;
			if (!this.anoTerForm.equals(that.anoTerForm))
				return false;
		}

		boolean this_present_txtTitForm = true && this.isSetTxtTitForm();
		boolean that_present_txtTitForm = true && that.isSetTxtTitForm();
		if (this_present_txtTitForm || that_present_txtTitForm) {
			if (!(this_present_txtTitForm && that_present_txtTitForm))
				return false;
			if (!this.txtTitForm.equals(that.txtTitForm))
				return false;
		}

		boolean this_present_staFormacaoConcluida = true && this.isSetStaFormacaoConcluida();
		boolean that_present_staFormacaoConcluida = true && that.isSetStaFormacaoConcluida();
		if (this_present_staFormacaoConcluida || that_present_staFormacaoConcluida) {
			if (!(this_present_staFormacaoConcluida && that_present_staFormacaoConcluida))
				return false;
			if (!this.staFormacaoConcluida.equals(that.staFormacaoConcluida))
				return false;
		}

		boolean this_present_codCurso = true && this.isSetCodCurso();
		boolean that_present_codCurso = true && that.isSetCodCurso();
		if (this_present_codCurso || that_present_codCurso) {
			if (!(this_present_codCurso && that_present_codCurso))
				return false;
			if (!this.codCurso.equals(that.codCurso))
				return false;
		}

		boolean this_present_dscCurso = true && this.isSetDscCurso();
		boolean that_present_dscCurso = true && that.isSetDscCurso();
		if (this_present_dscCurso || that_present_dscCurso) {
			if (!(this_present_dscCurso && that_present_dscCurso))
				return false;
			if (!this.dscCurso.equals(that.dscCurso))
				return false;
		}

		boolean this_present_codAreaConhecCurso = true && this.isSetCodAreaConhecCurso();
		boolean that_present_codAreaConhecCurso = true && that.isSetCodAreaConhecCurso();
		if (this_present_codAreaConhecCurso || that_present_codAreaConhecCurso) {
			if (!(this_present_codAreaConhecCurso && that_present_codAreaConhecCurso))
				return false;
			if (!this.codAreaConhecCurso.equals(that.codAreaConhecCurso))
				return false;
		}

		boolean this_present_nmeAreaConhecCurso = true && this.isSetNmeAreaConhecCurso();
		boolean that_present_nmeAreaConhecCurso = true && that.isSetNmeAreaConhecCurso();
		if (this_present_nmeAreaConhecCurso || that_present_nmeAreaConhecCurso) {
			if (!(this_present_nmeAreaConhecCurso && that_present_nmeAreaConhecCurso))
				return false;
			if (!this.nmeAreaConhecCurso.equals(that.nmeAreaConhecCurso))
				return false;
		}

		boolean this_present_codCursoOutro = true && this.isSetCodCursoOutro();
		boolean that_present_codCursoOutro = true && that.isSetCodCursoOutro();
		if (this_present_codCursoOutro || that_present_codCursoOutro) {
			if (!(this_present_codCursoOutro && that_present_codCursoOutro))
				return false;
			if (!this.codCursoOutro.equals(that.codCursoOutro))
				return false;
		}

		boolean this_present_dscCursoOutro = true && this.isSetDscCursoOutro();
		boolean that_present_dscCursoOutro = true && that.isSetDscCursoOutro();
		if (this_present_dscCursoOutro || that_present_dscCursoOutro) {
			if (!(this_present_dscCursoOutro && that_present_dscCursoOutro))
				return false;
			if (!this.dscCursoOutro.equals(that.dscCursoOutro))
				return false;
		}

		boolean this_present_codAreaConhecCursoOutro = true && this.isSetCodAreaConhecCursoOutro();
		boolean that_present_codAreaConhecCursoOutro = true && that.isSetCodAreaConhecCursoOutro();
		if (this_present_codAreaConhecCursoOutro || that_present_codAreaConhecCursoOutro) {
			if (!(this_present_codAreaConhecCursoOutro && that_present_codAreaConhecCursoOutro))
				return false;
			if (!this.codAreaConhecCursoOutro.equals(that.codAreaConhecCursoOutro))
				return false;
		}

		boolean this_present_nmeAreaConhecCursoOutro = true && this.isSetNmeAreaConhecCursoOutro();
		boolean that_present_nmeAreaConhecCursoOutro = true && that.isSetNmeAreaConhecCursoOutro();
		if (this_present_nmeAreaConhecCursoOutro || that_present_nmeAreaConhecCursoOutro) {
			if (!(this_present_nmeAreaConhecCursoOutro && that_present_nmeAreaConhecCursoOutro))
				return false;
			if (!this.nmeAreaConhecCursoOutro.equals(that.nmeAreaConhecCursoOutro))
				return false;
		}

		boolean this_present_codAreaConhecOutraCursoOutro = true && this.isSetCodAreaConhecOutraCursoOutro();
		boolean that_present_codAreaConhecOutraCursoOutro = true && that.isSetCodAreaConhecOutraCursoOutro();
		if (this_present_codAreaConhecOutraCursoOutro || that_present_codAreaConhecOutraCursoOutro) {
			if (!(this_present_codAreaConhecOutraCursoOutro && that_present_codAreaConhecOutraCursoOutro))
				return false;
			if (!this.codAreaConhecOutraCursoOutro.equals(that.codAreaConhecOutraCursoOutro))
				return false;
		}

		boolean this_present_nmeAreaConhecOutraCursoOutro = true && this.isSetNmeAreaConhecOutraCursoOutro();
		boolean that_present_nmeAreaConhecOutraCursoOutro = true && that.isSetNmeAreaConhecOutraCursoOutro();
		if (this_present_nmeAreaConhecOutraCursoOutro || that_present_nmeAreaConhecOutraCursoOutro) {
			if (!(this_present_nmeAreaConhecOutraCursoOutro && that_present_nmeAreaConhecOutraCursoOutro))
				return false;
			if (!this.nmeAreaConhecOutraCursoOutro.equals(that.nmeAreaConhecOutraCursoOutro))
				return false;
		}

		boolean this_present_codInst = true && this.isSetCodInst();
		boolean that_present_codInst = true && that.isSetCodInst();
		if (this_present_codInst || that_present_codInst) {
			if (!(this_present_codInst && that_present_codInst))
				return false;
			if (!this.codInst.equals(that.codInst))
				return false;
		}

		boolean this_present_nmeInst = true && this.isSetNmeInst();
		boolean that_present_nmeInst = true && that.isSetNmeInst();
		if (this_present_nmeInst || that_present_nmeInst) {
			if (!(this_present_nmeInst && that_present_nmeInst))
				return false;
			if (!this.nmeInst.equals(that.nmeInst))
				return false;
		}

		boolean this_present_sglInst = true && this.isSetSglInst();
		boolean that_present_sglInst = true && that.isSetSglInst();
		if (this_present_sglInst || that_present_sglInst) {
			if (!(this_present_sglInst && that_present_sglInst))
				return false;
			if (!this.sglInst.equals(that.sglInst))
				return false;
		}

		boolean this_present_dscAbrevInst = true && this.isSetDscAbrevInst();
		boolean that_present_dscAbrevInst = true && that.isSetDscAbrevInst();
		if (this_present_dscAbrevInst || that_present_dscAbrevInst) {
			if (!(this_present_dscAbrevInst && that_present_dscAbrevInst))
				return false;
			if (!this.dscAbrevInst.equals(that.dscAbrevInst))
				return false;
		}

		boolean this_present_dscUfInst = true && this.isSetDscUfInst();
		boolean that_present_dscUfInst = true && that.isSetDscUfInst();
		if (this_present_dscUfInst || that_present_dscUfInst) {
			if (!(this_present_dscUfInst && that_present_dscUfInst))
				return false;
			if (!this.dscUfInst.equals(that.dscUfInst))
				return false;
		}

		boolean this_present_dscRegiaoInst = true && this.isSetDscRegiaoInst();
		boolean that_present_dscRegiaoInst = true && that.isSetDscRegiaoInst();
		if (this_present_dscRegiaoInst || that_present_dscRegiaoInst) {
			if (!(this_present_dscRegiaoInst && that_present_dscRegiaoInst))
				return false;
			if (!this.dscRegiaoInst.equals(that.dscRegiaoInst))
				return false;
		}

		boolean this_present_codSetorEconInst = true && this.isSetCodSetorEconInst();
		boolean that_present_codSetorEconInst = true && that.isSetCodSetorEconInst();
		if (this_present_codSetorEconInst || that_present_codSetorEconInst) {
			if (!(this_present_codSetorEconInst && that_present_codSetorEconInst))
				return false;
			if (!this.codSetorEconInst.equals(that.codSetorEconInst))
				return false;
		}

		boolean this_present_dscSetorEconInst = true && this.isSetDscSetorEconInst();
		boolean that_present_dscSetorEconInst = true && that.isSetDscSetorEconInst();
		if (this_present_dscSetorEconInst || that_present_dscSetorEconInst) {
			if (!(this_present_dscSetorEconInst && that_present_dscSetorEconInst))
				return false;
			if (!this.dscSetorEconInst.equals(that.dscSetorEconInst))
				return false;
		}

		boolean this_present_codInstOutra = true && this.isSetCodInstOutra();
		boolean that_present_codInstOutra = true && that.isSetCodInstOutra();
		if (this_present_codInstOutra || that_present_codInstOutra) {
			if (!(this_present_codInstOutra && that_present_codInstOutra))
				return false;
			if (!this.codInstOutra.equals(that.codInstOutra))
				return false;
		}

		boolean this_present_nmeInstOutra = true && this.isSetNmeInstOutra();
		boolean that_present_nmeInstOutra = true && that.isSetNmeInstOutra();
		if (this_present_nmeInstOutra || that_present_nmeInstOutra) {
			if (!(this_present_nmeInstOutra && that_present_nmeInstOutra))
				return false;
			if (!this.nmeInstOutra.equals(that.nmeInstOutra))
				return false;
		}

		boolean this_present_sglInstOutra = true && this.isSetSglInstOutra();
		boolean that_present_sglInstOutra = true && that.isSetSglInstOutra();
		if (this_present_sglInstOutra || that_present_sglInstOutra) {
			if (!(this_present_sglInstOutra && that_present_sglInstOutra))
				return false;
			if (!this.sglInstOutra.equals(that.sglInstOutra))
				return false;
		}

		boolean this_present_dscAbrevInstOutra = true && this.isSetDscAbrevInstOutra();
		boolean that_present_dscAbrevInstOutra = true && that.isSetDscAbrevInstOutra();
		if (this_present_dscAbrevInstOutra || that_present_dscAbrevInstOutra) {
			if (!(this_present_dscAbrevInstOutra && that_present_dscAbrevInstOutra))
				return false;
			if (!this.dscAbrevInstOutra.equals(that.dscAbrevInstOutra))
				return false;
		}

		boolean this_present_dscUfInstOutra = true && this.isSetDscUfInstOutra();
		boolean that_present_dscUfInstOutra = true && that.isSetDscUfInstOutra();
		if (this_present_dscUfInstOutra || that_present_dscUfInstOutra) {
			if (!(this_present_dscUfInstOutra && that_present_dscUfInstOutra))
				return false;
			if (!this.dscUfInstOutra.equals(that.dscUfInstOutra))
				return false;
		}

		boolean this_present_dscRegiaoInstOutra = true && this.isSetDscRegiaoInstOutra();
		boolean that_present_dscRegiaoInstOutra = true && that.isSetDscRegiaoInstOutra();
		if (this_present_dscRegiaoInstOutra || that_present_dscRegiaoInstOutra) {
			if (!(this_present_dscRegiaoInstOutra && that_present_dscRegiaoInstOutra))
				return false;
			if (!this.dscRegiaoInstOutra.equals(that.dscRegiaoInstOutra))
				return false;
		}

		return true;
	}

	@Override
	public int hashCode() {
		List<Object> list = new ArrayList<Object>();

		boolean present_nroIdCnpq = true && (isSetNroIdCnpq());
		list.add(present_nroIdCnpq);
		if (present_nroIdCnpq)
			list.add(nroIdCnpq);

		boolean present_seqOrdemNivelForm = true;
		list.add(present_seqOrdemNivelForm);
		if (present_seqOrdemNivelForm)
			list.add(seqOrdemNivelForm);

		boolean present_codNivelForm = true && (isSetCodNivelForm());
		list.add(present_codNivelForm);
		if (present_codNivelForm)
			list.add(codNivelForm);

		boolean present_dscNivelForm = true && (isSetDscNivelForm());
		list.add(present_dscNivelForm);
		if (present_dscNivelForm)
			list.add(dscNivelForm);

		boolean present_anoIniForm = true && (isSetAnoIniForm());
		list.add(present_anoIniForm);
		if (present_anoIniForm)
			list.add(anoIniForm);

		boolean present_anoObtenForm = true && (isSetAnoObtenForm());
		list.add(present_anoObtenForm);
		if (present_anoObtenForm)
			list.add(anoObtenForm);

		boolean present_anoTerForm = true && (isSetAnoTerForm());
		list.add(present_anoTerForm);
		if (present_anoTerForm)
			list.add(anoTerForm);

		boolean present_txtTitForm = true && (isSetTxtTitForm());
		list.add(present_txtTitForm);
		if (present_txtTitForm)
			list.add(txtTitForm);

		boolean present_staFormacaoConcluida = true && (isSetStaFormacaoConcluida());
		list.add(present_staFormacaoConcluida);
		if (present_staFormacaoConcluida)
			list.add(staFormacaoConcluida);

		boolean present_codCurso = true && (isSetCodCurso());
		list.add(present_codCurso);
		if (present_codCurso)
			list.add(codCurso);

		boolean present_dscCurso = true && (isSetDscCurso());
		list.add(present_dscCurso);
		if (present_dscCurso)
			list.add(dscCurso);

		boolean present_codAreaConhecCurso = true && (isSetCodAreaConhecCurso());
		list.add(present_codAreaConhecCurso);
		if (present_codAreaConhecCurso)
			list.add(codAreaConhecCurso);

		boolean present_nmeAreaConhecCurso = true && (isSetNmeAreaConhecCurso());
		list.add(present_nmeAreaConhecCurso);
		if (present_nmeAreaConhecCurso)
			list.add(nmeAreaConhecCurso);

		boolean present_codCursoOutro = true && (isSetCodCursoOutro());
		list.add(present_codCursoOutro);
		if (present_codCursoOutro)
			list.add(codCursoOutro);

		boolean present_dscCursoOutro = true && (isSetDscCursoOutro());
		list.add(present_dscCursoOutro);
		if (present_dscCursoOutro)
			list.add(dscCursoOutro);

		boolean present_codAreaConhecCursoOutro = true && (isSetCodAreaConhecCursoOutro());
		list.add(present_codAreaConhecCursoOutro);
		if (present_codAreaConhecCursoOutro)
			list.add(codAreaConhecCursoOutro);

		boolean present_nmeAreaConhecCursoOutro = true && (isSetNmeAreaConhecCursoOutro());
		list.add(present_nmeAreaConhecCursoOutro);
		if (present_nmeAreaConhecCursoOutro)
			list.add(nmeAreaConhecCursoOutro);

		boolean present_codAreaConhecOutraCursoOutro = true && (isSetCodAreaConhecOutraCursoOutro());
		list.add(present_codAreaConhecOutraCursoOutro);
		if (present_codAreaConhecOutraCursoOutro)
			list.add(codAreaConhecOutraCursoOutro);

		boolean present_nmeAreaConhecOutraCursoOutro = true && (isSetNmeAreaConhecOutraCursoOutro());
		list.add(present_nmeAreaConhecOutraCursoOutro);
		if (present_nmeAreaConhecOutraCursoOutro)
			list.add(nmeAreaConhecOutraCursoOutro);

		boolean present_codInst = true && (isSetCodInst());
		list.add(present_codInst);
		if (present_codInst)
			list.add(codInst);

		boolean present_nmeInst = true && (isSetNmeInst());
		list.add(present_nmeInst);
		if (present_nmeInst)
			list.add(nmeInst);

		boolean present_sglInst = true && (isSetSglInst());
		list.add(present_sglInst);
		if (present_sglInst)
			list.add(sglInst);

		boolean present_dscAbrevInst = true && (isSetDscAbrevInst());
		list.add(present_dscAbrevInst);
		if (present_dscAbrevInst)
			list.add(dscAbrevInst);

		boolean present_dscUfInst = true && (isSetDscUfInst());
		list.add(present_dscUfInst);
		if (present_dscUfInst)
			list.add(dscUfInst);

		boolean present_dscRegiaoInst = true && (isSetDscRegiaoInst());
		list.add(present_dscRegiaoInst);
		if (present_dscRegiaoInst)
			list.add(dscRegiaoInst);

		boolean present_codSetorEconInst = true && (isSetCodSetorEconInst());
		list.add(present_codSetorEconInst);
		if (present_codSetorEconInst)
			list.add(codSetorEconInst);

		boolean present_dscSetorEconInst = true && (isSetDscSetorEconInst());
		list.add(present_dscSetorEconInst);
		if (present_dscSetorEconInst)
			list.add(dscSetorEconInst);

		boolean present_codInstOutra = true && (isSetCodInstOutra());
		list.add(present_codInstOutra);
		if (present_codInstOutra)
			list.add(codInstOutra);

		boolean present_nmeInstOutra = true && (isSetNmeInstOutra());
		list.add(present_nmeInstOutra);
		if (present_nmeInstOutra)
			list.add(nmeInstOutra);

		boolean present_sglInstOutra = true && (isSetSglInstOutra());
		list.add(present_sglInstOutra);
		if (present_sglInstOutra)
			list.add(sglInstOutra);

		boolean present_dscAbrevInstOutra = true && (isSetDscAbrevInstOutra());
		list.add(present_dscAbrevInstOutra);
		if (present_dscAbrevInstOutra)
			list.add(dscAbrevInstOutra);

		boolean present_dscUfInstOutra = true && (isSetDscUfInstOutra());
		list.add(present_dscUfInstOutra);
		if (present_dscUfInstOutra)
			list.add(dscUfInstOutra);

		boolean present_dscRegiaoInstOutra = true && (isSetDscRegiaoInstOutra());
		list.add(present_dscRegiaoInstOutra);
		if (present_dscRegiaoInstOutra)
			list.add(dscRegiaoInstOutra);

		return list.hashCode();
	}

	@Override
	public int compareTo(Formacao other) {
		if (!getClass().equals(other.getClass())) {
			return getClass().getName().compareTo(other.getClass().getName());
		}

		int lastComparison = 0;

		lastComparison = Boolean.valueOf(isSetNroIdCnpq()).compareTo(other.isSetNroIdCnpq());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetNroIdCnpq()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nroIdCnpq, other.nroIdCnpq);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetSeqOrdemNivelForm()).compareTo(other.isSetSeqOrdemNivelForm());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetSeqOrdemNivelForm()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.seqOrdemNivelForm, other.seqOrdemNivelForm);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetCodNivelForm()).compareTo(other.isSetCodNivelForm());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetCodNivelForm()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.codNivelForm, other.codNivelForm);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetDscNivelForm()).compareTo(other.isSetDscNivelForm());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetDscNivelForm()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dscNivelForm, other.dscNivelForm);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetAnoIniForm()).compareTo(other.isSetAnoIniForm());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetAnoIniForm()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.anoIniForm, other.anoIniForm);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetAnoObtenForm()).compareTo(other.isSetAnoObtenForm());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetAnoObtenForm()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.anoObtenForm, other.anoObtenForm);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetAnoTerForm()).compareTo(other.isSetAnoTerForm());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetAnoTerForm()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.anoTerForm, other.anoTerForm);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetTxtTitForm()).compareTo(other.isSetTxtTitForm());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetTxtTitForm()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.txtTitForm, other.txtTitForm);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetStaFormacaoConcluida()).compareTo(other.isSetStaFormacaoConcluida());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetStaFormacaoConcluida()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.staFormacaoConcluida, other.staFormacaoConcluida);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetCodCurso()).compareTo(other.isSetCodCurso());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetCodCurso()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.codCurso, other.codCurso);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetDscCurso()).compareTo(other.isSetDscCurso());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetDscCurso()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dscCurso, other.dscCurso);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetCodAreaConhecCurso()).compareTo(other.isSetCodAreaConhecCurso());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetCodAreaConhecCurso()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.codAreaConhecCurso, other.codAreaConhecCurso);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetNmeAreaConhecCurso()).compareTo(other.isSetNmeAreaConhecCurso());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetNmeAreaConhecCurso()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nmeAreaConhecCurso, other.nmeAreaConhecCurso);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetCodCursoOutro()).compareTo(other.isSetCodCursoOutro());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetCodCursoOutro()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.codCursoOutro, other.codCursoOutro);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetDscCursoOutro()).compareTo(other.isSetDscCursoOutro());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetDscCursoOutro()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dscCursoOutro, other.dscCursoOutro);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetCodAreaConhecCursoOutro()).compareTo(other.isSetCodAreaConhecCursoOutro());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetCodAreaConhecCursoOutro()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.codAreaConhecCursoOutro, other.codAreaConhecCursoOutro);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetNmeAreaConhecCursoOutro()).compareTo(other.isSetNmeAreaConhecCursoOutro());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetNmeAreaConhecCursoOutro()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nmeAreaConhecCursoOutro, other.nmeAreaConhecCursoOutro);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetCodAreaConhecOutraCursoOutro()).compareTo(other.isSetCodAreaConhecOutraCursoOutro());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetCodAreaConhecOutraCursoOutro()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.codAreaConhecOutraCursoOutro, other.codAreaConhecOutraCursoOutro);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetNmeAreaConhecOutraCursoOutro()).compareTo(other.isSetNmeAreaConhecOutraCursoOutro());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetNmeAreaConhecOutraCursoOutro()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nmeAreaConhecOutraCursoOutro, other.nmeAreaConhecOutraCursoOutro);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetCodInst()).compareTo(other.isSetCodInst());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetCodInst()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.codInst, other.codInst);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetNmeInst()).compareTo(other.isSetNmeInst());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetNmeInst()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nmeInst, other.nmeInst);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetSglInst()).compareTo(other.isSetSglInst());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetSglInst()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sglInst, other.sglInst);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetDscAbrevInst()).compareTo(other.isSetDscAbrevInst());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetDscAbrevInst()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dscAbrevInst, other.dscAbrevInst);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetDscUfInst()).compareTo(other.isSetDscUfInst());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetDscUfInst()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dscUfInst, other.dscUfInst);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetDscRegiaoInst()).compareTo(other.isSetDscRegiaoInst());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetDscRegiaoInst()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dscRegiaoInst, other.dscRegiaoInst);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetCodSetorEconInst()).compareTo(other.isSetCodSetorEconInst());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetCodSetorEconInst()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.codSetorEconInst, other.codSetorEconInst);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetDscSetorEconInst()).compareTo(other.isSetDscSetorEconInst());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetDscSetorEconInst()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dscSetorEconInst, other.dscSetorEconInst);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetCodInstOutra()).compareTo(other.isSetCodInstOutra());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetCodInstOutra()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.codInstOutra, other.codInstOutra);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetNmeInstOutra()).compareTo(other.isSetNmeInstOutra());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetNmeInstOutra()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nmeInstOutra, other.nmeInstOutra);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetSglInstOutra()).compareTo(other.isSetSglInstOutra());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetSglInstOutra()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sglInstOutra, other.sglInstOutra);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetDscAbrevInstOutra()).compareTo(other.isSetDscAbrevInstOutra());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetDscAbrevInstOutra()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dscAbrevInstOutra, other.dscAbrevInstOutra);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetDscUfInstOutra()).compareTo(other.isSetDscUfInstOutra());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetDscUfInstOutra()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dscUfInstOutra, other.dscUfInstOutra);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetDscRegiaoInstOutra()).compareTo(other.isSetDscRegiaoInstOutra());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetDscRegiaoInstOutra()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dscRegiaoInstOutra, other.dscRegiaoInstOutra);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		return 0;
	}

	public _Fields fieldForId(int fieldId) {
		return _Fields.findByThriftId(fieldId);
	}

	public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
		schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
	}

	public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
		schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder("Formacao(");
		boolean first = true;

		sb.append("nroIdCnpq:");
		if (this.nroIdCnpq == null) {
			sb.append("null");
		} else {
			sb.append(this.nroIdCnpq);
		}
		first = false;
		if (!first)
			sb.append(", ");
		sb.append("seqOrdemNivelForm:");
		sb.append(this.seqOrdemNivelForm);
		first = false;
		if (!first)
			sb.append(", ");
		sb.append("codNivelForm:");
		if (this.codNivelForm == null) {
			sb.append("null");
		} else {
			sb.append(this.codNivelForm);
		}
		first = false;
		if (isSetDscNivelForm()) {
			if (!first)
				sb.append(", ");
			sb.append("dscNivelForm:");
			if (this.dscNivelForm == null) {
				sb.append("null");
			} else {
				sb.append(this.dscNivelForm);
			}
			first = false;
		}
		if (isSetAnoIniForm()) {
			if (!first)
				sb.append(", ");
			sb.append("anoIniForm:");
			if (this.anoIniForm == null) {
				sb.append("null");
			} else {
				sb.append(this.anoIniForm);
			}
			first = false;
		}
		if (isSetAnoObtenForm()) {
			if (!first)
				sb.append(", ");
			sb.append("anoObtenForm:");
			if (this.anoObtenForm == null) {
				sb.append("null");
			} else {
				sb.append(this.anoObtenForm);
			}
			first = false;
		}
		if (isSetAnoTerForm()) {
			if (!first)
				sb.append(", ");
			sb.append("anoTerForm:");
			if (this.anoTerForm == null) {
				sb.append("null");
			} else {
				sb.append(this.anoTerForm);
			}
			first = false;
		}
		if (isSetTxtTitForm()) {
			if (!first)
				sb.append(", ");
			sb.append("txtTitForm:");
			if (this.txtTitForm == null) {
				sb.append("null");
			} else {
				sb.append(this.txtTitForm);
			}
			first = false;
		}
		if (isSetStaFormacaoConcluida()) {
			if (!first)
				sb.append(", ");
			sb.append("staFormacaoConcluida:");
			if (this.staFormacaoConcluida == null) {
				sb.append("null");
			} else {
				sb.append(this.staFormacaoConcluida);
			}
			first = false;
		}
		if (isSetCodCurso()) {
			if (!first)
				sb.append(", ");
			sb.append("codCurso:");
			if (this.codCurso == null) {
				sb.append("null");
			} else {
				sb.append(this.codCurso);
			}
			first = false;
		}
		if (isSetDscCurso()) {
			if (!first)
				sb.append(", ");
			sb.append("dscCurso:");
			if (this.dscCurso == null) {
				sb.append("null");
			} else {
				sb.append(this.dscCurso);
			}
			first = false;
		}
		if (isSetCodAreaConhecCurso()) {
			if (!first)
				sb.append(", ");
			sb.append("codAreaConhecCurso:");
			if (this.codAreaConhecCurso == null) {
				sb.append("null");
			} else {
				sb.append(this.codAreaConhecCurso);
			}
			first = false;
		}
		if (isSetNmeAreaConhecCurso()) {
			if (!first)
				sb.append(", ");
			sb.append("nmeAreaConhecCurso:");
			if (this.nmeAreaConhecCurso == null) {
				sb.append("null");
			} else {
				sb.append(this.nmeAreaConhecCurso);
			}
			first = false;
		}
		if (isSetCodCursoOutro()) {
			if (!first)
				sb.append(", ");
			sb.append("codCursoOutro:");
			if (this.codCursoOutro == null) {
				sb.append("null");
			} else {
				sb.append(this.codCursoOutro);
			}
			first = false;
		}
		if (isSetDscCursoOutro()) {
			if (!first)
				sb.append(", ");
			sb.append("dscCursoOutro:");
			if (this.dscCursoOutro == null) {
				sb.append("null");
			} else {
				sb.append(this.dscCursoOutro);
			}
			first = false;
		}
		if (isSetCodAreaConhecCursoOutro()) {
			if (!first)
				sb.append(", ");
			sb.append("codAreaConhecCursoOutro:");
			if (this.codAreaConhecCursoOutro == null) {
				sb.append("null");
			} else {
				sb.append(this.codAreaConhecCursoOutro);
			}
			first = false;
		}
		if (isSetNmeAreaConhecCursoOutro()) {
			if (!first)
				sb.append(", ");
			sb.append("nmeAreaConhecCursoOutro:");
			if (this.nmeAreaConhecCursoOutro == null) {
				sb.append("null");
			} else {
				sb.append(this.nmeAreaConhecCursoOutro);
			}
			first = false;
		}
		if (isSetCodAreaConhecOutraCursoOutro()) {
			if (!first)
				sb.append(", ");
			sb.append("codAreaConhecOutraCursoOutro:");
			if (this.codAreaConhecOutraCursoOutro == null) {
				sb.append("null");
			} else {
				sb.append(this.codAreaConhecOutraCursoOutro);
			}
			first = false;
		}
		if (isSetNmeAreaConhecOutraCursoOutro()) {
			if (!first)
				sb.append(", ");
			sb.append("nmeAreaConhecOutraCursoOutro:");
			if (this.nmeAreaConhecOutraCursoOutro == null) {
				sb.append("null");
			} else {
				sb.append(this.nmeAreaConhecOutraCursoOutro);
			}
			first = false;
		}
		if (isSetCodInst()) {
			if (!first)
				sb.append(", ");
			sb.append("codInst:");
			if (this.codInst == null) {
				sb.append("null");
			} else {
				sb.append(this.codInst);
			}
			first = false;
		}
		if (isSetNmeInst()) {
			if (!first)
				sb.append(", ");
			sb.append("nmeInst:");
			if (this.nmeInst == null) {
				sb.append("null");
			} else {
				sb.append(this.nmeInst);
			}
			first = false;
		}
		if (isSetSglInst()) {
			if (!first)
				sb.append(", ");
			sb.append("sglInst:");
			if (this.sglInst == null) {
				sb.append("null");
			} else {
				sb.append(this.sglInst);
			}
			first = false;
		}
		if (isSetDscAbrevInst()) {
			if (!first)
				sb.append(", ");
			sb.append("dscAbrevInst:");
			if (this.dscAbrevInst == null) {
				sb.append("null");
			} else {
				sb.append(this.dscAbrevInst);
			}
			first = false;
		}
		if (isSetDscUfInst()) {
			if (!first)
				sb.append(", ");
			sb.append("dscUfInst:");
			if (this.dscUfInst == null) {
				sb.append("null");
			} else {
				sb.append(this.dscUfInst);
			}
			first = false;
		}
		if (isSetDscRegiaoInst()) {
			if (!first)
				sb.append(", ");
			sb.append("dscRegiaoInst:");
			if (this.dscRegiaoInst == null) {
				sb.append("null");
			} else {
				sb.append(this.dscRegiaoInst);
			}
			first = false;
		}
		if (isSetCodSetorEconInst()) {
			if (!first)
				sb.append(", ");
			sb.append("codSetorEconInst:");
			if (this.codSetorEconInst == null) {
				sb.append("null");
			} else {
				sb.append(this.codSetorEconInst);
			}
			first = false;
		}
		if (isSetDscSetorEconInst()) {
			if (!first)
				sb.append(", ");
			sb.append("dscSetorEconInst:");
			if (this.dscSetorEconInst == null) {
				sb.append("null");
			} else {
				sb.append(this.dscSetorEconInst);
			}
			first = false;
		}
		if (isSetCodInstOutra()) {
			if (!first)
				sb.append(", ");
			sb.append("codInstOutra:");
			if (this.codInstOutra == null) {
				sb.append("null");
			} else {
				sb.append(this.codInstOutra);
			}
			first = false;
		}
		if (isSetNmeInstOutra()) {
			if (!first)
				sb.append(", ");
			sb.append("nmeInstOutra:");
			if (this.nmeInstOutra == null) {
				sb.append("null");
			} else {
				sb.append(this.nmeInstOutra);
			}
			first = false;
		}
		if (isSetSglInstOutra()) {
			if (!first)
				sb.append(", ");
			sb.append("sglInstOutra:");
			if (this.sglInstOutra == null) {
				sb.append("null");
			} else {
				sb.append(this.sglInstOutra);
			}
			first = false;
		}
		if (isSetDscAbrevInstOutra()) {
			if (!first)
				sb.append(", ");
			sb.append("dscAbrevInstOutra:");
			if (this.dscAbrevInstOutra == null) {
				sb.append("null");
			} else {
				sb.append(this.dscAbrevInstOutra);
			}
			first = false;
		}
		if (isSetDscUfInstOutra()) {
			if (!first)
				sb.append(", ");
			sb.append("dscUfInstOutra:");
			if (this.dscUfInstOutra == null) {
				sb.append("null");
			} else {
				sb.append(this.dscUfInstOutra);
			}
			first = false;
		}
		if (isSetDscRegiaoInstOutra()) {
			if (!first)
				sb.append(", ");
			sb.append("dscRegiaoInstOutra:");
			if (this.dscRegiaoInstOutra == null) {
				sb.append("null");
			} else {
				sb.append(this.dscRegiaoInstOutra);
			}
			first = false;
		}
		sb.append(")");
		return sb.toString();
	}

	public void validate() throws org.apache.thrift.TException {
		// check for required fields
		if (!isSetNroIdCnpq()) {
			throw new org.apache.thrift.protocol.TProtocolException("Required field 'nroIdCnpq' is unset! Struct:" + toString());
		}

		if (!isSetSeqOrdemNivelForm()) {
			throw new org.apache.thrift.protocol.TProtocolException("Required field 'seqOrdemNivelForm' is unset! Struct:" + toString());
		}

		if (!isSetCodNivelForm()) {
			throw new org.apache.thrift.protocol.TProtocolException("Required field 'codNivelForm' is unset! Struct:" + toString());
		}

		// check for sub-struct validity
	}

	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
		try {
			write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
		} catch (org.apache.thrift.TException te) {
			throw new java.io.IOException(te);
		}
	}

	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
		try {
			// it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
			__isset_bitfield = 0;
			read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
		} catch (org.apache.thrift.TException te) {
			throw new java.io.IOException(te);
		}
	}

	private static class FormacaoStandardSchemeFactory implements SchemeFactory {
		public FormacaoStandardScheme getScheme() {
			return new FormacaoStandardScheme();
		}
	}

	private static class FormacaoStandardScheme extends StandardScheme<Formacao> {

		public void read(org.apache.thrift.protocol.TProtocol iprot, Formacao struct) throws org.apache.thrift.TException {
			org.apache.thrift.protocol.TField schemeField;
			iprot.readStructBegin();
			while (true) {
				schemeField = iprot.readFieldBegin();
				if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
					break;
				}
				switch (schemeField.id) {
				case 1: // NRO_ID_CNPQ
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.nroIdCnpq = iprot.readString();
						struct.setNroIdCnpqIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 2: // SEQ_ORDEM_NIVEL_FORM
					if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
						struct.seqOrdemNivelForm = iprot.readI32();
						struct.setSeqOrdemNivelFormIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 3: // COD_NIVEL_FORM
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.codNivelForm = iprot.readString();
						struct.setCodNivelFormIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 4: // DSC_NIVEL_FORM
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.dscNivelForm = iprot.readString();
						struct.setDscNivelFormIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 5: // ANO_INI_FORM
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.anoIniForm = iprot.readString();
						struct.setAnoIniFormIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 6: // ANO_OBTEN_FORM
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.anoObtenForm = iprot.readString();
						struct.setAnoObtenFormIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 7: // ANO_TER_FORM
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.anoTerForm = iprot.readString();
						struct.setAnoTerFormIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 8: // TXT_TIT_FORM
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.txtTitForm = iprot.readString();
						struct.setTxtTitFormIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 9: // STA_FORMACAO_CONCLUIDA
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.staFormacaoConcluida = iprot.readString();
						struct.setStaFormacaoConcluidaIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 10: // COD_CURSO
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.codCurso = iprot.readString();
						struct.setCodCursoIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 11: // DSC_CURSO
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.dscCurso = iprot.readString();
						struct.setDscCursoIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 12: // COD_AREA_CONHEC_CURSO
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.codAreaConhecCurso = iprot.readString();
						struct.setCodAreaConhecCursoIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 13: // NME_AREA_CONHEC_CURSO
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.nmeAreaConhecCurso = iprot.readString();
						struct.setNmeAreaConhecCursoIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 14: // COD_CURSO_OUTRO
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.codCursoOutro = iprot.readString();
						struct.setCodCursoOutroIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 15: // DSC_CURSO_OUTRO
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.dscCursoOutro = iprot.readString();
						struct.setDscCursoOutroIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 16: // COD_AREA_CONHEC_CURSO_OUTRO
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.codAreaConhecCursoOutro = iprot.readString();
						struct.setCodAreaConhecCursoOutroIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 17: // NME_AREA_CONHEC_CURSO_OUTRO
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.nmeAreaConhecCursoOutro = iprot.readString();
						struct.setNmeAreaConhecCursoOutroIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 18: // COD_AREA_CONHEC_OUTRA_CURSO_OUTRO
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.codAreaConhecOutraCursoOutro = iprot.readString();
						struct.setCodAreaConhecOutraCursoOutroIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 19: // NME_AREA_CONHEC_OUTRA_CURSO_OUTRO
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.nmeAreaConhecOutraCursoOutro = iprot.readString();
						struct.setNmeAreaConhecOutraCursoOutroIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 20: // COD_INST
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.codInst = iprot.readString();
						struct.setCodInstIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 21: // NME_INST
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.nmeInst = iprot.readString();
						struct.setNmeInstIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 22: // SGL_INST
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.sglInst = iprot.readString();
						struct.setSglInstIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 23: // DSC_ABREV_INST
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.dscAbrevInst = iprot.readString();
						struct.setDscAbrevInstIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 24: // DSC_UF_INST
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.dscUfInst = iprot.readString();
						struct.setDscUfInstIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 25: // DSC_REGIAO_INST
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.dscRegiaoInst = iprot.readString();
						struct.setDscRegiaoInstIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 26: // COD_SETOR_ECON_INST
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.codSetorEconInst = iprot.readString();
						struct.setCodSetorEconInstIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 27: // DSC_SETOR_ECON_INST
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.dscSetorEconInst = iprot.readString();
						struct.setDscSetorEconInstIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 28: // COD_INST_OUTRA
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.codInstOutra = iprot.readString();
						struct.setCodInstOutraIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 29: // NME_INST_OUTRA
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.nmeInstOutra = iprot.readString();
						struct.setNmeInstOutraIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 30: // SGL_INST_OUTRA
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.sglInstOutra = iprot.readString();
						struct.setSglInstOutraIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 31: // DSC_ABREV_INST_OUTRA
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.dscAbrevInstOutra = iprot.readString();
						struct.setDscAbrevInstOutraIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 32: // DSC_UF_INST_OUTRA
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.dscUfInstOutra = iprot.readString();
						struct.setDscUfInstOutraIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 33: // DSC_REGIAO_INST_OUTRA
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.dscRegiaoInstOutra = iprot.readString();
						struct.setDscRegiaoInstOutraIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				default:
					org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
				}
				iprot.readFieldEnd();
			}
			iprot.readStructEnd();
			struct.validate();
		}

		public void write(org.apache.thrift.protocol.TProtocol oprot, Formacao struct) throws org.apache.thrift.TException {
			struct.validate();

			oprot.writeStructBegin(STRUCT_DESC);
			if (struct.nroIdCnpq != null) {
				oprot.writeFieldBegin(NRO_ID_CNPQ_FIELD_DESC);
				oprot.writeString(struct.nroIdCnpq);
				oprot.writeFieldEnd();
			}
			oprot.writeFieldBegin(SEQ_ORDEM_NIVEL_FORM_FIELD_DESC);
			oprot.writeI32(struct.seqOrdemNivelForm);
			oprot.writeFieldEnd();
			if (struct.codNivelForm != null) {
				oprot.writeFieldBegin(COD_NIVEL_FORM_FIELD_DESC);
				oprot.writeString(struct.codNivelForm);
				oprot.writeFieldEnd();
			}
			if (struct.dscNivelForm != null) {
				if (struct.isSetDscNivelForm()) {
					oprot.writeFieldBegin(DSC_NIVEL_FORM_FIELD_DESC);
					oprot.writeString(struct.dscNivelForm);
					oprot.writeFieldEnd();
				}
			}
			if (struct.anoIniForm != null) {
				if (struct.isSetAnoIniForm()) {
					oprot.writeFieldBegin(ANO_INI_FORM_FIELD_DESC);
					oprot.writeString(struct.anoIniForm);
					oprot.writeFieldEnd();
				}
			}
			if (struct.anoObtenForm != null) {
				if (struct.isSetAnoObtenForm()) {
					oprot.writeFieldBegin(ANO_OBTEN_FORM_FIELD_DESC);
					oprot.writeString(struct.anoObtenForm);
					oprot.writeFieldEnd();
				}
			}
			if (struct.anoTerForm != null) {
				if (struct.isSetAnoTerForm()) {
					oprot.writeFieldBegin(ANO_TER_FORM_FIELD_DESC);
					oprot.writeString(struct.anoTerForm);
					oprot.writeFieldEnd();
				}
			}
			if (struct.txtTitForm != null) {
				if (struct.isSetTxtTitForm()) {
					oprot.writeFieldBegin(TXT_TIT_FORM_FIELD_DESC);
					oprot.writeString(struct.txtTitForm);
					oprot.writeFieldEnd();
				}
			}
			if (struct.staFormacaoConcluida != null) {
				if (struct.isSetStaFormacaoConcluida()) {
					oprot.writeFieldBegin(STA_FORMACAO_CONCLUIDA_FIELD_DESC);
					oprot.writeString(struct.staFormacaoConcluida);
					oprot.writeFieldEnd();
				}
			}
			if (struct.codCurso != null) {
				if (struct.isSetCodCurso()) {
					oprot.writeFieldBegin(COD_CURSO_FIELD_DESC);
					oprot.writeString(struct.codCurso);
					oprot.writeFieldEnd();
				}
			}
			if (struct.dscCurso != null) {
				if (struct.isSetDscCurso()) {
					oprot.writeFieldBegin(DSC_CURSO_FIELD_DESC);
					oprot.writeString(struct.dscCurso);
					oprot.writeFieldEnd();
				}
			}
			if (struct.codAreaConhecCurso != null) {
				if (struct.isSetCodAreaConhecCurso()) {
					oprot.writeFieldBegin(COD_AREA_CONHEC_CURSO_FIELD_DESC);
					oprot.writeString(struct.codAreaConhecCurso);
					oprot.writeFieldEnd();
				}
			}
			if (struct.nmeAreaConhecCurso != null) {
				if (struct.isSetNmeAreaConhecCurso()) {
					oprot.writeFieldBegin(NME_AREA_CONHEC_CURSO_FIELD_DESC);
					oprot.writeString(struct.nmeAreaConhecCurso);
					oprot.writeFieldEnd();
				}
			}
			if (struct.codCursoOutro != null) {
				if (struct.isSetCodCursoOutro()) {
					oprot.writeFieldBegin(COD_CURSO_OUTRO_FIELD_DESC);
					oprot.writeString(struct.codCursoOutro);
					oprot.writeFieldEnd();
				}
			}
			if (struct.dscCursoOutro != null) {
				if (struct.isSetDscCursoOutro()) {
					oprot.writeFieldBegin(DSC_CURSO_OUTRO_FIELD_DESC);
					oprot.writeString(struct.dscCursoOutro);
					oprot.writeFieldEnd();
				}
			}
			if (struct.codAreaConhecCursoOutro != null) {
				if (struct.isSetCodAreaConhecCursoOutro()) {
					oprot.writeFieldBegin(COD_AREA_CONHEC_CURSO_OUTRO_FIELD_DESC);
					oprot.writeString(struct.codAreaConhecCursoOutro);
					oprot.writeFieldEnd();
				}
			}
			if (struct.nmeAreaConhecCursoOutro != null) {
				if (struct.isSetNmeAreaConhecCursoOutro()) {
					oprot.writeFieldBegin(NME_AREA_CONHEC_CURSO_OUTRO_FIELD_DESC);
					oprot.writeString(struct.nmeAreaConhecCursoOutro);
					oprot.writeFieldEnd();
				}
			}
			if (struct.codAreaConhecOutraCursoOutro != null) {
				if (struct.isSetCodAreaConhecOutraCursoOutro()) {
					oprot.writeFieldBegin(COD_AREA_CONHEC_OUTRA_CURSO_OUTRO_FIELD_DESC);
					oprot.writeString(struct.codAreaConhecOutraCursoOutro);
					oprot.writeFieldEnd();
				}
			}
			if (struct.nmeAreaConhecOutraCursoOutro != null) {
				if (struct.isSetNmeAreaConhecOutraCursoOutro()) {
					oprot.writeFieldBegin(NME_AREA_CONHEC_OUTRA_CURSO_OUTRO_FIELD_DESC);
					oprot.writeString(struct.nmeAreaConhecOutraCursoOutro);
					oprot.writeFieldEnd();
				}
			}
			if (struct.codInst != null) {
				if (struct.isSetCodInst()) {
					oprot.writeFieldBegin(COD_INST_FIELD_DESC);
					oprot.writeString(struct.codInst);
					oprot.writeFieldEnd();
				}
			}
			if (struct.nmeInst != null) {
				if (struct.isSetNmeInst()) {
					oprot.writeFieldBegin(NME_INST_FIELD_DESC);
					oprot.writeString(struct.nmeInst);
					oprot.writeFieldEnd();
				}
			}
			if (struct.sglInst != null) {
				if (struct.isSetSglInst()) {
					oprot.writeFieldBegin(SGL_INST_FIELD_DESC);
					oprot.writeString(struct.sglInst);
					oprot.writeFieldEnd();
				}
			}
			if (struct.dscAbrevInst != null) {
				if (struct.isSetDscAbrevInst()) {
					oprot.writeFieldBegin(DSC_ABREV_INST_FIELD_DESC);
					oprot.writeString(struct.dscAbrevInst);
					oprot.writeFieldEnd();
				}
			}
			if (struct.dscUfInst != null) {
				if (struct.isSetDscUfInst()) {
					oprot.writeFieldBegin(DSC_UF_INST_FIELD_DESC);
					oprot.writeString(struct.dscUfInst);
					oprot.writeFieldEnd();
				}
			}
			if (struct.dscRegiaoInst != null) {
				if (struct.isSetDscRegiaoInst()) {
					oprot.writeFieldBegin(DSC_REGIAO_INST_FIELD_DESC);
					oprot.writeString(struct.dscRegiaoInst);
					oprot.writeFieldEnd();
				}
			}
			if (struct.codSetorEconInst != null) {
				if (struct.isSetCodSetorEconInst()) {
					oprot.writeFieldBegin(COD_SETOR_ECON_INST_FIELD_DESC);
					oprot.writeString(struct.codSetorEconInst);
					oprot.writeFieldEnd();
				}
			}
			if (struct.dscSetorEconInst != null) {
				if (struct.isSetDscSetorEconInst()) {
					oprot.writeFieldBegin(DSC_SETOR_ECON_INST_FIELD_DESC);
					oprot.writeString(struct.dscSetorEconInst);
					oprot.writeFieldEnd();
				}
			}
			if (struct.codInstOutra != null) {
				if (struct.isSetCodInstOutra()) {
					oprot.writeFieldBegin(COD_INST_OUTRA_FIELD_DESC);
					oprot.writeString(struct.codInstOutra);
					oprot.writeFieldEnd();
				}
			}
			if (struct.nmeInstOutra != null) {
				if (struct.isSetNmeInstOutra()) {
					oprot.writeFieldBegin(NME_INST_OUTRA_FIELD_DESC);
					oprot.writeString(struct.nmeInstOutra);
					oprot.writeFieldEnd();
				}
			}
			if (struct.sglInstOutra != null) {
				if (struct.isSetSglInstOutra()) {
					oprot.writeFieldBegin(SGL_INST_OUTRA_FIELD_DESC);
					oprot.writeString(struct.sglInstOutra);
					oprot.writeFieldEnd();
				}
			}
			if (struct.dscAbrevInstOutra != null) {
				if (struct.isSetDscAbrevInstOutra()) {
					oprot.writeFieldBegin(DSC_ABREV_INST_OUTRA_FIELD_DESC);
					oprot.writeString(struct.dscAbrevInstOutra);
					oprot.writeFieldEnd();
				}
			}
			if (struct.dscUfInstOutra != null) {
				if (struct.isSetDscUfInstOutra()) {
					oprot.writeFieldBegin(DSC_UF_INST_OUTRA_FIELD_DESC);
					oprot.writeString(struct.dscUfInstOutra);
					oprot.writeFieldEnd();
				}
			}
			if (struct.dscRegiaoInstOutra != null) {
				if (struct.isSetDscRegiaoInstOutra()) {
					oprot.writeFieldBegin(DSC_REGIAO_INST_OUTRA_FIELD_DESC);
					oprot.writeString(struct.dscRegiaoInstOutra);
					oprot.writeFieldEnd();
				}
			}
			oprot.writeFieldStop();
			oprot.writeStructEnd();
		}

	}

	private static class FormacaoTupleSchemeFactory implements SchemeFactory {
		public FormacaoTupleScheme getScheme() {
			return new FormacaoTupleScheme();
		}
	}

	private static class FormacaoTupleScheme extends TupleScheme<Formacao> {

		@Override
		public void write(org.apache.thrift.protocol.TProtocol prot, Formacao struct) throws org.apache.thrift.TException {
			TTupleProtocol oprot = (TTupleProtocol) prot;
			oprot.writeString(struct.nroIdCnpq);
			oprot.writeI32(struct.seqOrdemNivelForm);
			oprot.writeString(struct.codNivelForm);
			BitSet optionals = new BitSet();
			if (struct.isSetDscNivelForm()) {
				optionals.set(0);
			}
			if (struct.isSetAnoIniForm()) {
				optionals.set(1);
			}
			if (struct.isSetAnoObtenForm()) {
				optionals.set(2);
			}
			if (struct.isSetAnoTerForm()) {
				optionals.set(3);
			}
			if (struct.isSetTxtTitForm()) {
				optionals.set(4);
			}
			if (struct.isSetStaFormacaoConcluida()) {
				optionals.set(5);
			}
			if (struct.isSetCodCurso()) {
				optionals.set(6);
			}
			if (struct.isSetDscCurso()) {
				optionals.set(7);
			}
			if (struct.isSetCodAreaConhecCurso()) {
				optionals.set(8);
			}
			if (struct.isSetNmeAreaConhecCurso()) {
				optionals.set(9);
			}
			if (struct.isSetCodCursoOutro()) {
				optionals.set(10);
			}
			if (struct.isSetDscCursoOutro()) {
				optionals.set(11);
			}
			if (struct.isSetCodAreaConhecCursoOutro()) {
				optionals.set(12);
			}
			if (struct.isSetNmeAreaConhecCursoOutro()) {
				optionals.set(13);
			}
			if (struct.isSetCodAreaConhecOutraCursoOutro()) {
				optionals.set(14);
			}
			if (struct.isSetNmeAreaConhecOutraCursoOutro()) {
				optionals.set(15);
			}
			if (struct.isSetCodInst()) {
				optionals.set(16);
			}
			if (struct.isSetNmeInst()) {
				optionals.set(17);
			}
			if (struct.isSetSglInst()) {
				optionals.set(18);
			}
			if (struct.isSetDscAbrevInst()) {
				optionals.set(19);
			}
			if (struct.isSetDscUfInst()) {
				optionals.set(20);
			}
			if (struct.isSetDscRegiaoInst()) {
				optionals.set(21);
			}
			if (struct.isSetCodSetorEconInst()) {
				optionals.set(22);
			}
			if (struct.isSetDscSetorEconInst()) {
				optionals.set(23);
			}
			if (struct.isSetCodInstOutra()) {
				optionals.set(24);
			}
			if (struct.isSetNmeInstOutra()) {
				optionals.set(25);
			}
			if (struct.isSetSglInstOutra()) {
				optionals.set(26);
			}
			if (struct.isSetDscAbrevInstOutra()) {
				optionals.set(27);
			}
			if (struct.isSetDscUfInstOutra()) {
				optionals.set(28);
			}
			if (struct.isSetDscRegiaoInstOutra()) {
				optionals.set(29);
			}
			oprot.writeBitSet(optionals, 30);
			if (struct.isSetDscNivelForm()) {
				oprot.writeString(struct.dscNivelForm);
			}
			if (struct.isSetAnoIniForm()) {
				oprot.writeString(struct.anoIniForm);
			}
			if (struct.isSetAnoObtenForm()) {
				oprot.writeString(struct.anoObtenForm);
			}
			if (struct.isSetAnoTerForm()) {
				oprot.writeString(struct.anoTerForm);
			}
			if (struct.isSetTxtTitForm()) {
				oprot.writeString(struct.txtTitForm);
			}
			if (struct.isSetStaFormacaoConcluida()) {
				oprot.writeString(struct.staFormacaoConcluida);
			}
			if (struct.isSetCodCurso()) {
				oprot.writeString(struct.codCurso);
			}
			if (struct.isSetDscCurso()) {
				oprot.writeString(struct.dscCurso);
			}
			if (struct.isSetCodAreaConhecCurso()) {
				oprot.writeString(struct.codAreaConhecCurso);
			}
			if (struct.isSetNmeAreaConhecCurso()) {
				oprot.writeString(struct.nmeAreaConhecCurso);
			}
			if (struct.isSetCodCursoOutro()) {
				oprot.writeString(struct.codCursoOutro);
			}
			if (struct.isSetDscCursoOutro()) {
				oprot.writeString(struct.dscCursoOutro);
			}
			if (struct.isSetCodAreaConhecCursoOutro()) {
				oprot.writeString(struct.codAreaConhecCursoOutro);
			}
			if (struct.isSetNmeAreaConhecCursoOutro()) {
				oprot.writeString(struct.nmeAreaConhecCursoOutro);
			}
			if (struct.isSetCodAreaConhecOutraCursoOutro()) {
				oprot.writeString(struct.codAreaConhecOutraCursoOutro);
			}
			if (struct.isSetNmeAreaConhecOutraCursoOutro()) {
				oprot.writeString(struct.nmeAreaConhecOutraCursoOutro);
			}
			if (struct.isSetCodInst()) {
				oprot.writeString(struct.codInst);
			}
			if (struct.isSetNmeInst()) {
				oprot.writeString(struct.nmeInst);
			}
			if (struct.isSetSglInst()) {
				oprot.writeString(struct.sglInst);
			}
			if (struct.isSetDscAbrevInst()) {
				oprot.writeString(struct.dscAbrevInst);
			}
			if (struct.isSetDscUfInst()) {
				oprot.writeString(struct.dscUfInst);
			}
			if (struct.isSetDscRegiaoInst()) {
				oprot.writeString(struct.dscRegiaoInst);
			}
			if (struct.isSetCodSetorEconInst()) {
				oprot.writeString(struct.codSetorEconInst);
			}
			if (struct.isSetDscSetorEconInst()) {
				oprot.writeString(struct.dscSetorEconInst);
			}
			if (struct.isSetCodInstOutra()) {
				oprot.writeString(struct.codInstOutra);
			}
			if (struct.isSetNmeInstOutra()) {
				oprot.writeString(struct.nmeInstOutra);
			}
			if (struct.isSetSglInstOutra()) {
				oprot.writeString(struct.sglInstOutra);
			}
			if (struct.isSetDscAbrevInstOutra()) {
				oprot.writeString(struct.dscAbrevInstOutra);
			}
			if (struct.isSetDscUfInstOutra()) {
				oprot.writeString(struct.dscUfInstOutra);
			}
			if (struct.isSetDscRegiaoInstOutra()) {
				oprot.writeString(struct.dscRegiaoInstOutra);
			}
		}

		@Override
		public void read(org.apache.thrift.protocol.TProtocol prot, Formacao struct) throws org.apache.thrift.TException {
			TTupleProtocol iprot = (TTupleProtocol) prot;
			struct.nroIdCnpq = iprot.readString();
			struct.setNroIdCnpqIsSet(true);
			struct.seqOrdemNivelForm = iprot.readI32();
			struct.setSeqOrdemNivelFormIsSet(true);
			struct.codNivelForm = iprot.readString();
			struct.setCodNivelFormIsSet(true);
			BitSet incoming = iprot.readBitSet(30);
			if (incoming.get(0)) {
				struct.dscNivelForm = iprot.readString();
				struct.setDscNivelFormIsSet(true);
			}
			if (incoming.get(1)) {
				struct.anoIniForm = iprot.readString();
				struct.setAnoIniFormIsSet(true);
			}
			if (incoming.get(2)) {
				struct.anoObtenForm = iprot.readString();
				struct.setAnoObtenFormIsSet(true);
			}
			if (incoming.get(3)) {
				struct.anoTerForm = iprot.readString();
				struct.setAnoTerFormIsSet(true);
			}
			if (incoming.get(4)) {
				struct.txtTitForm = iprot.readString();
				struct.setTxtTitFormIsSet(true);
			}
			if (incoming.get(5)) {
				struct.staFormacaoConcluida = iprot.readString();
				struct.setStaFormacaoConcluidaIsSet(true);
			}
			if (incoming.get(6)) {
				struct.codCurso = iprot.readString();
				struct.setCodCursoIsSet(true);
			}
			if (incoming.get(7)) {
				struct.dscCurso = iprot.readString();
				struct.setDscCursoIsSet(true);
			}
			if (incoming.get(8)) {
				struct.codAreaConhecCurso = iprot.readString();
				struct.setCodAreaConhecCursoIsSet(true);
			}
			if (incoming.get(9)) {
				struct.nmeAreaConhecCurso = iprot.readString();
				struct.setNmeAreaConhecCursoIsSet(true);
			}
			if (incoming.get(10)) {
				struct.codCursoOutro = iprot.readString();
				struct.setCodCursoOutroIsSet(true);
			}
			if (incoming.get(11)) {
				struct.dscCursoOutro = iprot.readString();
				struct.setDscCursoOutroIsSet(true);
			}
			if (incoming.get(12)) {
				struct.codAreaConhecCursoOutro = iprot.readString();
				struct.setCodAreaConhecCursoOutroIsSet(true);
			}
			if (incoming.get(13)) {
				struct.nmeAreaConhecCursoOutro = iprot.readString();
				struct.setNmeAreaConhecCursoOutroIsSet(true);
			}
			if (incoming.get(14)) {
				struct.codAreaConhecOutraCursoOutro = iprot.readString();
				struct.setCodAreaConhecOutraCursoOutroIsSet(true);
			}
			if (incoming.get(15)) {
				struct.nmeAreaConhecOutraCursoOutro = iprot.readString();
				struct.setNmeAreaConhecOutraCursoOutroIsSet(true);
			}
			if (incoming.get(16)) {
				struct.codInst = iprot.readString();
				struct.setCodInstIsSet(true);
			}
			if (incoming.get(17)) {
				struct.nmeInst = iprot.readString();
				struct.setNmeInstIsSet(true);
			}
			if (incoming.get(18)) {
				struct.sglInst = iprot.readString();
				struct.setSglInstIsSet(true);
			}
			if (incoming.get(19)) {
				struct.dscAbrevInst = iprot.readString();
				struct.setDscAbrevInstIsSet(true);
			}
			if (incoming.get(20)) {
				struct.dscUfInst = iprot.readString();
				struct.setDscUfInstIsSet(true);
			}
			if (incoming.get(21)) {
				struct.dscRegiaoInst = iprot.readString();
				struct.setDscRegiaoInstIsSet(true);
			}
			if (incoming.get(22)) {
				struct.codSetorEconInst = iprot.readString();
				struct.setCodSetorEconInstIsSet(true);
			}
			if (incoming.get(23)) {
				struct.dscSetorEconInst = iprot.readString();
				struct.setDscSetorEconInstIsSet(true);
			}
			if (incoming.get(24)) {
				struct.codInstOutra = iprot.readString();
				struct.setCodInstOutraIsSet(true);
			}
			if (incoming.get(25)) {
				struct.nmeInstOutra = iprot.readString();
				struct.setNmeInstOutraIsSet(true);
			}
			if (incoming.get(26)) {
				struct.sglInstOutra = iprot.readString();
				struct.setSglInstOutraIsSet(true);
			}
			if (incoming.get(27)) {
				struct.dscAbrevInstOutra = iprot.readString();
				struct.setDscAbrevInstOutraIsSet(true);
			}
			if (incoming.get(28)) {
				struct.dscUfInstOutra = iprot.readString();
				struct.setDscUfInstOutraIsSet(true);
			}
			if (incoming.get(29)) {
				struct.dscRegiaoInstOutra = iprot.readString();
				struct.setDscRegiaoInstOutraIsSet(true);
			}
		}
	}

}
