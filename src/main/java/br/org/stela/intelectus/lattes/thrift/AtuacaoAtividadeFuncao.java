/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package br.org.stela.intelectus.lattes.thrift;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-6-9")
public class AtuacaoAtividadeFuncao implements org.apache.thrift.TBase<AtuacaoAtividadeFuncao, AtuacaoAtividadeFuncao._Fields>, java.io.Serializable, Cloneable,
		Comparable<AtuacaoAtividadeFuncao> {
	private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("AtuacaoAtividadeFuncao");

	private static final org.apache.thrift.protocol.TField NRO_ID_CNPQ_FIELD_DESC =
			new org.apache.thrift.protocol.TField("nroIdCnpq", org.apache.thrift.protocol.TType.STRING, (short) 1);
	private static final org.apache.thrift.protocol.TField SEQ_ATIVIDADE_FIELD_DESC =
			new org.apache.thrift.protocol.TField("seqAtividade", org.apache.thrift.protocol.TType.I32, (short) 2);
	private static final org.apache.thrift.protocol.TField SEQ_FUNCAO_ATIV_FIELD_DESC =
			new org.apache.thrift.protocol.TField("seqFuncaoAtiv", org.apache.thrift.protocol.TType.I32, (short) 3);
	private static final org.apache.thrift.protocol.TField ANO_INIC_FIELD_DESC =
			new org.apache.thrift.protocol.TField("anoInic", org.apache.thrift.protocol.TType.STRING, (short) 4);
	private static final org.apache.thrift.protocol.TField MES_INIC_FIELD_DESC =
			new org.apache.thrift.protocol.TField("mesInic", org.apache.thrift.protocol.TType.STRING, (short) 5);
	private static final org.apache.thrift.protocol.TField ANO_FIM_FIELD_DESC =
			new org.apache.thrift.protocol.TField("anoFim", org.apache.thrift.protocol.TType.STRING, (short) 6);
	private static final org.apache.thrift.protocol.TField MES_FIM_FIELD_DESC =
			new org.apache.thrift.protocol.TField("mesFim", org.apache.thrift.protocol.TType.STRING, (short) 7);
	private static final org.apache.thrift.protocol.TField STA_ATIVIDADE_ATUAL_FIELD_DESC =
			new org.apache.thrift.protocol.TField("staAtividadeAtual", org.apache.thrift.protocol.TType.STRING, (short) 8);
	private static final org.apache.thrift.protocol.TField DSC_NATUR_ATIV_FIELD_DESC =
			new org.apache.thrift.protocol.TField("dscNaturAtiv", org.apache.thrift.protocol.TType.STRING, (short) 9);
	private static final org.apache.thrift.protocol.TField DSC_NATUR_ATIV_GRUPO_FIELD_DESC =
			new org.apache.thrift.protocol.TField("dscNaturAtivGrupo", org.apache.thrift.protocol.TType.STRING, (short) 10);
	private static final org.apache.thrift.protocol.TField COD_NATUR_ATIV_FIELD_DESC =
			new org.apache.thrift.protocol.TField("codNaturAtiv", org.apache.thrift.protocol.TType.STRING, (short) 11);
	private static final org.apache.thrift.protocol.TField COD_NATUR_ATIV_GRUPO_FIELD_DESC =
			new org.apache.thrift.protocol.TField("codNaturAtivGrupo", org.apache.thrift.protocol.TType.STRING, (short) 12);

	private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();

	static {
		schemes.put(StandardScheme.class, new AtuacaoAtividadeFuncaoStandardSchemeFactory());
		schemes.put(TupleScheme.class, new AtuacaoAtividadeFuncaoTupleSchemeFactory());
	}

	private String nroIdCnpq; // required
	private int seqAtividade; // optional
	private int seqFuncaoAtiv; // optional
	private String anoInic; // optional
	private String mesInic; // optional
	private String anoFim; // optional
	private String mesFim; // optional
	private String staAtividadeAtual; // optional
	private String dscNaturAtiv; // optional
	private String dscNaturAtivGrupo; // optional
	private String codNaturAtiv; // optional
	private String codNaturAtivGrupo; // optional

	/** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
	public enum _Fields implements org.apache.thrift.TFieldIdEnum {
		NRO_ID_CNPQ((short) 1, "nroIdCnpq"),
		SEQ_ATIVIDADE((short) 2, "seqAtividade"),
		SEQ_FUNCAO_ATIV((short) 3, "seqFuncaoAtiv"),
		ANO_INIC((short) 4, "anoInic"),
		MES_INIC((short) 5, "mesInic"),
		ANO_FIM((short) 6, "anoFim"),
		MES_FIM((short) 7, "mesFim"),
		STA_ATIVIDADE_ATUAL((short) 8, "staAtividadeAtual"),
		DSC_NATUR_ATIV((short) 9, "dscNaturAtiv"),
		DSC_NATUR_ATIV_GRUPO((short) 10, "dscNaturAtivGrupo"),
		COD_NATUR_ATIV((short) 11, "codNaturAtiv"),
		COD_NATUR_ATIV_GRUPO((short) 12, "codNaturAtivGrupo");

		private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

		static {
			for (_Fields field : EnumSet.allOf(_Fields.class)) {
				byName.put(field.getFieldName(), field);
			}
		}

		/**
		 * Find the _Fields constant that matches fieldId, or null if its not found.
		 */
		public static _Fields findByThriftId(int fieldId) {
			switch (fieldId) {
			case 1: // NRO_ID_CNPQ
				return NRO_ID_CNPQ;
			case 2: // SEQ_ATIVIDADE
				return SEQ_ATIVIDADE;
			case 3: // SEQ_FUNCAO_ATIV
				return SEQ_FUNCAO_ATIV;
			case 4: // ANO_INIC
				return ANO_INIC;
			case 5: // MES_INIC
				return MES_INIC;
			case 6: // ANO_FIM
				return ANO_FIM;
			case 7: // MES_FIM
				return MES_FIM;
			case 8: // STA_ATIVIDADE_ATUAL
				return STA_ATIVIDADE_ATUAL;
			case 9: // DSC_NATUR_ATIV
				return DSC_NATUR_ATIV;
			case 10: // DSC_NATUR_ATIV_GRUPO
				return DSC_NATUR_ATIV_GRUPO;
			case 11: // COD_NATUR_ATIV
				return COD_NATUR_ATIV;
			case 12: // COD_NATUR_ATIV_GRUPO
				return COD_NATUR_ATIV_GRUPO;
			default:
				return null;
			}
		}

		/**
		 * Find the _Fields constant that matches fieldId, throwing an exception if it is not found.
		 */
		public static _Fields findByThriftIdOrThrow(int fieldId) {
			_Fields fields = findByThriftId(fieldId);
			if (fields == null)
				throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
			return fields;
		}

		/**
		 * Find the _Fields constant that matches name, or null if its not found.
		 */
		public static _Fields findByName(String name) {
			return byName.get(name);
		}

		private final short _thriftId;
		private final String _fieldName;

		_Fields(short thriftId, String fieldName) {
			_thriftId = thriftId;
			_fieldName = fieldName;
		}

		public short getThriftFieldId() {
			return _thriftId;
		}

		public String getFieldName() {
			return _fieldName;
		}
	}

	// isset id assignments
	private static final int __SEQATIVIDADE_ISSET_ID = 0;
	private static final int __SEQFUNCAOATIV_ISSET_ID = 1;
	private byte __isset_bitfield = 0;
	private static final _Fields optionals[] =
			{_Fields.SEQ_ATIVIDADE, _Fields.SEQ_FUNCAO_ATIV, _Fields.ANO_INIC, _Fields.MES_INIC, _Fields.ANO_FIM, _Fields.MES_FIM, _Fields.STA_ATIVIDADE_ATUAL,
					_Fields.DSC_NATUR_ATIV, _Fields.DSC_NATUR_ATIV_GRUPO, _Fields.COD_NATUR_ATIV, _Fields.COD_NATUR_ATIV_GRUPO};
	public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;

	static {
		Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
		tmpMap.put(_Fields.NRO_ID_CNPQ, new org.apache.thrift.meta_data.FieldMetaData("nroIdCnpq", org.apache.thrift.TFieldRequirementType.REQUIRED,
				new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
		tmpMap.put(_Fields.SEQ_ATIVIDADE, new org.apache.thrift.meta_data.FieldMetaData("seqAtividade", org.apache.thrift.TFieldRequirementType.OPTIONAL,
				new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32, "int")));
		tmpMap.put(_Fields.SEQ_FUNCAO_ATIV, new org.apache.thrift.meta_data.FieldMetaData("seqFuncaoAtiv", org.apache.thrift.TFieldRequirementType.OPTIONAL,
				new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32, "int")));
		tmpMap.put(_Fields.ANO_INIC, new org.apache.thrift.meta_data.FieldMetaData("anoInic", org.apache.thrift.TFieldRequirementType.OPTIONAL,
				new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
		tmpMap.put(_Fields.MES_INIC, new org.apache.thrift.meta_data.FieldMetaData("mesInic", org.apache.thrift.TFieldRequirementType.OPTIONAL,
				new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
		tmpMap.put(_Fields.ANO_FIM, new org.apache.thrift.meta_data.FieldMetaData("anoFim", org.apache.thrift.TFieldRequirementType.OPTIONAL,
				new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
		tmpMap.put(_Fields.MES_FIM, new org.apache.thrift.meta_data.FieldMetaData("mesFim", org.apache.thrift.TFieldRequirementType.OPTIONAL,
				new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
		tmpMap.put(_Fields.STA_ATIVIDADE_ATUAL, new org.apache.thrift.meta_data.FieldMetaData("staAtividadeAtual",
				org.apache.thrift.TFieldRequirementType.OPTIONAL, new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
		tmpMap.put(_Fields.DSC_NATUR_ATIV, new org.apache.thrift.meta_data.FieldMetaData("dscNaturAtiv", org.apache.thrift.TFieldRequirementType.OPTIONAL,
				new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
		tmpMap.put(_Fields.DSC_NATUR_ATIV_GRUPO, new org.apache.thrift.meta_data.FieldMetaData("dscNaturAtivGrupo",
				org.apache.thrift.TFieldRequirementType.OPTIONAL, new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
		tmpMap.put(_Fields.COD_NATUR_ATIV, new org.apache.thrift.meta_data.FieldMetaData("codNaturAtiv", org.apache.thrift.TFieldRequirementType.OPTIONAL,
				new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
		tmpMap.put(_Fields.COD_NATUR_ATIV_GRUPO, new org.apache.thrift.meta_data.FieldMetaData("codNaturAtivGrupo",
				org.apache.thrift.TFieldRequirementType.OPTIONAL, new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
		metaDataMap = Collections.unmodifiableMap(tmpMap);
		org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(AtuacaoAtividadeFuncao.class, metaDataMap);
	}

	public AtuacaoAtividadeFuncao() {
	}

	public AtuacaoAtividadeFuncao(String nroIdCnpq) {
		this();
		this.nroIdCnpq = nroIdCnpq;
	}

	/**
	 * Performs a deep copy on <i>other</i>.
	 */
	public AtuacaoAtividadeFuncao(AtuacaoAtividadeFuncao other) {
		__isset_bitfield = other.__isset_bitfield;
		if (other.isSetNroIdCnpq()) {
			this.nroIdCnpq = other.nroIdCnpq;
		}
		this.seqAtividade = other.seqAtividade;
		this.seqFuncaoAtiv = other.seqFuncaoAtiv;
		if (other.isSetAnoInic()) {
			this.anoInic = other.anoInic;
		}
		if (other.isSetMesInic()) {
			this.mesInic = other.mesInic;
		}
		if (other.isSetAnoFim()) {
			this.anoFim = other.anoFim;
		}
		if (other.isSetMesFim()) {
			this.mesFim = other.mesFim;
		}
		if (other.isSetStaAtividadeAtual()) {
			this.staAtividadeAtual = other.staAtividadeAtual;
		}
		if (other.isSetDscNaturAtiv()) {
			this.dscNaturAtiv = other.dscNaturAtiv;
		}
		if (other.isSetDscNaturAtivGrupo()) {
			this.dscNaturAtivGrupo = other.dscNaturAtivGrupo;
		}
		if (other.isSetCodNaturAtiv()) {
			this.codNaturAtiv = other.codNaturAtiv;
		}
		if (other.isSetCodNaturAtivGrupo()) {
			this.codNaturAtivGrupo = other.codNaturAtivGrupo;
		}
	}

	public AtuacaoAtividadeFuncao deepCopy() {
		return new AtuacaoAtividadeFuncao(this);
	}

	@Override
	public void clear() {
		this.nroIdCnpq = null;
		setSeqAtividadeIsSet(false);
		this.seqAtividade = 0;
		setSeqFuncaoAtivIsSet(false);
		this.seqFuncaoAtiv = 0;
		this.anoInic = null;
		this.mesInic = null;
		this.anoFim = null;
		this.mesFim = null;
		this.staAtividadeAtual = null;
		this.dscNaturAtiv = null;
		this.dscNaturAtivGrupo = null;
		this.codNaturAtiv = null;
		this.codNaturAtivGrupo = null;
	}

	public String getNroIdCnpq() {
		return this.nroIdCnpq;
	}

	public void setNroIdCnpq(String nroIdCnpq) {
		this.nroIdCnpq = nroIdCnpq;
	}

	public void unsetNroIdCnpq() {
		this.nroIdCnpq = null;
	}

	/** Returns true if field nroIdCnpq is set (has been assigned a value) and false otherwise */
	public boolean isSetNroIdCnpq() {
		return this.nroIdCnpq != null;
	}

	public void setNroIdCnpqIsSet(boolean value) {
		if (!value) {
			this.nroIdCnpq = null;
		}
	}

	public int getSeqAtividade() {
		return this.seqAtividade;
	}

	public void setSeqAtividade(int seqAtividade) {
		this.seqAtividade = seqAtividade;
		setSeqAtividadeIsSet(true);
	}

	public void unsetSeqAtividade() {
		__isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SEQATIVIDADE_ISSET_ID);
	}

	/** Returns true if field seqAtividade is set (has been assigned a value) and false otherwise */
	public boolean isSetSeqAtividade() {
		return EncodingUtils.testBit(__isset_bitfield, __SEQATIVIDADE_ISSET_ID);
	}

	public void setSeqAtividadeIsSet(boolean value) {
		__isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SEQATIVIDADE_ISSET_ID, value);
	}

	public int getSeqFuncaoAtiv() {
		return this.seqFuncaoAtiv;
	}

	public void setSeqFuncaoAtiv(int seqFuncaoAtiv) {
		this.seqFuncaoAtiv = seqFuncaoAtiv;
		setSeqFuncaoAtivIsSet(true);
	}

	public void unsetSeqFuncaoAtiv() {
		__isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SEQFUNCAOATIV_ISSET_ID);
	}

	/** Returns true if field seqFuncaoAtiv is set (has been assigned a value) and false otherwise */
	public boolean isSetSeqFuncaoAtiv() {
		return EncodingUtils.testBit(__isset_bitfield, __SEQFUNCAOATIV_ISSET_ID);
	}

	public void setSeqFuncaoAtivIsSet(boolean value) {
		__isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SEQFUNCAOATIV_ISSET_ID, value);
	}

	public String getAnoInic() {
		return this.anoInic;
	}

	public void setAnoInic(String anoInic) {
		this.anoInic = anoInic;
	}

	public void unsetAnoInic() {
		this.anoInic = null;
	}

	/** Returns true if field anoInic is set (has been assigned a value) and false otherwise */
	public boolean isSetAnoInic() {
		return this.anoInic != null;
	}

	public void setAnoInicIsSet(boolean value) {
		if (!value) {
			this.anoInic = null;
		}
	}

	public String getMesInic() {
		return this.mesInic;
	}

	public void setMesInic(String mesInic) {
		this.mesInic = mesInic;
	}

	public void unsetMesInic() {
		this.mesInic = null;
	}

	/** Returns true if field mesInic is set (has been assigned a value) and false otherwise */
	public boolean isSetMesInic() {
		return this.mesInic != null;
	}

	public void setMesInicIsSet(boolean value) {
		if (!value) {
			this.mesInic = null;
		}
	}

	public String getAnoFim() {
		return this.anoFim;
	}

	public void setAnoFim(String anoFim) {
		this.anoFim = anoFim;
	}

	public void unsetAnoFim() {
		this.anoFim = null;
	}

	/** Returns true if field anoFim is set (has been assigned a value) and false otherwise */
	public boolean isSetAnoFim() {
		return this.anoFim != null;
	}

	public void setAnoFimIsSet(boolean value) {
		if (!value) {
			this.anoFim = null;
		}
	}

	public String getMesFim() {
		return this.mesFim;
	}

	public void setMesFim(String mesFim) {
		this.mesFim = mesFim;
	}

	public void unsetMesFim() {
		this.mesFim = null;
	}

	/** Returns true if field mesFim is set (has been assigned a value) and false otherwise */
	public boolean isSetMesFim() {
		return this.mesFim != null;
	}

	public void setMesFimIsSet(boolean value) {
		if (!value) {
			this.mesFim = null;
		}
	}

	public String getStaAtividadeAtual() {
		return this.staAtividadeAtual;
	}

	public void setStaAtividadeAtual(String staAtividadeAtual) {
		this.staAtividadeAtual = staAtividadeAtual;
	}

	public void unsetStaAtividadeAtual() {
		this.staAtividadeAtual = null;
	}

	/** Returns true if field staAtividadeAtual is set (has been assigned a value) and false otherwise */
	public boolean isSetStaAtividadeAtual() {
		return this.staAtividadeAtual != null;
	}

	public void setStaAtividadeAtualIsSet(boolean value) {
		if (!value) {
			this.staAtividadeAtual = null;
		}
	}

	public String getDscNaturAtiv() {
		return this.dscNaturAtiv;
	}

	public void setDscNaturAtiv(String dscNaturAtiv) {
		this.dscNaturAtiv = dscNaturAtiv;
	}

	public void unsetDscNaturAtiv() {
		this.dscNaturAtiv = null;
	}

	/** Returns true if field dscNaturAtiv is set (has been assigned a value) and false otherwise */
	public boolean isSetDscNaturAtiv() {
		return this.dscNaturAtiv != null;
	}

	public void setDscNaturAtivIsSet(boolean value) {
		if (!value) {
			this.dscNaturAtiv = null;
		}
	}

	public String getDscNaturAtivGrupo() {
		return this.dscNaturAtivGrupo;
	}

	public void setDscNaturAtivGrupo(String dscNaturAtivGrupo) {
		this.dscNaturAtivGrupo = dscNaturAtivGrupo;
	}

	public void unsetDscNaturAtivGrupo() {
		this.dscNaturAtivGrupo = null;
	}

	/** Returns true if field dscNaturAtivGrupo is set (has been assigned a value) and false otherwise */
	public boolean isSetDscNaturAtivGrupo() {
		return this.dscNaturAtivGrupo != null;
	}

	public void setDscNaturAtivGrupoIsSet(boolean value) {
		if (!value) {
			this.dscNaturAtivGrupo = null;
		}
	}

	public String getCodNaturAtiv() {
		return this.codNaturAtiv;
	}

	public void setCodNaturAtiv(String codNaturAtiv) {
		this.codNaturAtiv = codNaturAtiv;
	}

	public void unsetCodNaturAtiv() {
		this.codNaturAtiv = null;
	}

	/** Returns true if field codNaturAtiv is set (has been assigned a value) and false otherwise */
	public boolean isSetCodNaturAtiv() {
		return this.codNaturAtiv != null;
	}

	public void setCodNaturAtivIsSet(boolean value) {
		if (!value) {
			this.codNaturAtiv = null;
		}
	}

	public String getCodNaturAtivGrupo() {
		return this.codNaturAtivGrupo;
	}

	public void setCodNaturAtivGrupo(String codNaturAtivGrupo) {
		this.codNaturAtivGrupo = codNaturAtivGrupo;
	}

	public void unsetCodNaturAtivGrupo() {
		this.codNaturAtivGrupo = null;
	}

	/** Returns true if field codNaturAtivGrupo is set (has been assigned a value) and false otherwise */
	public boolean isSetCodNaturAtivGrupo() {
		return this.codNaturAtivGrupo != null;
	}

	public void setCodNaturAtivGrupoIsSet(boolean value) {
		if (!value) {
			this.codNaturAtivGrupo = null;
		}
	}

	public void setFieldValue(_Fields field, Object value) {
		switch (field) {
		case NRO_ID_CNPQ:
			if (value == null) {
				unsetNroIdCnpq();
			} else {
				setNroIdCnpq((String) value);
			}
			break;

		case SEQ_ATIVIDADE:
			if (value == null) {
				unsetSeqAtividade();
			} else {
				setSeqAtividade((Integer) value);
			}
			break;

		case SEQ_FUNCAO_ATIV:
			if (value == null) {
				unsetSeqFuncaoAtiv();
			} else {
				setSeqFuncaoAtiv((Integer) value);
			}
			break;

		case ANO_INIC:
			if (value == null) {
				unsetAnoInic();
			} else {
				setAnoInic((String) value);
			}
			break;

		case MES_INIC:
			if (value == null) {
				unsetMesInic();
			} else {
				setMesInic((String) value);
			}
			break;

		case ANO_FIM:
			if (value == null) {
				unsetAnoFim();
			} else {
				setAnoFim((String) value);
			}
			break;

		case MES_FIM:
			if (value == null) {
				unsetMesFim();
			} else {
				setMesFim((String) value);
			}
			break;

		case STA_ATIVIDADE_ATUAL:
			if (value == null) {
				unsetStaAtividadeAtual();
			} else {
				setStaAtividadeAtual((String) value);
			}
			break;

		case DSC_NATUR_ATIV:
			if (value == null) {
				unsetDscNaturAtiv();
			} else {
				setDscNaturAtiv((String) value);
			}
			break;

		case DSC_NATUR_ATIV_GRUPO:
			if (value == null) {
				unsetDscNaturAtivGrupo();
			} else {
				setDscNaturAtivGrupo((String) value);
			}
			break;

		case COD_NATUR_ATIV:
			if (value == null) {
				unsetCodNaturAtiv();
			} else {
				setCodNaturAtiv((String) value);
			}
			break;

		case COD_NATUR_ATIV_GRUPO:
			if (value == null) {
				unsetCodNaturAtivGrupo();
			} else {
				setCodNaturAtivGrupo((String) value);
			}
			break;

		}
	}

	public Object getFieldValue(_Fields field) {
		switch (field) {
		case NRO_ID_CNPQ:
			return getNroIdCnpq();

		case SEQ_ATIVIDADE:
			return Integer.valueOf(getSeqAtividade());

		case SEQ_FUNCAO_ATIV:
			return Integer.valueOf(getSeqFuncaoAtiv());

		case ANO_INIC:
			return getAnoInic();

		case MES_INIC:
			return getMesInic();

		case ANO_FIM:
			return getAnoFim();

		case MES_FIM:
			return getMesFim();

		case STA_ATIVIDADE_ATUAL:
			return getStaAtividadeAtual();

		case DSC_NATUR_ATIV:
			return getDscNaturAtiv();

		case DSC_NATUR_ATIV_GRUPO:
			return getDscNaturAtivGrupo();

		case COD_NATUR_ATIV:
			return getCodNaturAtiv();

		case COD_NATUR_ATIV_GRUPO:
			return getCodNaturAtivGrupo();

		}
		throw new IllegalStateException();
	}

	/** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
	public boolean isSet(_Fields field) {
		if (field == null) {
			throw new IllegalArgumentException();
		}

		switch (field) {
		case NRO_ID_CNPQ:
			return isSetNroIdCnpq();
		case SEQ_ATIVIDADE:
			return isSetSeqAtividade();
		case SEQ_FUNCAO_ATIV:
			return isSetSeqFuncaoAtiv();
		case ANO_INIC:
			return isSetAnoInic();
		case MES_INIC:
			return isSetMesInic();
		case ANO_FIM:
			return isSetAnoFim();
		case MES_FIM:
			return isSetMesFim();
		case STA_ATIVIDADE_ATUAL:
			return isSetStaAtividadeAtual();
		case DSC_NATUR_ATIV:
			return isSetDscNaturAtiv();
		case DSC_NATUR_ATIV_GRUPO:
			return isSetDscNaturAtivGrupo();
		case COD_NATUR_ATIV:
			return isSetCodNaturAtiv();
		case COD_NATUR_ATIV_GRUPO:
			return isSetCodNaturAtivGrupo();
		}
		throw new IllegalStateException();
	}

	@Override
	public boolean equals(Object that) {
		if (that == null)
			return false;
		if (that instanceof AtuacaoAtividadeFuncao)
			return this.equals((AtuacaoAtividadeFuncao) that);
		return false;
	}

	public boolean equals(AtuacaoAtividadeFuncao that) {
		if (that == null)
			return false;

		boolean this_present_nroIdCnpq = true && this.isSetNroIdCnpq();
		boolean that_present_nroIdCnpq = true && that.isSetNroIdCnpq();
		if (this_present_nroIdCnpq || that_present_nroIdCnpq) {
			if (!(this_present_nroIdCnpq && that_present_nroIdCnpq))
				return false;
			if (!this.nroIdCnpq.equals(that.nroIdCnpq))
				return false;
		}

		boolean this_present_seqAtividade = true && this.isSetSeqAtividade();
		boolean that_present_seqAtividade = true && that.isSetSeqAtividade();
		if (this_present_seqAtividade || that_present_seqAtividade) {
			if (!(this_present_seqAtividade && that_present_seqAtividade))
				return false;
			if (this.seqAtividade != that.seqAtividade)
				return false;
		}

		boolean this_present_seqFuncaoAtiv = true && this.isSetSeqFuncaoAtiv();
		boolean that_present_seqFuncaoAtiv = true && that.isSetSeqFuncaoAtiv();
		if (this_present_seqFuncaoAtiv || that_present_seqFuncaoAtiv) {
			if (!(this_present_seqFuncaoAtiv && that_present_seqFuncaoAtiv))
				return false;
			if (this.seqFuncaoAtiv != that.seqFuncaoAtiv)
				return false;
		}

		boolean this_present_anoInic = true && this.isSetAnoInic();
		boolean that_present_anoInic = true && that.isSetAnoInic();
		if (this_present_anoInic || that_present_anoInic) {
			if (!(this_present_anoInic && that_present_anoInic))
				return false;
			if (!this.anoInic.equals(that.anoInic))
				return false;
		}

		boolean this_present_mesInic = true && this.isSetMesInic();
		boolean that_present_mesInic = true && that.isSetMesInic();
		if (this_present_mesInic || that_present_mesInic) {
			if (!(this_present_mesInic && that_present_mesInic))
				return false;
			if (!this.mesInic.equals(that.mesInic))
				return false;
		}

		boolean this_present_anoFim = true && this.isSetAnoFim();
		boolean that_present_anoFim = true && that.isSetAnoFim();
		if (this_present_anoFim || that_present_anoFim) {
			if (!(this_present_anoFim && that_present_anoFim))
				return false;
			if (!this.anoFim.equals(that.anoFim))
				return false;
		}

		boolean this_present_mesFim = true && this.isSetMesFim();
		boolean that_present_mesFim = true && that.isSetMesFim();
		if (this_present_mesFim || that_present_mesFim) {
			if (!(this_present_mesFim && that_present_mesFim))
				return false;
			if (!this.mesFim.equals(that.mesFim))
				return false;
		}

		boolean this_present_staAtividadeAtual = true && this.isSetStaAtividadeAtual();
		boolean that_present_staAtividadeAtual = true && that.isSetStaAtividadeAtual();
		if (this_present_staAtividadeAtual || that_present_staAtividadeAtual) {
			if (!(this_present_staAtividadeAtual && that_present_staAtividadeAtual))
				return false;
			if (!this.staAtividadeAtual.equals(that.staAtividadeAtual))
				return false;
		}

		boolean this_present_dscNaturAtiv = true && this.isSetDscNaturAtiv();
		boolean that_present_dscNaturAtiv = true && that.isSetDscNaturAtiv();
		if (this_present_dscNaturAtiv || that_present_dscNaturAtiv) {
			if (!(this_present_dscNaturAtiv && that_present_dscNaturAtiv))
				return false;
			if (!this.dscNaturAtiv.equals(that.dscNaturAtiv))
				return false;
		}

		boolean this_present_dscNaturAtivGrupo = true && this.isSetDscNaturAtivGrupo();
		boolean that_present_dscNaturAtivGrupo = true && that.isSetDscNaturAtivGrupo();
		if (this_present_dscNaturAtivGrupo || that_present_dscNaturAtivGrupo) {
			if (!(this_present_dscNaturAtivGrupo && that_present_dscNaturAtivGrupo))
				return false;
			if (!this.dscNaturAtivGrupo.equals(that.dscNaturAtivGrupo))
				return false;
		}

		boolean this_present_codNaturAtiv = true && this.isSetCodNaturAtiv();
		boolean that_present_codNaturAtiv = true && that.isSetCodNaturAtiv();
		if (this_present_codNaturAtiv || that_present_codNaturAtiv) {
			if (!(this_present_codNaturAtiv && that_present_codNaturAtiv))
				return false;
			if (!this.codNaturAtiv.equals(that.codNaturAtiv))
				return false;
		}

		boolean this_present_codNaturAtivGrupo = true && this.isSetCodNaturAtivGrupo();
		boolean that_present_codNaturAtivGrupo = true && that.isSetCodNaturAtivGrupo();
		if (this_present_codNaturAtivGrupo || that_present_codNaturAtivGrupo) {
			if (!(this_present_codNaturAtivGrupo && that_present_codNaturAtivGrupo))
				return false;
			if (!this.codNaturAtivGrupo.equals(that.codNaturAtivGrupo))
				return false;
		}

		return true;
	}

	@Override
	public int hashCode() {
		List<Object> list = new ArrayList<Object>();

		boolean present_nroIdCnpq = true && (isSetNroIdCnpq());
		list.add(present_nroIdCnpq);
		if (present_nroIdCnpq)
			list.add(nroIdCnpq);

		boolean present_seqAtividade = true && (isSetSeqAtividade());
		list.add(present_seqAtividade);
		if (present_seqAtividade)
			list.add(seqAtividade);

		boolean present_seqFuncaoAtiv = true && (isSetSeqFuncaoAtiv());
		list.add(present_seqFuncaoAtiv);
		if (present_seqFuncaoAtiv)
			list.add(seqFuncaoAtiv);

		boolean present_anoInic = true && (isSetAnoInic());
		list.add(present_anoInic);
		if (present_anoInic)
			list.add(anoInic);

		boolean present_mesInic = true && (isSetMesInic());
		list.add(present_mesInic);
		if (present_mesInic)
			list.add(mesInic);

		boolean present_anoFim = true && (isSetAnoFim());
		list.add(present_anoFim);
		if (present_anoFim)
			list.add(anoFim);

		boolean present_mesFim = true && (isSetMesFim());
		list.add(present_mesFim);
		if (present_mesFim)
			list.add(mesFim);

		boolean present_staAtividadeAtual = true && (isSetStaAtividadeAtual());
		list.add(present_staAtividadeAtual);
		if (present_staAtividadeAtual)
			list.add(staAtividadeAtual);

		boolean present_dscNaturAtiv = true && (isSetDscNaturAtiv());
		list.add(present_dscNaturAtiv);
		if (present_dscNaturAtiv)
			list.add(dscNaturAtiv);

		boolean present_dscNaturAtivGrupo = true && (isSetDscNaturAtivGrupo());
		list.add(present_dscNaturAtivGrupo);
		if (present_dscNaturAtivGrupo)
			list.add(dscNaturAtivGrupo);

		boolean present_codNaturAtiv = true && (isSetCodNaturAtiv());
		list.add(present_codNaturAtiv);
		if (present_codNaturAtiv)
			list.add(codNaturAtiv);

		boolean present_codNaturAtivGrupo = true && (isSetCodNaturAtivGrupo());
		list.add(present_codNaturAtivGrupo);
		if (present_codNaturAtivGrupo)
			list.add(codNaturAtivGrupo);

		return list.hashCode();
	}

	@Override
	public int compareTo(AtuacaoAtividadeFuncao other) {
		if (!getClass().equals(other.getClass())) {
			return getClass().getName().compareTo(other.getClass().getName());
		}

		int lastComparison = 0;

		lastComparison = Boolean.valueOf(isSetNroIdCnpq()).compareTo(other.isSetNroIdCnpq());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetNroIdCnpq()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nroIdCnpq, other.nroIdCnpq);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetSeqAtividade()).compareTo(other.isSetSeqAtividade());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetSeqAtividade()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.seqAtividade, other.seqAtividade);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetSeqFuncaoAtiv()).compareTo(other.isSetSeqFuncaoAtiv());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetSeqFuncaoAtiv()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.seqFuncaoAtiv, other.seqFuncaoAtiv);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetAnoInic()).compareTo(other.isSetAnoInic());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetAnoInic()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.anoInic, other.anoInic);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetMesInic()).compareTo(other.isSetMesInic());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetMesInic()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.mesInic, other.mesInic);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetAnoFim()).compareTo(other.isSetAnoFim());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetAnoFim()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.anoFim, other.anoFim);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetMesFim()).compareTo(other.isSetMesFim());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetMesFim()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.mesFim, other.mesFim);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetStaAtividadeAtual()).compareTo(other.isSetStaAtividadeAtual());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetStaAtividadeAtual()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.staAtividadeAtual, other.staAtividadeAtual);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetDscNaturAtiv()).compareTo(other.isSetDscNaturAtiv());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetDscNaturAtiv()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dscNaturAtiv, other.dscNaturAtiv);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetDscNaturAtivGrupo()).compareTo(other.isSetDscNaturAtivGrupo());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetDscNaturAtivGrupo()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dscNaturAtivGrupo, other.dscNaturAtivGrupo);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetCodNaturAtiv()).compareTo(other.isSetCodNaturAtiv());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetCodNaturAtiv()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.codNaturAtiv, other.codNaturAtiv);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetCodNaturAtivGrupo()).compareTo(other.isSetCodNaturAtivGrupo());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetCodNaturAtivGrupo()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.codNaturAtivGrupo, other.codNaturAtivGrupo);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		return 0;
	}

	public _Fields fieldForId(int fieldId) {
		return _Fields.findByThriftId(fieldId);
	}

	public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
		schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
	}

	public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
		schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder("AtuacaoAtividadeFuncao(");
		boolean first = true;

		sb.append("nroIdCnpq:");
		if (this.nroIdCnpq == null) {
			sb.append("null");
		} else {
			sb.append(this.nroIdCnpq);
		}
		first = false;
		if (isSetSeqAtividade()) {
			if (!first)
				sb.append(", ");
			sb.append("seqAtividade:");
			sb.append(this.seqAtividade);
			first = false;
		}
		if (isSetSeqFuncaoAtiv()) {
			if (!first)
				sb.append(", ");
			sb.append("seqFuncaoAtiv:");
			sb.append(this.seqFuncaoAtiv);
			first = false;
		}
		if (isSetAnoInic()) {
			if (!first)
				sb.append(", ");
			sb.append("anoInic:");
			if (this.anoInic == null) {
				sb.append("null");
			} else {
				sb.append(this.anoInic);
			}
			first = false;
		}
		if (isSetMesInic()) {
			if (!first)
				sb.append(", ");
			sb.append("mesInic:");
			if (this.mesInic == null) {
				sb.append("null");
			} else {
				sb.append(this.mesInic);
			}
			first = false;
		}
		if (isSetAnoFim()) {
			if (!first)
				sb.append(", ");
			sb.append("anoFim:");
			if (this.anoFim == null) {
				sb.append("null");
			} else {
				sb.append(this.anoFim);
			}
			first = false;
		}
		if (isSetMesFim()) {
			if (!first)
				sb.append(", ");
			sb.append("mesFim:");
			if (this.mesFim == null) {
				sb.append("null");
			} else {
				sb.append(this.mesFim);
			}
			first = false;
		}
		if (isSetStaAtividadeAtual()) {
			if (!first)
				sb.append(", ");
			sb.append("staAtividadeAtual:");
			if (this.staAtividadeAtual == null) {
				sb.append("null");
			} else {
				sb.append(this.staAtividadeAtual);
			}
			first = false;
		}
		if (isSetDscNaturAtiv()) {
			if (!first)
				sb.append(", ");
			sb.append("dscNaturAtiv:");
			if (this.dscNaturAtiv == null) {
				sb.append("null");
			} else {
				sb.append(this.dscNaturAtiv);
			}
			first = false;
		}
		if (isSetDscNaturAtivGrupo()) {
			if (!first)
				sb.append(", ");
			sb.append("dscNaturAtivGrupo:");
			if (this.dscNaturAtivGrupo == null) {
				sb.append("null");
			} else {
				sb.append(this.dscNaturAtivGrupo);
			}
			first = false;
		}
		if (isSetCodNaturAtiv()) {
			if (!first)
				sb.append(", ");
			sb.append("codNaturAtiv:");
			if (this.codNaturAtiv == null) {
				sb.append("null");
			} else {
				sb.append(this.codNaturAtiv);
			}
			first = false;
		}
		if (isSetCodNaturAtivGrupo()) {
			if (!first)
				sb.append(", ");
			sb.append("codNaturAtivGrupo:");
			if (this.codNaturAtivGrupo == null) {
				sb.append("null");
			} else {
				sb.append(this.codNaturAtivGrupo);
			}
			first = false;
		}
		sb.append(")");
		return sb.toString();
	}

	public void validate() throws org.apache.thrift.TException {
		// check for required fields
		if (!isSetNroIdCnpq()) {
			throw new org.apache.thrift.protocol.TProtocolException("Required field 'nroIdCnpq' is unset! Struct:" + toString());
		}

		// check for sub-struct validity
	}

	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
		try {
			write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
		} catch (org.apache.thrift.TException te) {
			throw new java.io.IOException(te);
		}
	}

	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
		try {
			// it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
			__isset_bitfield = 0;
			read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
		} catch (org.apache.thrift.TException te) {
			throw new java.io.IOException(te);
		}
	}

	private static class AtuacaoAtividadeFuncaoStandardSchemeFactory implements SchemeFactory {
		public AtuacaoAtividadeFuncaoStandardScheme getScheme() {
			return new AtuacaoAtividadeFuncaoStandardScheme();
		}
	}

	private static class AtuacaoAtividadeFuncaoStandardScheme extends StandardScheme<AtuacaoAtividadeFuncao> {

		public void read(org.apache.thrift.protocol.TProtocol iprot, AtuacaoAtividadeFuncao struct) throws org.apache.thrift.TException {
			org.apache.thrift.protocol.TField schemeField;
			iprot.readStructBegin();
			while (true) {
				schemeField = iprot.readFieldBegin();
				if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
					break;
				}
				switch (schemeField.id) {
				case 1: // NRO_ID_CNPQ
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.nroIdCnpq = iprot.readString();
						struct.setNroIdCnpqIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 2: // SEQ_ATIVIDADE
					if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
						struct.seqAtividade = iprot.readI32();
						struct.setSeqAtividadeIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 3: // SEQ_FUNCAO_ATIV
					if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
						struct.seqFuncaoAtiv = iprot.readI32();
						struct.setSeqFuncaoAtivIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 4: // ANO_INIC
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.anoInic = iprot.readString();
						struct.setAnoInicIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 5: // MES_INIC
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.mesInic = iprot.readString();
						struct.setMesInicIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 6: // ANO_FIM
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.anoFim = iprot.readString();
						struct.setAnoFimIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 7: // MES_FIM
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.mesFim = iprot.readString();
						struct.setMesFimIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 8: // STA_ATIVIDADE_ATUAL
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.staAtividadeAtual = iprot.readString();
						struct.setStaAtividadeAtualIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 9: // DSC_NATUR_ATIV
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.dscNaturAtiv = iprot.readString();
						struct.setDscNaturAtivIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 10: // DSC_NATUR_ATIV_GRUPO
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.dscNaturAtivGrupo = iprot.readString();
						struct.setDscNaturAtivGrupoIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 11: // COD_NATUR_ATIV
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.codNaturAtiv = iprot.readString();
						struct.setCodNaturAtivIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 12: // COD_NATUR_ATIV_GRUPO
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.codNaturAtivGrupo = iprot.readString();
						struct.setCodNaturAtivGrupoIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				default:
					org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
				}
				iprot.readFieldEnd();
			}
			iprot.readStructEnd();
			struct.validate();
		}

		public void write(org.apache.thrift.protocol.TProtocol oprot, AtuacaoAtividadeFuncao struct) throws org.apache.thrift.TException {
			struct.validate();

			oprot.writeStructBegin(STRUCT_DESC);
			if (struct.nroIdCnpq != null) {
				oprot.writeFieldBegin(NRO_ID_CNPQ_FIELD_DESC);
				oprot.writeString(struct.nroIdCnpq);
				oprot.writeFieldEnd();
			}
			if (struct.isSetSeqAtividade()) {
				oprot.writeFieldBegin(SEQ_ATIVIDADE_FIELD_DESC);
				oprot.writeI32(struct.seqAtividade);
				oprot.writeFieldEnd();
			}
			if (struct.isSetSeqFuncaoAtiv()) {
				oprot.writeFieldBegin(SEQ_FUNCAO_ATIV_FIELD_DESC);
				oprot.writeI32(struct.seqFuncaoAtiv);
				oprot.writeFieldEnd();
			}
			if (struct.anoInic != null) {
				if (struct.isSetAnoInic()) {
					oprot.writeFieldBegin(ANO_INIC_FIELD_DESC);
					oprot.writeString(struct.anoInic);
					oprot.writeFieldEnd();
				}
			}
			if (struct.mesInic != null) {
				if (struct.isSetMesInic()) {
					oprot.writeFieldBegin(MES_INIC_FIELD_DESC);
					oprot.writeString(struct.mesInic);
					oprot.writeFieldEnd();
				}
			}
			if (struct.anoFim != null) {
				if (struct.isSetAnoFim()) {
					oprot.writeFieldBegin(ANO_FIM_FIELD_DESC);
					oprot.writeString(struct.anoFim);
					oprot.writeFieldEnd();
				}
			}
			if (struct.mesFim != null) {
				if (struct.isSetMesFim()) {
					oprot.writeFieldBegin(MES_FIM_FIELD_DESC);
					oprot.writeString(struct.mesFim);
					oprot.writeFieldEnd();
				}
			}
			if (struct.staAtividadeAtual != null) {
				if (struct.isSetStaAtividadeAtual()) {
					oprot.writeFieldBegin(STA_ATIVIDADE_ATUAL_FIELD_DESC);
					oprot.writeString(struct.staAtividadeAtual);
					oprot.writeFieldEnd();
				}
			}
			if (struct.dscNaturAtiv != null) {
				if (struct.isSetDscNaturAtiv()) {
					oprot.writeFieldBegin(DSC_NATUR_ATIV_FIELD_DESC);
					oprot.writeString(struct.dscNaturAtiv);
					oprot.writeFieldEnd();
				}
			}
			if (struct.dscNaturAtivGrupo != null) {
				if (struct.isSetDscNaturAtivGrupo()) {
					oprot.writeFieldBegin(DSC_NATUR_ATIV_GRUPO_FIELD_DESC);
					oprot.writeString(struct.dscNaturAtivGrupo);
					oprot.writeFieldEnd();
				}
			}
			if (struct.codNaturAtiv != null) {
				if (struct.isSetCodNaturAtiv()) {
					oprot.writeFieldBegin(COD_NATUR_ATIV_FIELD_DESC);
					oprot.writeString(struct.codNaturAtiv);
					oprot.writeFieldEnd();
				}
			}
			if (struct.codNaturAtivGrupo != null) {
				if (struct.isSetCodNaturAtivGrupo()) {
					oprot.writeFieldBegin(COD_NATUR_ATIV_GRUPO_FIELD_DESC);
					oprot.writeString(struct.codNaturAtivGrupo);
					oprot.writeFieldEnd();
				}
			}
			oprot.writeFieldStop();
			oprot.writeStructEnd();
		}

	}

	private static class AtuacaoAtividadeFuncaoTupleSchemeFactory implements SchemeFactory {
		public AtuacaoAtividadeFuncaoTupleScheme getScheme() {
			return new AtuacaoAtividadeFuncaoTupleScheme();
		}
	}

	private static class AtuacaoAtividadeFuncaoTupleScheme extends TupleScheme<AtuacaoAtividadeFuncao> {

		@Override
		public void write(org.apache.thrift.protocol.TProtocol prot, AtuacaoAtividadeFuncao struct) throws org.apache.thrift.TException {
			TTupleProtocol oprot = (TTupleProtocol) prot;
			oprot.writeString(struct.nroIdCnpq);
			BitSet optionals = new BitSet();
			if (struct.isSetSeqAtividade()) {
				optionals.set(0);
			}
			if (struct.isSetSeqFuncaoAtiv()) {
				optionals.set(1);
			}
			if (struct.isSetAnoInic()) {
				optionals.set(2);
			}
			if (struct.isSetMesInic()) {
				optionals.set(3);
			}
			if (struct.isSetAnoFim()) {
				optionals.set(4);
			}
			if (struct.isSetMesFim()) {
				optionals.set(5);
			}
			if (struct.isSetStaAtividadeAtual()) {
				optionals.set(6);
			}
			if (struct.isSetDscNaturAtiv()) {
				optionals.set(7);
			}
			if (struct.isSetDscNaturAtivGrupo()) {
				optionals.set(8);
			}
			if (struct.isSetCodNaturAtiv()) {
				optionals.set(9);
			}
			if (struct.isSetCodNaturAtivGrupo()) {
				optionals.set(10);
			}
			oprot.writeBitSet(optionals, 11);
			if (struct.isSetSeqAtividade()) {
				oprot.writeI32(struct.seqAtividade);
			}
			if (struct.isSetSeqFuncaoAtiv()) {
				oprot.writeI32(struct.seqFuncaoAtiv);
			}
			if (struct.isSetAnoInic()) {
				oprot.writeString(struct.anoInic);
			}
			if (struct.isSetMesInic()) {
				oprot.writeString(struct.mesInic);
			}
			if (struct.isSetAnoFim()) {
				oprot.writeString(struct.anoFim);
			}
			if (struct.isSetMesFim()) {
				oprot.writeString(struct.mesFim);
			}
			if (struct.isSetStaAtividadeAtual()) {
				oprot.writeString(struct.staAtividadeAtual);
			}
			if (struct.isSetDscNaturAtiv()) {
				oprot.writeString(struct.dscNaturAtiv);
			}
			if (struct.isSetDscNaturAtivGrupo()) {
				oprot.writeString(struct.dscNaturAtivGrupo);
			}
			if (struct.isSetCodNaturAtiv()) {
				oprot.writeString(struct.codNaturAtiv);
			}
			if (struct.isSetCodNaturAtivGrupo()) {
				oprot.writeString(struct.codNaturAtivGrupo);
			}
		}

		@Override
		public void read(org.apache.thrift.protocol.TProtocol prot, AtuacaoAtividadeFuncao struct) throws org.apache.thrift.TException {
			TTupleProtocol iprot = (TTupleProtocol) prot;
			struct.nroIdCnpq = iprot.readString();
			struct.setNroIdCnpqIsSet(true);
			BitSet incoming = iprot.readBitSet(11);
			if (incoming.get(0)) {
				struct.seqAtividade = iprot.readI32();
				struct.setSeqAtividadeIsSet(true);
			}
			if (incoming.get(1)) {
				struct.seqFuncaoAtiv = iprot.readI32();
				struct.setSeqFuncaoAtivIsSet(true);
			}
			if (incoming.get(2)) {
				struct.anoInic = iprot.readString();
				struct.setAnoInicIsSet(true);
			}
			if (incoming.get(3)) {
				struct.mesInic = iprot.readString();
				struct.setMesInicIsSet(true);
			}
			if (incoming.get(4)) {
				struct.anoFim = iprot.readString();
				struct.setAnoFimIsSet(true);
			}
			if (incoming.get(5)) {
				struct.mesFim = iprot.readString();
				struct.setMesFimIsSet(true);
			}
			if (incoming.get(6)) {
				struct.staAtividadeAtual = iprot.readString();
				struct.setStaAtividadeAtualIsSet(true);
			}
			if (incoming.get(7)) {
				struct.dscNaturAtiv = iprot.readString();
				struct.setDscNaturAtivIsSet(true);
			}
			if (incoming.get(8)) {
				struct.dscNaturAtivGrupo = iprot.readString();
				struct.setDscNaturAtivGrupoIsSet(true);
			}
			if (incoming.get(9)) {
				struct.codNaturAtiv = iprot.readString();
				struct.setCodNaturAtivIsSet(true);
			}
			if (incoming.get(10)) {
				struct.codNaturAtivGrupo = iprot.readString();
				struct.setCodNaturAtivGrupoIsSet(true);
			}
		}
	}

}
